+ Building build/params.elf [xbuild/build]
+ Building build/params.bin [objcopy]
cargo objdump -- -disassemble -no-show-raw-insn -print-imm-hex build/params.elf

build/params.elf:	file format ELF64-aarch64-little

Disassembly of section .text:
ffffffffc0000000 _start:
ffffffffc0000000:	adrp	x8, #0x7000
ffffffffc0000004:	add	x8, x8, #0xfe0
ffffffffc0000008:	adrp	x9, #0x7000
ffffffffc000000c:	add	x9, x9, #0xfe0
ffffffffc0000010:	cmp	x9, x8
ffffffffc0000014:	b.hs	#0x18 <_start+0x2c>
ffffffffc0000018:	adrp	x9, #0x7000
ffffffffc000001c:	add	x9, x9, #0xfe0
ffffffffc0000020:	str	xzr, [x9], #0x8
ffffffffc0000024:	cmp	x9, x8
ffffffffc0000028:	b.lo	#-0x8 <_start+0x20>
ffffffffc000002c:	str	x30, [sp, #-0x10]!
ffffffffc0000030:	mov	x0, x0
ffffffffc0000034:	bl	#0x196c <kernel_api::args::CArgs::from_raw::h2e9f2887e59b4fc6>
ffffffffc0000038:	bl	#0x630 <params::main::ha8d309afaa194cac>
ffffffffc000003c:	bl	#0xfb4 <kernel_api::syscall::exit::hf4974f355d627d7c>
ffffffffc0000040:	brk	#0x1
ffffffffc0000044:	udf	#0x0

ffffffffc0000048 <alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f:
ffffffffc0000048:	sub	sp, sp, #0x90
ffffffffc000004c:	stp	x19, x30, [sp, #0x80]
ffffffffc0000050:	mov	x19, x8
ffffffffc0000054:	add	x8, sp, #0x20
ffffffffc0000058:	stp	x25, x24, [sp, #0x50]
ffffffffc000005c:	stp	x23, x22, [sp, #0x60]
ffffffffc0000060:	stp	x21, x20, [sp, #0x70]
ffffffffc0000064:	mov	x21, x0
ffffffffc0000068:	bl	#0x1970 <<kernel_api::args::ArgsIter as core::iter::traits::iterator::Iterator>::next::he64c1111dbd51964>
ffffffffc000006c:	ldr	x8, [sp, #0x20]
ffffffffc0000070:	cbz	x8, #0x14c <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x174>
ffffffffc0000074:	ldp	x9, x8, [sp, #0x28]
ffffffffc0000078:	ldr	x10, [sp, #0x20]
ffffffffc000007c:	orr	w0, wzr, #0x18
ffffffffc0000080:	orr	w1, wzr, #0x8
ffffffffc0000084:	stp	x9, x8, [sp, #0x40]
ffffffffc0000088:	str	x10, [sp, #0x38]
ffffffffc000008c:	bl	#0x90c <__rust_alloc>
ffffffffc0000090:	cbz	x0, #0x18c <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x1d4>
ffffffffc0000094:	ldp	x9, x8, [sp, #0x40]
ffffffffc0000098:	ldr	x10, [sp, #0x38]
ffffffffc000009c:	mov	x20, x0
ffffffffc00000a0:	ldp	x12, x11, [x21, #0x8]
ffffffffc00000a4:	stp	x9, x8, [x0, #0x8]
ffffffffc00000a8:	ldr	x8, [x21]
ffffffffc00000ac:	str	x10, [x0]
ffffffffc00000b0:	add	x0, sp, #0x8
ffffffffc00000b4:	stp	x12, x11, [sp, #0x10]
ffffffffc00000b8:	str	x8, [sp, #0x8]
ffffffffc00000bc:	add	x8, sp, #0x20
ffffffffc00000c0:	bl	#0x1918 <<kernel_api::args::ArgsIter as core::iter::traits::iterator::Iterator>::next::he64c1111dbd51964>
ffffffffc00000c4:	ldr	x8, [sp, #0x20]
ffffffffc00000c8:	cbz	x8, #0x128 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x1a8>
ffffffffc00000cc:	orr	w25, wzr, #0x1
ffffffffc00000d0:	orr	w24, wzr, #0x18
ffffffffc00000d4:	orr	w22, wzr, #0x1
ffffffffc00000d8:	ldp	x9, x8, [sp, #0x28]
ffffffffc00000dc:	ldr	x10, [sp, #0x20]
ffffffffc00000e0:	cmp	x22, x25
ffffffffc00000e4:	stp	x9, x8, [sp, #0x40]
ffffffffc00000e8:	str	x10, [sp, #0x38]
ffffffffc00000ec:	b.ne	#0x54 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0xf8>
ffffffffc00000f0:	adds	x23, x25, #0x1
ffffffffc00000f4:	b.hs	#0x110 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x1bc>
ffffffffc00000f8:	lsl	x8, x25, #1
ffffffffc00000fc:	cmp	x23, x8
ffffffffc0000100:	csel	x22, x8, x23, lo
ffffffffc0000104:	umulh	x8, x22, x24
ffffffffc0000108:	cmp	xzr, x8
ffffffffc000010c:	b.ne	#0xf8 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x1bc>
ffffffffc0000110:	add	x8, x22, x22, lsl #1
ffffffffc0000114:	lsl	x21, x8, #3
ffffffffc0000118:	cbz	x25, #0x30 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x100>
ffffffffc000011c:	add	x8, x25, x25, lsl #1
ffffffffc0000120:	mov	x0, x20
ffffffffc0000124:	orr	w2, wzr, #0x8
ffffffffc0000128:	mov	x3, x21
ffffffffc000012c:	lsl	x1, x8, #3
ffffffffc0000130:	bl	#0x888 <__rust_realloc>
ffffffffc0000134:	mov	x20, x0
ffffffffc0000138:	cbnz	x0, #0x24 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x114>
ffffffffc000013c:	b	#0xd0 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x1c4>
ffffffffc0000140:	add	x23, x25, #0x1
ffffffffc0000144:	b	#0x18 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x114>
ffffffffc0000148:	mov	x0, x21
ffffffffc000014c:	orr	w1, wzr, #0x8
ffffffffc0000150:	bl	#0x848 <__rust_alloc>
ffffffffc0000154:	mov	x20, x0
ffffffffc0000158:	cbz	x0, #0xb4 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x1c4>
ffffffffc000015c:	madd	x8, x25, x24, x20
ffffffffc0000160:	ldr	x10, [sp, #0x38]
ffffffffc0000164:	ldp	x11, x9, [sp, #0x40]
ffffffffc0000168:	add	x0, sp, #0x8
ffffffffc000016c:	str	x10, [x8]
ffffffffc0000170:	stp	x11, x9, [x8, #0x8]
ffffffffc0000174:	add	x8, sp, #0x20
ffffffffc0000178:	bl	#0x1860 <<kernel_api::args::ArgsIter as core::iter::traits::iterator::Iterator>::next::he64c1111dbd51964>
ffffffffc000017c:	ldr	x8, [sp, #0x20]
ffffffffc0000180:	mov	x25, x23
ffffffffc0000184:	cbnz	x8, #-0xac <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x90>
ffffffffc0000188:	ldr	x1, [sp, #0x10]
ffffffffc000018c:	cbz	x1, #0x10 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x154>
ffffffffc0000190:	ldr	x0, [sp, #0x8]
ffffffffc0000194:	orr	w2, wzr, #0x1
ffffffffc0000198:	bl	#0x810 <__rust_dealloc>
ffffffffc000019c:	stp	x20, x22, [x19]
ffffffffc00001a0:	str	x23, [x19, #0x10]
ffffffffc00001a4:	ldp	x19, x30, [sp, #0x80]
ffffffffc00001a8:	ldp	x21, x20, [sp, #0x70]
ffffffffc00001ac:	ldp	x23, x22, [sp, #0x60]
ffffffffc00001b0:	ldp	x25, x24, [sp, #0x50]
ffffffffc00001b4:	add	sp, sp, #0x90
ffffffffc00001b8:	ret
ffffffffc00001bc:	ldr	x1, [x21, #0x8]
ffffffffc00001c0:	orr	w8, wzr, #0x8
ffffffffc00001c4:	stp	xzr, xzr, [x19, #0x8]
ffffffffc00001c8:	str	x8, [x19]
ffffffffc00001cc:	cbz	x1, #-0x28 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x15c>
ffffffffc00001d0:	ldr	x0, [x21]
ffffffffc00001d4:	orr	w2, wzr, #0x1
ffffffffc00001d8:	ldp	x19, x30, [sp, #0x80]
ffffffffc00001dc:	ldp	x21, x20, [sp, #0x70]
ffffffffc00001e0:	ldp	x23, x22, [sp, #0x60]
ffffffffc00001e4:	ldp	x25, x24, [sp, #0x50]
ffffffffc00001e8:	add	sp, sp, #0x90
ffffffffc00001ec:	b	#0x7bc <__rust_dealloc>
ffffffffc00001f0:	orr	w23, wzr, #0x1
ffffffffc00001f4:	orr	w22, wzr, #0x1
ffffffffc00001f8:	ldr	x1, [sp, #0x10]
ffffffffc00001fc:	cbnz	x1, #-0x6c <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x148>
ffffffffc0000200:	b	#-0x64 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f+0x154>
ffffffffc0000204:	bl	#0x18b4 <alloc::raw_vec::capacity_overflow::he4b6819a339f6049>
ffffffffc0000208:	brk	#0x1
ffffffffc000020c:	mov	x0, x21
ffffffffc0000210:	orr	w1, wzr, #0x8
ffffffffc0000214:	bl	#0x18dc <alloc::alloc::handle_alloc_error::ha05a6b3a93f59cd1>
ffffffffc0000218:	brk	#0x1
ffffffffc000021c:	orr	w0, wzr, #0x18
ffffffffc0000220:	orr	w1, wzr, #0x8
ffffffffc0000224:	bl	#0x18cc <alloc::alloc::handle_alloc_error::ha05a6b3a93f59cd1>
ffffffffc0000228:	brk	#0x1
ffffffffc000022c:	udf	#0x0

ffffffffc0000230 <&T as core::fmt::Display>::fmt::h6689d429bc7c2654:
ffffffffc0000230:	ldp	x8, x9, [x0]
ffffffffc0000234:	mov	x2, x1
ffffffffc0000238:	mov	x0, x8
ffffffffc000023c:	mov	x1, x9
ffffffffc0000240:	b	#0x47d8 <<str as core::fmt::Display>::fmt::h342559e7c894975f>
ffffffffc0000244:	udf	#0x0

ffffffffc0000248 <&T as core::fmt::Display>::fmt::h8b44a83d3d7bab5b:
ffffffffc0000248:	ldr	x0, [x0]
ffffffffc000024c:	b	#0x3bac <<core::fmt::Arguments as core::fmt::Display>::fmt::hc31f8582b7cdd6f6>

ffffffffc0000250 rust_begin_unwind:
ffffffffc0000250:	sub	sp, sp, #0xa0
ffffffffc0000254:	stp	x21, x20, [sp, #0x80]
ffffffffc0000258:	adrp	x21, #0x5000
ffffffffc000025c:	stp	x19, x30, [sp, #0x90]
ffffffffc0000260:	mov	x19, x0
ffffffffc0000264:	add	x21, x21, #0x740
ffffffffc0000268:	stp	xzr, x26, [sp, #0x48]
ffffffffc000026c:	add	x0, sp, #0x20
ffffffffc0000270:	stp	x25, x24, [sp, #0x60]
ffffffffc0000274:	stp	x23, x22, [sp, #0x70]
ffffffffc0000278:	stp	x21, xzr, [sp, #0x20]
ffffffffc000027c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000280:	str	x21, [sp, #0x40]
ffffffffc0000284:	bl	#0xf44 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000288:	adrp	x22, #0x5000
ffffffffc000028c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000290:	add	x22, x22, #0x748
ffffffffc0000294:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000298:	orr	w20, wzr, #0x1
ffffffffc000029c:	add	x0, sp, #0x20
ffffffffc00002a0:	stp	x22, x20, [sp, #0x20]
ffffffffc00002a4:	bl	#0xf24 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00002a8:	adrp	x8, #0x5000
ffffffffc00002ac:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00002b0:	add	x8, x8, #0x768
ffffffffc00002b4:	stp	x21, xzr, [sp, #0x40]
ffffffffc00002b8:	add	x0, sp, #0x20
ffffffffc00002bc:	stp	x8, x20, [sp, #0x20]
ffffffffc00002c0:	bl	#0xf08 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00002c4:	add	x0, sp, #0x20
ffffffffc00002c8:	stp	x22, x20, [sp, #0x20]
ffffffffc00002cc:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00002d0:	stp	x21, xzr, [sp, #0x40]
ffffffffc00002d4:	bl	#0xef4 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00002d8:	adrp	x8, #0x5000
ffffffffc00002dc:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00002e0:	add	x8, x8, #0x788
ffffffffc00002e4:	stp	x21, xzr, [sp, #0x40]
ffffffffc00002e8:	add	x0, sp, #0x20
ffffffffc00002ec:	stp	x8, x20, [sp, #0x20]
ffffffffc00002f0:	bl	#0xed8 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00002f4:	add	x0, sp, #0x20
ffffffffc00002f8:	stp	x22, x20, [sp, #0x20]
ffffffffc00002fc:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000300:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000304:	bl	#0xec4 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000308:	adrp	x8, #0x5000
ffffffffc000030c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000310:	add	x8, x8, #0x7a8
ffffffffc0000314:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000318:	add	x0, sp, #0x20
ffffffffc000031c:	stp	x8, x20, [sp, #0x20]
ffffffffc0000320:	bl	#0xea8 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000324:	add	x0, sp, #0x20
ffffffffc0000328:	stp	x22, x20, [sp, #0x20]
ffffffffc000032c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000330:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000334:	bl	#0xe94 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000338:	adrp	x8, #0x5000
ffffffffc000033c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000340:	add	x8, x8, #0x7c0
ffffffffc0000344:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000348:	add	x0, sp, #0x20
ffffffffc000034c:	stp	x8, x20, [sp, #0x20]
ffffffffc0000350:	bl	#0xe78 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000354:	add	x0, sp, #0x20
ffffffffc0000358:	stp	x22, x20, [sp, #0x20]
ffffffffc000035c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000360:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000364:	bl	#0xe64 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000368:	adrp	x8, #0x5000
ffffffffc000036c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000370:	add	x8, x8, #0x7d8
ffffffffc0000374:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000378:	add	x0, sp, #0x20
ffffffffc000037c:	stp	x8, x20, [sp, #0x20]
ffffffffc0000380:	bl	#0xe48 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000384:	add	x0, sp, #0x20
ffffffffc0000388:	stp	x22, x20, [sp, #0x20]
ffffffffc000038c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000390:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000394:	bl	#0xe34 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000398:	add	x0, sp, #0x20
ffffffffc000039c:	stp	x21, xzr, [sp, #0x20]
ffffffffc00003a0:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00003a4:	stp	x21, xzr, [sp, #0x40]
ffffffffc00003a8:	bl	#0xe20 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00003ac:	add	x0, sp, #0x20
ffffffffc00003b0:	stp	x22, x20, [sp, #0x20]
ffffffffc00003b4:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00003b8:	stp	x21, xzr, [sp, #0x40]
ffffffffc00003bc:	bl	#0xe0c <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00003c0:	adrp	x8, #0x5000
ffffffffc00003c4:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00003c8:	add	x8, x8, #0x7f0
ffffffffc00003cc:	stp	x21, xzr, [sp, #0x40]
ffffffffc00003d0:	add	x0, sp, #0x20
ffffffffc00003d4:	stp	x8, x20, [sp, #0x20]
ffffffffc00003d8:	bl	#0xdf0 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00003dc:	add	x0, sp, #0x20
ffffffffc00003e0:	stp	x22, x20, [sp, #0x20]
ffffffffc00003e4:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00003e8:	stp	x21, xzr, [sp, #0x40]
ffffffffc00003ec:	bl	#0xddc <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00003f0:	mov	x0, x19
ffffffffc00003f4:	bl	#0x2cc4 <core::panic::PanicInfo::location::h4ff520a176df480f>
ffffffffc00003f8:	cbz	x0, #0xd4 <rust_begin_unwind+0x27c>
ffffffffc00003fc:	mov	x20, x0
ffffffffc0000400:	bl	#0x2cc0 <core::panic::Location::file::h86d264eadd6fb32a>
ffffffffc0000404:	adrp	x8, #0x0
ffffffffc0000408:	stp	x0, x1, [sp, #0x10]
ffffffffc000040c:	add	x8, x8, #0x230
ffffffffc0000410:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000414:	add	x24, sp, #0x10
ffffffffc0000418:	orr	w23, wzr, #0x1
ffffffffc000041c:	mov	x25, sp
ffffffffc0000420:	stp	x24, x8, [sp]
ffffffffc0000424:	adrp	x8, #0x5000
ffffffffc0000428:	add	x8, x8, #0x840
ffffffffc000042c:	add	x0, sp, #0x20
ffffffffc0000430:	stp	x25, x23, [sp, #0x40]
ffffffffc0000434:	stp	x8, x23, [sp, #0x20]
ffffffffc0000438:	bl	#0xd90 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc000043c:	add	x0, sp, #0x20
ffffffffc0000440:	stp	x22, x23, [sp, #0x20]
ffffffffc0000444:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000448:	stp	x21, xzr, [sp, #0x40]
ffffffffc000044c:	bl	#0xd7c <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000450:	mov	x0, x20
ffffffffc0000454:	bl	#0x2c7c <core::panic::Location::line::hef66514c815da497>
ffffffffc0000458:	adrp	x26, #0x2000
ffffffffc000045c:	str	w0, [sp]
ffffffffc0000460:	adrp	x8, #0x5000
ffffffffc0000464:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000468:	add	x26, x26, #0x728
ffffffffc000046c:	stp	x24, x23, [sp, #0x40]
ffffffffc0000470:	add	x8, x8, #0x850
ffffffffc0000474:	add	x0, sp, #0x20
ffffffffc0000478:	stp	x25, x26, [sp, #0x10]
ffffffffc000047c:	stp	x8, x23, [sp, #0x20]
ffffffffc0000480:	bl	#0xd48 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000484:	add	x0, sp, #0x20
ffffffffc0000488:	stp	x22, x23, [sp, #0x20]
ffffffffc000048c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000490:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000494:	bl	#0xd34 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000498:	mov	x0, x20
ffffffffc000049c:	bl	#0x2c3c <core::panic::Location::column::h9531d8d38528b6a8>
ffffffffc00004a0:	adrp	x8, #0x5000
ffffffffc00004a4:	str	w0, [sp]
ffffffffc00004a8:	add	x8, x8, #0x870
ffffffffc00004ac:	stp	x25, x26, [sp, #0x10]
ffffffffc00004b0:	add	x0, sp, #0x20
ffffffffc00004b4:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00004b8:	stp	x24, x23, [sp, #0x40]
ffffffffc00004bc:	stp	x8, x23, [sp, #0x20]
ffffffffc00004c0:	bl	#0xd08 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00004c4:	str	x23, [sp, #0x28]
ffffffffc00004c8:	b	#0x28 <rust_begin_unwind+0x2a0>
ffffffffc00004cc:	adrp	x8, #0x5000
ffffffffc00004d0:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00004d4:	add	x8, x8, #0x8a8
ffffffffc00004d8:	stp	x21, xzr, [sp, #0x40]
ffffffffc00004dc:	orr	w20, wzr, #0x1
ffffffffc00004e0:	add	x0, sp, #0x20
ffffffffc00004e4:	stp	x8, x20, [sp, #0x20]
ffffffffc00004e8:	bl	#0xce0 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00004ec:	str	x20, [sp, #0x28]
ffffffffc00004f0:	add	x0, sp, #0x20
ffffffffc00004f4:	str	x22, [sp, #0x20]
ffffffffc00004f8:	stp	xzr, xzr, [sp, #0x30]
ffffffffc00004fc:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000500:	bl	#0xcc8 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000504:	add	x0, sp, #0x20
ffffffffc0000508:	stp	x21, xzr, [sp, #0x20]
ffffffffc000050c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000510:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000514:	bl	#0xcb4 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000518:	orr	w8, wzr, #0x1
ffffffffc000051c:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000520:	add	x0, sp, #0x20
ffffffffc0000524:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000528:	stp	x22, x8, [sp, #0x20]
ffffffffc000052c:	bl	#0xc9c <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000530:	mov	x0, x19
ffffffffc0000534:	bl	#0x2b7c <core::panic::PanicInfo::message::he12553d63173534f>
ffffffffc0000538:	cbz	x0, #0x38 <rust_begin_unwind+0x320>
ffffffffc000053c:	adrp	x9, #0x0
ffffffffc0000540:	str	x0, [sp]
ffffffffc0000544:	mov	x8, sp
ffffffffc0000548:	stp	xzr, xzr, [sp, #0x30]
ffffffffc000054c:	add	x9, x9, #0x248
ffffffffc0000550:	orr	w19, wzr, #0x1
ffffffffc0000554:	stp	x8, x9, [sp, #0x10]
ffffffffc0000558:	adrp	x8, #0x5000
ffffffffc000055c:	add	x8, x8, #0x8b8
ffffffffc0000560:	stp	x8, x19, [sp, #0x20]
ffffffffc0000564:	add	x8, sp, #0x10
ffffffffc0000568:	stp	x8, x19, [sp, #0x40]
ffffffffc000056c:	b	#0x1c <rust_begin_unwind+0x338>
ffffffffc0000570:	adrp	x8, #0x5000
ffffffffc0000574:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000578:	add	x8, x8, #0x8f0
ffffffffc000057c:	stp	x21, xzr, [sp, #0x40]
ffffffffc0000580:	orr	w19, wzr, #0x1
ffffffffc0000584:	stp	x8, x19, [sp, #0x20]
ffffffffc0000588:	add	x0, sp, #0x20
ffffffffc000058c:	bl	#0xc3c <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000590:	add	x0, sp, #0x20
ffffffffc0000594:	stp	x22, x19, [sp, #0x20]
ffffffffc0000598:	stp	xzr, xzr, [sp, #0x30]
ffffffffc000059c:	stp	x21, xzr, [sp, #0x40]
ffffffffc00005a0:	bl	#0xc28 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00005a4:	b	#0x0 <rust_begin_unwind+0x354>

ffffffffc00005a8 __rg_alloc:
ffffffffc00005a8:	mov	x2, x1
ffffffffc00005ac:	mov	x1, x0
ffffffffc00005b0:	adrp	x0, #0x7000
ffffffffc00005b4:	add	x0, x0, #0xee0
ffffffffc00005b8:	b	#0x410 <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::alloc::h9c6f1566b646ea48>
ffffffffc00005bc:	udf	#0x0

ffffffffc00005c0 __rg_dealloc:
ffffffffc00005c0:	mov	x3, x2
ffffffffc00005c4:	mov	x2, x1
ffffffffc00005c8:	mov	x1, x0
ffffffffc00005cc:	adrp	x0, #0x7000
ffffffffc00005d0:	add	x0, x0, #0xee0
ffffffffc00005d4:	b	#0x4dc <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94>

ffffffffc00005d8 __rg_realloc:
ffffffffc00005d8:	stp	x23, x22, [sp, #-0x30]!
ffffffffc00005dc:	stp	x21, x20, [sp, #0x10]
ffffffffc00005e0:	mov	x21, x0
ffffffffc00005e4:	adrp	x0, #0x7000
ffffffffc00005e8:	stp	x19, x30, [sp, #0x20]
ffffffffc00005ec:	mov	x20, x1
ffffffffc00005f0:	add	x0, x0, #0xee0
ffffffffc00005f4:	mov	x1, x3
ffffffffc00005f8:	mov	x23, x3
ffffffffc00005fc:	mov	x19, x2
ffffffffc0000600:	bl	#0x3c8 <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::alloc::h9c6f1566b646ea48>
ffffffffc0000604:	mov	x22, x0
ffffffffc0000608:	cbz	x0, #0x30 <__rg_realloc+0x60>
ffffffffc000060c:	cmp	x20, x23
ffffffffc0000610:	csel	x2, x23, x20, hi
ffffffffc0000614:	mov	x0, x22
ffffffffc0000618:	mov	x1, x21
ffffffffc000061c:	bl	#0x4cc4 <memcpy>
ffffffffc0000620:	adrp	x0, #0x7000
ffffffffc0000624:	add	x0, x0, #0xee0
ffffffffc0000628:	mov	x1, x21
ffffffffc000062c:	mov	x2, x20
ffffffffc0000630:	mov	x3, x19
ffffffffc0000634:	bl	#0x47c <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94>
ffffffffc0000638:	ldp	x19, x30, [sp, #0x20]
ffffffffc000063c:	ldp	x21, x20, [sp, #0x10]
ffffffffc0000640:	mov	x0, x22
ffffffffc0000644:	ldp	x23, x22, [sp], #0x30
ffffffffc0000648:	ret
ffffffffc000064c:	udf	#0x0

ffffffffc0000650 <alloc::string::String as core::fmt::Display>::fmt::h94e56b140be89baa:
ffffffffc0000650:	ldr	x8, [x0]
ffffffffc0000654:	mov	x2, x1
ffffffffc0000658:	ldr	x9, [x0, #0x10]
ffffffffc000065c:	mov	x0, x8
ffffffffc0000660:	mov	x1, x9
ffffffffc0000664:	b	#0x43b4 <<str as core::fmt::Display>::fmt::h342559e7c894975f>

ffffffffc0000668 params::main::ha8d309afaa194cac:
ffffffffc0000668:	sub	sp, sp, #0x130
ffffffffc000066c:	stp	x22, x21, [sp, #0x100]
ffffffffc0000670:	adrp	x8, #0x5000
ffffffffc0000674:	adrp	x21, #0x5000
ffffffffc0000678:	stp	x20, x19, [sp, #0x110]
ffffffffc000067c:	orr	w22, wzr, #0x1
ffffffffc0000680:	stp	x28, x27, [sp, #0xd0]
ffffffffc0000684:	add	x8, x8, #0x910
ffffffffc0000688:	stp	x26, x25, [sp, #0xe0]
ffffffffc000068c:	mov	x20, x0
ffffffffc0000690:	stp	x24, x23, [sp, #0xf0]
ffffffffc0000694:	add	x21, x21, #0x920
ffffffffc0000698:	stp	x29, x30, [sp, #0x120]
ffffffffc000069c:	add	x0, sp, #0xa0
ffffffffc00006a0:	stp	xzr, xzr, [sp, #0xb0]
ffffffffc00006a4:	mov	x19, x1
ffffffffc00006a8:	stp	x8, x22, [sp, #0xa0]
ffffffffc00006ac:	stp	x21, xzr, [sp, #0xc0]
ffffffffc00006b0:	bl	#0xb18 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00006b4:	adrp	x23, #0x5000
ffffffffc00006b8:	stp	xzr, xzr, [sp, #0xb0]
ffffffffc00006bc:	add	x23, x23, #0x928
ffffffffc00006c0:	stp	x21, xzr, [sp, #0xc0]
ffffffffc00006c4:	add	x0, sp, #0xa0
ffffffffc00006c8:	stp	x23, x22, [sp, #0xa0]
ffffffffc00006cc:	bl	#0xafc <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00006d0:	add	x8, sp, #0x68
ffffffffc00006d4:	mov	x0, x20
ffffffffc00006d8:	mov	x1, x19
ffffffffc00006dc:	add	x28, sp, #0x68
ffffffffc00006e0:	bl	#0x12e8 <<kernel_api::args::CArgs as core::iter::traits::collect::IntoIterator>::into_iter::hf3c8da2d560349eb>
ffffffffc00006e4:	ldp	x9, x8, [sp, #0x70]
ffffffffc00006e8:	ldr	x10, [sp, #0x68]
ffffffffc00006ec:	add	x0, sp, #0xa0
ffffffffc00006f0:	stp	x9, x8, [sp, #0xa8]
ffffffffc00006f4:	add	x8, sp, #0x18
ffffffffc00006f8:	str	x10, [sp, #0xa0]
ffffffffc00006fc:	bl	#-0x6b4 <<alloc::vec::Vec<T> as alloc::vec::SpecExtend<T,I>>::from_iter::he3916b5712c3bf5f>
ffffffffc0000700:	add	x0, sp, #0xa0
ffffffffc0000704:	stp	x21, xzr, [sp, #0xa0]
ffffffffc0000708:	stp	xzr, xzr, [sp, #0xb0]
ffffffffc000070c:	stp	x21, xzr, [sp, #0xc0]
ffffffffc0000710:	bl	#0xab8 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000714:	add	x0, sp, #0xa0
ffffffffc0000718:	stp	x23, x22, [sp, #0xa0]
ffffffffc000071c:	stp	xzr, xzr, [sp, #0xb0]
ffffffffc0000720:	stp	x21, xzr, [sp, #0xc0]
ffffffffc0000724:	add	x21, sp, #0xa0
ffffffffc0000728:	bl	#0xaa0 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc000072c:	ldp	x19, x20, [sp, #0x18]
ffffffffc0000730:	ldr	x8, [sp, #0x28]
ffffffffc0000734:	orr	w9, wzr, #0x18
ffffffffc0000738:	mov	x23, x19
ffffffffc000073c:	madd	x22, x8, x9, x19
ffffffffc0000740:	cbz	x8, #0x13c <params::main::ha8d309afaa194cac+0x214>
ffffffffc0000744:	add	x27, x21, #0x10
ffffffffc0000748:	stp	x20, x19, [sp, #0x8]
ffffffffc000074c:	add	x8, sp, #0x40
ffffffffc0000750:	adrp	x24, #0x2000
ffffffffc0000754:	adrp	x21, #0x5000
ffffffffc0000758:	add	x29, x28, #0x10
ffffffffc000075c:	add	x20, x8, #0x8
ffffffffc0000760:	add	x23, x19, #0x18
ffffffffc0000764:	orr	w26, wzr, #0x1
ffffffffc0000768:	add	x24, x24, #0x8a8
ffffffffc000076c:	add	x21, x21, #0x928
ffffffffc0000770:	mov	x25, x23
ffffffffc0000774:	ldr	x8, [x25, #-0x18]!
ffffffffc0000778:	ldp	x10, x9, [x25, #0x8]
ffffffffc000077c:	stp	x10, x9, [sp, #0xa0]
ffffffffc0000780:	cbz	x8, #0x10c <params::main::ha8d309afaa194cac+0x224>
ffffffffc0000784:	ldp	x10, x9, [sp, #0xa0]
ffffffffc0000788:	str	x8, [sp, #0x40]
ffffffffc000078c:	adrp	x8, #0x0
ffffffffc0000790:	add	x8, x8, #0x650
ffffffffc0000794:	add	x19, sp, #0x40
ffffffffc0000798:	stp	x10, x9, [sp, #0x30]
ffffffffc000079c:	mov	x9, x10
ffffffffc00007a0:	ldr	x10, [sp, #0x38]
ffffffffc00007a4:	add	x0, sp, #0xa0
ffffffffc00007a8:	stp	x19, x8, [sp, #0x68]
ffffffffc00007ac:	adrp	x8, #0x5000
ffffffffc00007b0:	add	x8, x8, #0x938
ffffffffc00007b4:	stp	x9, x10, [x20]
ffffffffc00007b8:	stp	x8, x26, [sp, #0xa0]
ffffffffc00007bc:	stp	xzr, xzr, [x27]
ffffffffc00007c0:	stp	x28, x26, [sp, #0xc0]
ffffffffc00007c4:	bl	#0xa04 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00007c8:	adrp	x28, #0x5000
ffffffffc00007cc:	stp	x21, x26, [sp, #0xa0]
ffffffffc00007d0:	add	x28, x28, #0x920
ffffffffc00007d4:	stp	xzr, xzr, [x27]
ffffffffc00007d8:	add	x0, sp, #0xa0
ffffffffc00007dc:	stp	x28, xzr, [sp, #0xc0]
ffffffffc00007e0:	bl	#0x9e8 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc00007e4:	ldp	x9, x8, [sp, #0x48]
ffffffffc00007e8:	add	x0, sp, #0x68
ffffffffc00007ec:	stp	x8, x9, [sp, #0x58]
ffffffffc00007f0:	adrp	x8, #0x0
ffffffffc00007f4:	add	x8, x8, #0x900
ffffffffc00007f8:	adrp	x9, #0x5000
ffffffffc00007fc:	add	x9, x9, #0x960
ffffffffc0000800:	str	x8, [sp, #0xa8]
ffffffffc0000804:	add	x8, sp, #0x98
ffffffffc0000808:	stp	x19, x8, [sp, #0x98]
ffffffffc000080c:	add	x8, sp, #0x58
ffffffffc0000810:	stp	x8, x24, [sp, #0xb0]
ffffffffc0000814:	add	x8, sp, #0x60
ffffffffc0000818:	stp	x8, x24, [sp, #0xc0]
ffffffffc000081c:	orr	w8, wzr, #0x3
ffffffffc0000820:	stp	x9, x8, [sp, #0x68]
ffffffffc0000824:	stp	xzr, xzr, [x29]
ffffffffc0000828:	str	x8, [sp, #0x90]
ffffffffc000082c:	add	x8, sp, #0xa0
ffffffffc0000830:	str	x8, [sp, #0x88]
ffffffffc0000834:	bl	#0x994 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc0000838:	add	x0, sp, #0xa0
ffffffffc000083c:	stp	x21, x26, [sp, #0xa0]
ffffffffc0000840:	stp	xzr, xzr, [x27]
ffffffffc0000844:	stp	x28, xzr, [sp, #0xc0]
ffffffffc0000848:	bl	#0x980 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8>
ffffffffc000084c:	ldr	x1, [sp, #0x48]
ffffffffc0000850:	cbz	x1, #0x10 <params::main::ha8d309afaa194cac+0x1f8>
ffffffffc0000854:	ldr	x0, [sp, #0x40]
ffffffffc0000858:	orr	w2, wzr, #0x1
ffffffffc000085c:	bl	#0x14c <__rust_dealloc>
ffffffffc0000860:	add	x23, x23, #0x18
ffffffffc0000864:	add	x28, sp, #0x68
ffffffffc0000868:	add	x8, x25, #0x18
ffffffffc000086c:	cmp	x8, x22
ffffffffc0000870:	b.ne	#-0x100 <params::main::ha8d309afaa194cac+0x108>
ffffffffc0000874:	ldp	x20, x19, [sp, #0x8]
ffffffffc0000878:	mov	x23, x22
ffffffffc000087c:	stp	xzr, xzr, [sp, #0xa0]
ffffffffc0000880:	cmp	x23, x22
ffffffffc0000884:	b.ne	#0x24 <params::main::ha8d309afaa194cac+0x240>
ffffffffc0000888:	b	#0x3c <params::main::ha8d309afaa194cac+0x25c>
ffffffffc000088c:	ldp	x20, x19, [sp, #0x8]
ffffffffc0000890:	cmp	x23, x22
ffffffffc0000894:	b.ne	#0x14 <params::main::ha8d309afaa194cac+0x240>
ffffffffc0000898:	b	#0x2c <params::main::ha8d309afaa194cac+0x25c>
ffffffffc000089c:	add	x23, x23, #0x18
ffffffffc00008a0:	cmp	x23, x22
ffffffffc00008a4:	b.eq	#0x20 <params::main::ha8d309afaa194cac+0x25c>
ffffffffc00008a8:	ldr	x0, [x23]
ffffffffc00008ac:	cbz	x0, #0x18 <params::main::ha8d309afaa194cac+0x25c>
ffffffffc00008b0:	ldr	x1, [x23, #0x8]
ffffffffc00008b4:	cbz	x1, #-0x18 <params::main::ha8d309afaa194cac+0x234>
ffffffffc00008b8:	orr	w2, wzr, #0x1
ffffffffc00008bc:	bl	#0xec <__rust_dealloc>
ffffffffc00008c0:	b	#-0x24 <params::main::ha8d309afaa194cac+0x234>
ffffffffc00008c4:	cbz	x20, #0x18 <params::main::ha8d309afaa194cac+0x274>
ffffffffc00008c8:	add	x8, x20, x20, lsl #1
ffffffffc00008cc:	mov	x0, x19
ffffffffc00008d0:	orr	w2, wzr, #0x8
ffffffffc00008d4:	lsl	x1, x8, #3
ffffffffc00008d8:	bl	#0xd0 <__rust_dealloc>
ffffffffc00008dc:	ldp	x29, x30, [sp, #0x120]
ffffffffc00008e0:	ldp	x20, x19, [sp, #0x110]
ffffffffc00008e4:	ldp	x22, x21, [sp, #0x100]
ffffffffc00008e8:	ldp	x24, x23, [sp, #0xf0]
ffffffffc00008ec:	ldp	x26, x25, [sp, #0xe0]
ffffffffc00008f0:	ldp	x28, x27, [sp, #0xd0]
ffffffffc00008f4:	add	sp, sp, #0x130
ffffffffc00008f8:	ret
ffffffffc00008fc:	udf	#0x0

ffffffffc0000900 <*const T as core::fmt::Debug>::fmt::h55cdf3b9dfd04c74:
ffffffffc0000900:	sub	sp, sp, #0x50
ffffffffc0000904:	stp	x23, x22, [sp, #0x20]
ffffffffc0000908:	stp	x21, x20, [sp, #0x30]
ffffffffc000090c:	mov	x20, x0
ffffffffc0000910:	stp	x19, x30, [sp, #0x40]
ffffffffc0000914:	mov	x0, x1
ffffffffc0000918:	ldp	x21, x22, [x1]
ffffffffc000091c:	ldr	w23, [x1, #0x50]
ffffffffc0000920:	mov	x19, x1
ffffffffc0000924:	bl	#0x405c <core::fmt::Formatter::alternate::h1c6611e6756eea7e>
ffffffffc0000928:	ldr	w8, [x19, #0x50]
ffffffffc000092c:	cbz	w0, #0x30 <<*const T as core::fmt::Debug>::fmt::h55cdf3b9dfd04c74+0x5c>
ffffffffc0000930:	ldr	x9, [x19]
ffffffffc0000934:	orr	w8, w8, #0x8
ffffffffc0000938:	str	w8, [x19, #0x50]
ffffffffc000093c:	cbnz	x9, #0x20 <<*const T as core::fmt::Debug>::fmt::h55cdf3b9dfd04c74+0x5c>
ffffffffc0000940:	adrp	x9, #0x5000
ffffffffc0000944:	ldr	q0, [x9, #0x9a0]
ffffffffc0000948:	str	q0, [sp]
ffffffffc000094c:	ldr	x9, [sp, #0x8]
ffffffffc0000950:	str	x9, [x19, #0x8]
ffffffffc0000954:	ldr	x9, [sp]
ffffffffc0000958:	str	x9, [x19]
ffffffffc000095c:	ldr	x9, [x20]
ffffffffc0000960:	orr	w8, w8, #0x4
ffffffffc0000964:	add	x0, sp, #0x18
ffffffffc0000968:	mov	x1, x19
ffffffffc000096c:	str	w8, [x19, #0x50]
ffffffffc0000970:	str	x9, [sp, #0x18]
ffffffffc0000974:	bl	#0x1184 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::h350cec83cf61c005>
ffffffffc0000978:	stp	x21, x22, [x19]
ffffffffc000097c:	str	w23, [x19, #0x50]
ffffffffc0000980:	ldp	x19, x30, [sp, #0x40]
ffffffffc0000984:	ldp	x21, x20, [sp, #0x30]
ffffffffc0000988:	ldp	x23, x22, [sp, #0x20]
ffffffffc000098c:	add	sp, sp, #0x50
ffffffffc0000990:	ret
ffffffffc0000994:	udf	#0x0

ffffffffc0000998 __rust_alloc:
ffffffffc0000998:	str	x30, [sp, #-0x10]!
ffffffffc000099c:	bl	#-0x3f4 <__rg_alloc>
ffffffffc00009a0:	ldr	x30, [sp], #0x10
ffffffffc00009a4:	ret

ffffffffc00009a8 __rust_dealloc:
ffffffffc00009a8:	str	x30, [sp, #-0x10]!
ffffffffc00009ac:	bl	#-0x3ec <__rg_dealloc>
ffffffffc00009b0:	ldr	x30, [sp], #0x10
ffffffffc00009b4:	ret

ffffffffc00009b8 __rust_realloc:
ffffffffc00009b8:	str	x30, [sp, #-0x10]!
ffffffffc00009bc:	bl	#-0x3e4 <__rg_realloc>
ffffffffc00009c0:	ldr	x30, [sp], #0x10
ffffffffc00009c4:	ret

ffffffffc00009c8 <bw_allocator::Allocator as core::alloc::GlobalAlloc>::alloc::h9c6f1566b646ea48:
ffffffffc00009c8:	sub	sp, sp, #0x40
ffffffffc00009cc:	stp	x23, x22, [sp, #0x10]
ffffffffc00009d0:	stp	x21, x20, [sp, #0x20]
ffffffffc00009d4:	mov	x20, x1
ffffffffc00009d8:	stp	x19, x30, [sp, #0x30]
ffffffffc00009dc:	mov	x19, x2
ffffffffc00009e0:	mov	x21, x0
ffffffffc00009e4:	bl	#0x2b4 <bw_allocator::allocator::mutex::Mutex<T>::lock::h0f5ee83c27796913>
ffffffffc00009e8:	ldr	x8, [x0], #0xf0
ffffffffc00009ec:	cmp	x8, #0x1
ffffffffc00009f0:	strb	wzr, [x0]
ffffffffc00009f4:	b.eq	#0x4c <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::alloc::h9c6f1566b646ea48+0x78>
ffffffffc00009f8:	mov	x8, sp
ffffffffc00009fc:	mov	x0, xzr
ffffffffc0000a00:	bl	#0x5f8 <kernel_api::syscall::sbrk::hfed6371abe762e48>
ffffffffc0000a04:	ldrh	w8, [sp]
ffffffffc0000a08:	cmp	w8, #0x1
ffffffffc0000a0c:	b.eq	#0x88 <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::alloc::h9c6f1566b646ea48+0xcc>
ffffffffc0000a10:	ldr	x23, [sp, #0x8]
ffffffffc0000a14:	mov	x0, x21
ffffffffc0000a18:	bl	#0x280 <bw_allocator::allocator::mutex::Mutex<T>::lock::h0f5ee83c27796913>
ffffffffc0000a1c:	mov	x22, x0
ffffffffc0000a20:	add	x0, x0, #0x10
ffffffffc0000a24:	mov	w2, #0xd8
ffffffffc0000a28:	mov	w1, wzr
ffffffffc0000a2c:	str	x23, [x22, #0x8]
ffffffffc0000a30:	bl	#0x4b60 <memset>
ffffffffc0000a34:	orr	w8, wzr, #0x1
ffffffffc0000a38:	str	x8, [x22]
ffffffffc0000a3c:	strb	wzr, [x22, #0xf0]
ffffffffc0000a40:	mov	x0, x21
ffffffffc0000a44:	bl	#0x254 <bw_allocator::allocator::mutex::Mutex<T>::lock::h0f5ee83c27796913>
ffffffffc0000a48:	ldr	x8, [x0]
ffffffffc0000a4c:	cmp	x8, #0x1
ffffffffc0000a50:	b.ne	#0x30 <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::alloc::h9c6f1566b646ea48+0xb8>
ffffffffc0000a54:	mov	x21, x0
ffffffffc0000a58:	add	x0, x0, #0x8
ffffffffc0000a5c:	mov	x1, x20
ffffffffc0000a60:	mov	x2, x19
ffffffffc0000a64:	bl	#0x274 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279>
ffffffffc0000a68:	strb	wzr, [x21, #0xf0]
ffffffffc0000a6c:	ldp	x19, x30, [sp, #0x30]
ffffffffc0000a70:	ldp	x21, x20, [sp, #0x20]
ffffffffc0000a74:	ldp	x23, x22, [sp, #0x10]
ffffffffc0000a78:	add	sp, sp, #0x40
ffffffffc0000a7c:	ret
ffffffffc0000a80:	adrp	x0, #0x5000
ffffffffc0000a84:	mov	w1, #0x17
ffffffffc0000a88:	add	x0, x0, #0x9b0
ffffffffc0000a8c:	bl	#0x24a4 <core::option::expect_failed::h5de215e81479fb8c>
ffffffffc0000a90:	brk	#0x1
ffffffffc0000a94:	ldrh	w2, [sp, #0x2]
ffffffffc0000a98:	adrp	x0, #0x5000
ffffffffc0000a9c:	mov	w1, #0x2b
ffffffffc0000aa0:	add	x0, x0, #0xaf0
ffffffffc0000aa4:	bl	#0x194 <core::result::unwrap_failed::h37c134f4379a2817>
ffffffffc0000aa8:	brk	#0x1
ffffffffc0000aac:	udf	#0x0

ffffffffc0000ab0 <bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94:
ffffffffc0000ab0:	sub	sp, sp, #0x50
ffffffffc0000ab4:	str	x24, [sp, #0x10]
ffffffffc0000ab8:	stp	x23, x22, [sp, #0x20]
ffffffffc0000abc:	mov	x22, x0
ffffffffc0000ac0:	stp	x21, x20, [sp, #0x30]
ffffffffc0000ac4:	mov	x20, x3
ffffffffc0000ac8:	stp	x19, x30, [sp, #0x40]
ffffffffc0000acc:	mov	x21, x2
ffffffffc0000ad0:	mov	x19, x1
ffffffffc0000ad4:	bl	#0x1c4 <bw_allocator::allocator::mutex::Mutex<T>::lock::h0f5ee83c27796913>
ffffffffc0000ad8:	ldr	x8, [x0], #0xf0
ffffffffc0000adc:	cmp	x8, #0x1
ffffffffc0000ae0:	strb	wzr, [x0]
ffffffffc0000ae4:	b.eq	#0x4c <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94+0x80>
ffffffffc0000ae8:	mov	x8, sp
ffffffffc0000aec:	mov	x0, xzr
ffffffffc0000af0:	bl	#0x508 <kernel_api::syscall::sbrk::hfed6371abe762e48>
ffffffffc0000af4:	ldrh	w8, [sp]
ffffffffc0000af8:	cmp	w8, #0x1
ffffffffc0000afc:	b.eq	#0x110 <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94+0x15c>
ffffffffc0000b00:	ldr	x24, [sp, #0x8]
ffffffffc0000b04:	mov	x0, x22
ffffffffc0000b08:	bl	#0x190 <bw_allocator::allocator::mutex::Mutex<T>::lock::h0f5ee83c27796913>
ffffffffc0000b0c:	mov	x23, x0
ffffffffc0000b10:	add	x0, x0, #0x10
ffffffffc0000b14:	mov	w2, #0xd8
ffffffffc0000b18:	mov	w1, wzr
ffffffffc0000b1c:	str	x24, [x23, #0x8]
ffffffffc0000b20:	bl	#0x4a70 <memset>
ffffffffc0000b24:	orr	w8, wzr, #0x1
ffffffffc0000b28:	str	x8, [x23]
ffffffffc0000b2c:	strb	wzr, [x23, #0xf0]
ffffffffc0000b30:	mov	x0, x22
ffffffffc0000b34:	bl	#0x164 <bw_allocator::allocator::mutex::Mutex<T>::lock::h0f5ee83c27796913>
ffffffffc0000b38:	ldr	x8, [x0]
ffffffffc0000b3c:	cmp	x8, #0x1
ffffffffc0000b40:	b.ne	#0xb8 <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94+0x148>
ffffffffc0000b44:	cmp	x20, x21
ffffffffc0000b48:	mov	x10, xzr
ffffffffc0000b4c:	add	x8, x0, #0x8
ffffffffc0000b50:	csel	x9, x21, x20, lo
ffffffffc0000b54:	cmp	x10, #0x1b
ffffffffc0000b58:	b.hs	#0x90 <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94+0x138>
ffffffffc0000b5c:	mov	x11, x10
ffffffffc0000b60:	add	x10, x10, #0x1
ffffffffc0000b64:	add	w13, w11, #0x3
ffffffffc0000b68:	cmp	w13, #0x2
ffffffffc0000b6c:	b.lo	#0x34 <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94+0xf0>
ffffffffc0000b70:	mov	w15, w13
ffffffffc0000b74:	orr	w14, wzr, #0x2
ffffffffc0000b78:	orr	w12, wzr, #0x1
ffffffffc0000b7c:	tst	w15, #0x1
ffffffffc0000b80:	csinc	x16, x14, xzr, ne
ffffffffc0000b84:	mul	x14, x14, x14
ffffffffc0000b88:	lsr	w13, w15, #1
ffffffffc0000b8c:	mul	x12, x16, x12
ffffffffc0000b90:	cmp	w15, #0x3
ffffffffc0000b94:	mov	w15, w13
ffffffffc0000b98:	b.hi	#-0x1c <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94+0xcc>
ffffffffc0000b9c:	b	#0xc <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94+0xf8>
ffffffffc0000ba0:	orr	w12, wzr, #0x1
ffffffffc0000ba4:	orr	w14, wzr, #0x2
ffffffffc0000ba8:	cmp	w13, #0x1
ffffffffc0000bac:	csinc	x13, x14, xzr, eq
ffffffffc0000bb0:	mul	x12, x13, x12
ffffffffc0000bb4:	cmp	x12, x9
ffffffffc0000bb8:	b.lo	#-0x64 <<bw_allocator::Allocator as core::alloc::GlobalAlloc>::dealloc::hfa8e4b65227afa94+0xa4>
ffffffffc0000bbc:	add	x8, x8, x11, lsl #3
ffffffffc0000bc0:	ldr	x9, [x8, #0x8]
ffffffffc0000bc4:	str	x9, [x19]
ffffffffc0000bc8:	str	x19, [x8, #0x8]
ffffffffc0000bcc:	strb	wzr, [x0, #0xf0]
ffffffffc0000bd0:	ldp	x19, x30, [sp, #0x40]
ffffffffc0000bd4:	ldp	x21, x20, [sp, #0x30]
ffffffffc0000bd8:	ldp	x23, x22, [sp, #0x20]
ffffffffc0000bdc:	ldr	x24, [sp, #0x10]
ffffffffc0000be0:	add	sp, sp, #0x50
ffffffffc0000be4:	ret
ffffffffc0000be8:	adrp	x0, #0x5000
ffffffffc0000bec:	add	x0, x0, #0xb90
ffffffffc0000bf0:	bl	#0x10f8 <core::panicking::panic::hd514700a611a3e48>
ffffffffc0000bf4:	brk	#0x1
ffffffffc0000bf8:	adrp	x0, #0x5000
ffffffffc0000bfc:	mov	w1, #0x17
ffffffffc0000c00:	add	x0, x0, #0x9b0
ffffffffc0000c04:	bl	#0x232c <core::option::expect_failed::h5de215e81479fb8c>
ffffffffc0000c08:	brk	#0x1
ffffffffc0000c0c:	ldrh	w2, [sp, #0x2]
ffffffffc0000c10:	adrp	x0, #0x5000
ffffffffc0000c14:	mov	w1, #0x2b
ffffffffc0000c18:	add	x0, x0, #0xaf0
ffffffffc0000c1c:	bl	#0x1c <core::result::unwrap_failed::h37c134f4379a2817>
ffffffffc0000c20:	brk	#0x1
ffffffffc0000c24:	udf	#0x0

ffffffffc0000c28 rust_oom:
ffffffffc0000c28:	adrp	x0, #0x5000
ffffffffc0000c2c:	add	x0, x0, #0xa10
ffffffffc0000c30:	bl	#0x10b8 <core::panicking::panic::hd514700a611a3e48>
ffffffffc0000c34:	brk	#0x1

ffffffffc0000c38 core::result::unwrap_failed::h37c134f4379a2817:
ffffffffc0000c38:	sub	sp, sp, #0x70
ffffffffc0000c3c:	adrp	x9, #0x0
ffffffffc0000c40:	stp	x0, x1, [sp, #0x8]
ffffffffc0000c44:	add	x8, sp, #0x8
ffffffffc0000c48:	stp	xzr, xzr, [sp, #0x30]
ffffffffc0000c4c:	add	x9, x9, #0xcc0
ffffffffc0000c50:	strh	w2, [sp, #0x1c]
ffffffffc0000c54:	orr	w10, wzr, #0x2
ffffffffc0000c58:	adrp	x1, #0x5000
ffffffffc0000c5c:	stp	x8, x9, [sp, #0x50]
ffffffffc0000c60:	adrp	x9, #0x1000
ffffffffc0000c64:	add	x8, sp, #0x1c
ffffffffc0000c68:	add	x9, x9, #0x7c0
ffffffffc0000c6c:	add	x1, x1, #0xad8
ffffffffc0000c70:	add	x0, sp, #0x20
ffffffffc0000c74:	stp	x8, x9, [sp, #0x60]
ffffffffc0000c78:	adrp	x8, #0x5000
ffffffffc0000c7c:	add	x8, x8, #0xa40
ffffffffc0000c80:	stp	x8, x10, [sp, #0x20]
ffffffffc0000c84:	add	x8, sp, #0x50
ffffffffc0000c88:	stp	x8, x10, [sp, #0x40]
ffffffffc0000c8c:	bl	#0x10ec <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc0000c90:	brk	#0x1
ffffffffc0000c94:	udf	#0x0

ffffffffc0000c98 bw_allocator::allocator::mutex::Mutex<T>::lock::h0f5ee83c27796913:
ffffffffc0000c98:	ldrb	w8, [x0, #0xf0]
ffffffffc0000c9c:	tst	w8, #0xff
ffffffffc0000ca0:	b.eq	#0xc <bw_allocator::allocator::mutex::Mutex<T>::lock::h0f5ee83c27796913+0x14>
ffffffffc0000ca4:	ldr	x8, [x0, #0xe8]
ffffffffc0000ca8:	cbnz	x8, #-0x10 <bw_allocator::allocator::mutex::Mutex<T>::lock::h0f5ee83c27796913>
ffffffffc0000cac:	orr	w8, wzr, #0x1
ffffffffc0000cb0:	strb	w8, [x0, #0xf0]
ffffffffc0000cb4:	str	xzr, [x0, #0xe8]
ffffffffc0000cb8:	ret
ffffffffc0000cbc:	udf	#0x0

ffffffffc0000cc0 <&T as core::fmt::Display>::fmt::h124484fd00287ac0:
ffffffffc0000cc0:	ldp	x8, x9, [x0]
ffffffffc0000cc4:	mov	x2, x1
ffffffffc0000cc8:	mov	x0, x8
ffffffffc0000ccc:	mov	x1, x9
ffffffffc0000cd0:	b	#0x3d48 <<str as core::fmt::Display>::fmt::h342559e7c894975f>
ffffffffc0000cd4:	udf	#0x0

ffffffffc0000cd8 <bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279:
ffffffffc0000cd8:	sub	sp, sp, #0x30
ffffffffc0000cdc:	cmp	x2, x1
ffffffffc0000ce0:	stp	x19, x30, [sp, #0x20]
ffffffffc0000ce4:	mov	x19, x0
ffffffffc0000ce8:	stp	x21, x20, [sp, #0x10]
ffffffffc0000cec:	mov	x10, xzr
ffffffffc0000cf0:	csel	x9, x1, x2, lo
ffffffffc0000cf4:	cmp	x10, #0x1b
ffffffffc0000cf8:	b.hs	#0x190 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x1b0>
ffffffffc0000cfc:	mov	x11, x10
ffffffffc0000d00:	add	x10, x10, #0x1
ffffffffc0000d04:	add	w8, w11, #0x3
ffffffffc0000d08:	cmp	w8, #0x2
ffffffffc0000d0c:	b.lo	#0x34 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x68>
ffffffffc0000d10:	mov	w14, w8
ffffffffc0000d14:	orr	w13, wzr, #0x2
ffffffffc0000d18:	orr	w12, wzr, #0x1
ffffffffc0000d1c:	tst	w14, #0x1
ffffffffc0000d20:	csinc	x16, x13, xzr, ne
ffffffffc0000d24:	mul	x13, x13, x13
ffffffffc0000d28:	lsr	w15, w14, #1
ffffffffc0000d2c:	mul	x12, x16, x12
ffffffffc0000d30:	cmp	w14, #0x3
ffffffffc0000d34:	mov	w14, w15
ffffffffc0000d38:	b.hi	#-0x1c <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x44>
ffffffffc0000d3c:	b	#0x10 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x74>
ffffffffc0000d40:	orr	w12, wzr, #0x1
ffffffffc0000d44:	orr	w13, wzr, #0x2
ffffffffc0000d48:	mov	w15, w8
ffffffffc0000d4c:	cmp	w15, #0x1
ffffffffc0000d50:	csinc	x13, x13, xzr, eq
ffffffffc0000d54:	mul	x12, x13, x12
ffffffffc0000d58:	cmp	x12, x9
ffffffffc0000d5c:	b.lo	#-0x68 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x1c>
ffffffffc0000d60:	add	x9, x19, x11, lsl #3
ffffffffc0000d64:	ldr	x20, [x9, #0x8]!
ffffffffc0000d68:	cbz	x20, #0x1c <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0xac>
ffffffffc0000d6c:	neg	x10, x2
ffffffffc0000d70:	bics	xzr, x20, x10
ffffffffc0000d74:	b.eq	#0x4c <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0xe8>
ffffffffc0000d78:	mov	x9, x20
ffffffffc0000d7c:	ldr	x20, [x20]
ffffffffc0000d80:	cbnz	x20, #-0x10 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x98>
ffffffffc0000d84:	ldr	x9, [x19]
ffffffffc0000d88:	cmp	w8, #0x2
ffffffffc0000d8c:	b.lo	#0x40 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0xf4>
ffffffffc0000d90:	orr	w10, wzr, #0x1
ffffffffc0000d94:	orr	w11, wzr, #0x2
ffffffffc0000d98:	mov	w12, w8
ffffffffc0000d9c:	tst	w12, #0x1
ffffffffc0000da0:	csinc	x14, x11, xzr, ne
ffffffffc0000da4:	mul	x11, x11, x11
ffffffffc0000da8:	lsr	w13, w12, #1
ffffffffc0000dac:	mul	x10, x14, x10
ffffffffc0000db0:	cmp	w12, #0x3
ffffffffc0000db4:	mov	w12, w13
ffffffffc0000db8:	b.hi	#-0x1c <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0xc4>
ffffffffc0000dbc:	b	#0x1c <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x100>
ffffffffc0000dc0:	ldr	x8, [x20]
ffffffffc0000dc4:	str	x8, [x9]
ffffffffc0000dc8:	b	#0xac <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x19c>
ffffffffc0000dcc:	orr	w11, wzr, #0x2
ffffffffc0000dd0:	orr	w10, wzr, #0x1
ffffffffc0000dd4:	mov	w13, w8
ffffffffc0000dd8:	cmp	w13, #0x1
ffffffffc0000ddc:	csinc	x11, x11, xzr, eq
ffffffffc0000de0:	mul	x10, x11, x10
ffffffffc0000de4:	sub	x11, x10, #0x1
ffffffffc0000de8:	and	x12, x11, x10
ffffffffc0000dec:	cmp	x10, #0x0
ffffffffc0000df0:	ccmp	x12, #0x0, #0x0, ne
ffffffffc0000df4:	b.ne	#0xa4 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x1c0>
ffffffffc0000df8:	add	x11, x11, x9
ffffffffc0000dfc:	neg	x10, x10
ffffffffc0000e00:	and	x20, x11, x10
ffffffffc0000e04:	cmp	w8, #0x2
ffffffffc0000e08:	b.lo	#0x34 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x164>
ffffffffc0000e0c:	orr	w10, wzr, #0x1
ffffffffc0000e10:	orr	w11, wzr, #0x2
ffffffffc0000e14:	mov	w12, w8
ffffffffc0000e18:	tst	w12, #0x1
ffffffffc0000e1c:	csinc	x13, x11, xzr, ne
ffffffffc0000e20:	mul	x11, x11, x11
ffffffffc0000e24:	lsr	w8, w12, #1
ffffffffc0000e28:	mul	x10, x13, x10
ffffffffc0000e2c:	cmp	w12, #0x3
ffffffffc0000e30:	mov	w12, w8
ffffffffc0000e34:	b.hi	#-0x1c <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x140>
ffffffffc0000e38:	b	#0xc <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x16c>
ffffffffc0000e3c:	orr	w11, wzr, #0x2
ffffffffc0000e40:	orr	w10, wzr, #0x1
ffffffffc0000e44:	cmp	w8, #0x1
ffffffffc0000e48:	csinc	x8, x11, xzr, eq
ffffffffc0000e4c:	madd	x21, x8, x10, x20
ffffffffc0000e50:	mov	x8, sp
ffffffffc0000e54:	sub	x0, x21, x9
ffffffffc0000e58:	bl	#0x1a0 <kernel_api::syscall::sbrk::hfed6371abe762e48>
ffffffffc0000e5c:	ldrh	w8, [sp]
ffffffffc0000e60:	cmp	w8, #0x1
ffffffffc0000e64:	b.ne	#0xc <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x198>
ffffffffc0000e68:	mov	x20, xzr
ffffffffc0000e6c:	b	#0x8 <<bw_allocator::allocator::bin::Allocator as bw_allocator::LocalAlloc>::alloc::ha00969e257fd0279+0x19c>
ffffffffc0000e70:	str	x21, [x19]
ffffffffc0000e74:	mov	x0, x20
ffffffffc0000e78:	ldp	x19, x30, [sp, #0x20]
ffffffffc0000e7c:	ldp	x21, x20, [sp, #0x10]
ffffffffc0000e80:	add	sp, sp, #0x30
ffffffffc0000e84:	ret
ffffffffc0000e88:	adrp	x0, #0x5000
ffffffffc0000e8c:	add	x0, x0, #0xb90
ffffffffc0000e90:	bl	#0xe58 <core::panicking::panic::hd514700a611a3e48>
ffffffffc0000e94:	brk	#0x1
ffffffffc0000e98:	adrp	x0, #0x5000
ffffffffc0000e9c:	add	x0, x0, #0xc30
ffffffffc0000ea0:	bl	#0xe48 <core::panicking::panic::hd514700a611a3e48>
ffffffffc0000ea4:	brk	#0x1

ffffffffc0000ea8 core::ptr::real_drop_in_place::h9847771b973473bd:
ffffffffc0000ea8:	ret
ffffffffc0000eac:	udf	#0x0

ffffffffc0000eb0 <&mut W as core::fmt::Write>::write_char::hd4aeacd55da28681:
ffffffffc0000eb0:	sub	sp, sp, #0x10
ffffffffc0000eb4:	cmp	w1, #0x80
ffffffffc0000eb8:	str	wzr, [sp, #0xc]
ffffffffc0000ebc:	b.hs	#0x10 <<&mut W as core::fmt::Write>::write_char::hd4aeacd55da28681+0x1c>
ffffffffc0000ec0:	orr	w8, wzr, #0x1
ffffffffc0000ec4:	strb	w1, [sp, #0xc]
ffffffffc0000ec8:	b	#0x94 <<&mut W as core::fmt::Write>::write_char::hd4aeacd55da28681+0xac>
ffffffffc0000ecc:	cmp	w1, #0x800
ffffffffc0000ed0:	b.hs	#0x24 <<&mut W as core::fmt::Write>::write_char::hd4aeacd55da28681+0x44>
ffffffffc0000ed4:	orr	w9, wzr, #0xc0
ffffffffc0000ed8:	orr	w10, wzr, #0x80
ffffffffc0000edc:	bfxil	w9, w1, #6, #5
ffffffffc0000ee0:	bfxil	w10, w1, #0, #6
ffffffffc0000ee4:	orr	w8, wzr, #0x2
ffffffffc0000ee8:	strb	w9, [sp, #0xc]
ffffffffc0000eec:	strb	w10, [sp, #0xd]
ffffffffc0000ef0:	b	#0x6c <<&mut W as core::fmt::Write>::write_char::hd4aeacd55da28681+0xac>
ffffffffc0000ef4:	cmp	w1, #0x10, lsl #12
ffffffffc0000ef8:	b.hs	#0x30 <<&mut W as core::fmt::Write>::write_char::hd4aeacd55da28681+0x78>
ffffffffc0000efc:	orr	w9, wzr, #0xe0
ffffffffc0000f00:	orr	w10, wzr, #0x80
ffffffffc0000f04:	orr	w11, wzr, #0x80
ffffffffc0000f08:	bfxil	w9, w1, #12, #4
ffffffffc0000f0c:	bfxil	w11, w1, #6, #6
ffffffffc0000f10:	bfxil	w10, w1, #0, #6
ffffffffc0000f14:	strb	w9, [sp, #0xc]
ffffffffc0000f18:	orr	w8, wzr, #0x3
ffffffffc0000f1c:	strb	w11, [sp, #0xd]
ffffffffc0000f20:	strb	w10, [sp, #0xe]
ffffffffc0000f24:	b	#0x38 <<&mut W as core::fmt::Write>::write_char::hd4aeacd55da28681+0xac>
ffffffffc0000f28:	lsr	w8, w1, #18
ffffffffc0000f2c:	orr	w8, w8, #0xf0
ffffffffc0000f30:	orr	w9, wzr, #0x80
ffffffffc0000f34:	orr	w10, wzr, #0x80
ffffffffc0000f38:	orr	w11, wzr, #0x80
ffffffffc0000f3c:	strb	w8, [sp, #0xc]
ffffffffc0000f40:	orr	w8, wzr, #0x4
ffffffffc0000f44:	bfxil	w10, w1, #12, #6
ffffffffc0000f48:	bfxil	w11, w1, #6, #6
ffffffffc0000f4c:	bfxil	w9, w1, #0, #6
ffffffffc0000f50:	strb	w10, [sp, #0xd]
ffffffffc0000f54:	strb	w11, [sp, #0xe]
ffffffffc0000f58:	strb	w9, [sp, #0xf]
ffffffffc0000f5c:	orr	w9, wzr, #0x1
ffffffffc0000f60:	add	x10, sp, #0xc
ffffffffc0000f64:	mov	x0, x9
ffffffffc0000f68:	mov	x1, x10
ffffffffc0000f6c:	mov	x2, x8
ffffffffc0000f70:	svc	#0x6
ffffffffc0000f74:	mov	x8, x0
ffffffffc0000f78:	mov	x9, x7
ffffffffc0000f7c:	cmp	x9, #0x1
ffffffffc0000f80:	cset	w0, ne
ffffffffc0000f84:	add	sp, sp, #0x10
ffffffffc0000f88:	ret
ffffffffc0000f8c:	udf	#0x0

ffffffffc0000f90 <&mut W as core::fmt::Write>::write_fmt::h2c84bb551c7c1463:
ffffffffc0000f90:	sub	sp, sp, #0x40
ffffffffc0000f94:	ldr	x8, [x0]
ffffffffc0000f98:	mov	x0, sp
ffffffffc0000f9c:	orr	w2, wzr, #0x30
ffffffffc0000fa0:	stp	x30, x8, [sp, #0x30]
ffffffffc0000fa4:	bl	#0x433c <memcpy>
ffffffffc0000fa8:	adrp	x1, #0x5000
ffffffffc0000fac:	add	x1, x1, #0xcc0
ffffffffc0000fb0:	add	x0, sp, #0x38
ffffffffc0000fb4:	mov	x2, sp
ffffffffc0000fb8:	bl	#0x2e80 <core::fmt::write::h30a176880c7ec5aa>
ffffffffc0000fbc:	ldr	x30, [sp, #0x30]
ffffffffc0000fc0:	add	sp, sp, #0x40
ffffffffc0000fc4:	ret

ffffffffc0000fc8 <&mut W as core::fmt::Write>::write_str::h4d637fe610a2b120:
ffffffffc0000fc8:	orr	w8, wzr, #0x1
ffffffffc0000fcc:	mov	x0, x8
ffffffffc0000fd0:	mov	x1, x1
ffffffffc0000fd4:	mov	x2, x2
ffffffffc0000fd8:	svc	#0x6
ffffffffc0000fdc:	mov	x8, x0
ffffffffc0000fe0:	mov	x9, x7
ffffffffc0000fe4:	cmp	x9, #0x1
ffffffffc0000fe8:	cset	w0, ne
ffffffffc0000fec:	ret

ffffffffc0000ff0 kernel_api::syscall::exit::hf4974f355d627d7c:
ffffffffc0000ff0:	svc	#0x3
ffffffffc0000ff4:	b	#0x0 <kernel_api::syscall::exit::hf4974f355d627d7c+0x4>

ffffffffc0000ff8 kernel_api::syscall::sbrk::hfed6371abe762e48:
ffffffffc0000ff8:	mov	x9, x0
ffffffffc0000ffc:	mov	x0, x9
ffffffffc0001000:	svc	#0x7
ffffffffc0001004:	mov	x10, x0
ffffffffc0001008:	mov	x11, x7
ffffffffc000100c:	mov	w9, wzr
ffffffffc0001010:	cmp	x11, #0xc7
ffffffffc0001014:	b.gt	#0x34 <kernel_api::syscall::sbrk::hfed6371abe762e48+0x50>
ffffffffc0001018:	sub	x11, x11, #0x1
ffffffffc000101c:	cmp	x11, #0x67
ffffffffc0001020:	b.hi	#0x44 <kernel_api::syscall::sbrk::hfed6371abe762e48+0x6c>
ffffffffc0001024:	adrp	x12, #0x4000
ffffffffc0001028:	add	x12, x12, #0xc58
ffffffffc000102c:	adr	x13, #0x10
ffffffffc0001030:	ldrb	w14, [x12, x11]
ffffffffc0001034:	add	x13, x13, x14, lsl #2
ffffffffc0001038:	br	x13
ffffffffc000103c:	str	x10, [x8, #0x8]
ffffffffc0001040:	strh	wzr, [x8]
ffffffffc0001044:	ret
ffffffffc0001048:	cmp	x11, #0xc8
ffffffffc000104c:	b.eq	#0x154 <kernel_api::syscall::sbrk::hfed6371abe762e48+0x1a8>
ffffffffc0001050:	cmp	x11, #0xc9
ffffffffc0001054:	b.eq	#0x160 <kernel_api::syscall::sbrk::hfed6371abe762e48+0x1bc>
ffffffffc0001058:	cmp	x11, #0x12d
ffffffffc000105c:	b.ne	#0x8 <kernel_api::syscall::sbrk::hfed6371abe762e48+0x6c>
ffffffffc0001060:	mov	w9, #0x12d
ffffffffc0001064:	orr	w11, wzr, #0x1
ffffffffc0001068:	strh	w9, [x8, #0x2]
ffffffffc000106c:	strh	w11, [x8]
ffffffffc0001070:	ret
ffffffffc0001074:	orr	w9, wzr, #0x2
ffffffffc0001078:	orr	w11, wzr, #0x1
ffffffffc000107c:	strh	w9, [x8, #0x2]
ffffffffc0001080:	strh	w11, [x8]
ffffffffc0001084:	ret
ffffffffc0001088:	orr	w9, wzr, #0x3
ffffffffc000108c:	orr	w11, wzr, #0x1
ffffffffc0001090:	strh	w9, [x8, #0x2]
ffffffffc0001094:	strh	w11, [x8]
ffffffffc0001098:	ret
ffffffffc000109c:	mov	w9, #0xa
ffffffffc00010a0:	orr	w11, wzr, #0x1
ffffffffc00010a4:	strh	w9, [x8, #0x2]
ffffffffc00010a8:	strh	w11, [x8]
ffffffffc00010ac:	ret
ffffffffc00010b0:	mov	w9, #0x14
ffffffffc00010b4:	orr	w11, wzr, #0x1
ffffffffc00010b8:	strh	w9, [x8, #0x2]
ffffffffc00010bc:	strh	w11, [x8]
ffffffffc00010c0:	ret
ffffffffc00010c4:	orr	w9, wzr, #0x1e
ffffffffc00010c8:	orr	w11, wzr, #0x1
ffffffffc00010cc:	strh	w9, [x8, #0x2]
ffffffffc00010d0:	strh	w11, [x8]
ffffffffc00010d4:	ret
ffffffffc00010d8:	mov	w9, #0x28
ffffffffc00010dc:	orr	w11, wzr, #0x1
ffffffffc00010e0:	strh	w9, [x8, #0x2]
ffffffffc00010e4:	strh	w11, [x8]
ffffffffc00010e8:	ret
ffffffffc00010ec:	mov	w9, #0x32
ffffffffc00010f0:	orr	w11, wzr, #0x1
ffffffffc00010f4:	strh	w9, [x8, #0x2]
ffffffffc00010f8:	strh	w11, [x8]
ffffffffc00010fc:	ret
ffffffffc0001100:	orr	w9, wzr, #0x3c
ffffffffc0001104:	orr	w11, wzr, #0x1
ffffffffc0001108:	strh	w9, [x8, #0x2]
ffffffffc000110c:	strh	w11, [x8]
ffffffffc0001110:	ret
ffffffffc0001114:	mov	w9, #0x46
ffffffffc0001118:	orr	w11, wzr, #0x1
ffffffffc000111c:	strh	w9, [x8, #0x2]
ffffffffc0001120:	strh	w11, [x8]
ffffffffc0001124:	ret
ffffffffc0001128:	mov	w9, #0x50
ffffffffc000112c:	orr	w11, wzr, #0x1
ffffffffc0001130:	strh	w9, [x8, #0x2]
ffffffffc0001134:	strh	w11, [x8]
ffffffffc0001138:	ret
ffffffffc000113c:	mov	w9, #0x5a
ffffffffc0001140:	orr	w11, wzr, #0x1
ffffffffc0001144:	strh	w9, [x8, #0x2]
ffffffffc0001148:	strh	w11, [x8]
ffffffffc000114c:	ret
ffffffffc0001150:	mov	w9, #0x65
ffffffffc0001154:	orr	w11, wzr, #0x1
ffffffffc0001158:	strh	w9, [x8, #0x2]
ffffffffc000115c:	strh	w11, [x8]
ffffffffc0001160:	ret
ffffffffc0001164:	mov	w9, #0x66
ffffffffc0001168:	orr	w11, wzr, #0x1
ffffffffc000116c:	strh	w9, [x8, #0x2]
ffffffffc0001170:	strh	w11, [x8]
ffffffffc0001174:	ret
ffffffffc0001178:	mov	w9, #0x67
ffffffffc000117c:	orr	w11, wzr, #0x1
ffffffffc0001180:	strh	w9, [x8, #0x2]
ffffffffc0001184:	strh	w11, [x8]
ffffffffc0001188:	ret
ffffffffc000118c:	mov	w9, #0x68
ffffffffc0001190:	orr	w11, wzr, #0x1
ffffffffc0001194:	strh	w9, [x8, #0x2]
ffffffffc0001198:	strh	w11, [x8]
ffffffffc000119c:	ret
ffffffffc00011a0:	mov	w9, #0xc8
ffffffffc00011a4:	orr	w11, wzr, #0x1
ffffffffc00011a8:	strh	w9, [x8, #0x2]
ffffffffc00011ac:	strh	w11, [x8]
ffffffffc00011b0:	ret
ffffffffc00011b4:	mov	w9, #0xc9
ffffffffc00011b8:	orr	w11, wzr, #0x1
ffffffffc00011bc:	strh	w9, [x8, #0x2]
ffffffffc00011c0:	strh	w11, [x8]
ffffffffc00011c4:	ret

ffffffffc00011c8 kernel_api::syscall::vprint::h3e10fc19cfafc2b8:
ffffffffc00011c8:	sub	sp, sp, #0x50
ffffffffc00011cc:	add	x8, sp, #0x48
ffffffffc00011d0:	str	x30, [sp, #0x40]
ffffffffc00011d4:	mov	x1, x0
ffffffffc00011d8:	add	x0, sp, #0x10
ffffffffc00011dc:	orr	w2, wzr, #0x30
ffffffffc00011e0:	str	x8, [sp, #0x8]
ffffffffc00011e4:	bl	#0x40fc <memcpy>
ffffffffc00011e8:	adrp	x1, #0x4000
ffffffffc00011ec:	add	x1, x1, #0xcc0
ffffffffc00011f0:	add	x0, sp, #0x8
ffffffffc00011f4:	add	x2, sp, #0x10
ffffffffc00011f8:	bl	#0x2c40 <core::fmt::write::h30a176880c7ec5aa>
ffffffffc00011fc:	cbnz	w0, #0x10 <kernel_api::syscall::vprint::h3e10fc19cfafc2b8+0x44>
ffffffffc0001200:	ldr	x30, [sp, #0x40]
ffffffffc0001204:	add	sp, sp, #0x50
ffffffffc0001208:	ret
ffffffffc000120c:	adrp	x0, #0x4000
ffffffffc0001210:	mov	w1, #0x2b
ffffffffc0001214:	add	x0, x0, #0xcf0
ffffffffc0001218:	bl	#0x58 <core::result::unwrap_failed::ha2bc0ead5e2d013e>
ffffffffc000121c:	brk	#0x1

ffffffffc0001220 core::result::unwrap_failed::h475c8a0f760f88dd:
ffffffffc0001220:	adrp	x9, #0x0
ffffffffc0001224:	stp	x0, x1, [sp, #-0x60]!
ffffffffc0001228:	mov	x8, sp
ffffffffc000122c:	stp	xzr, xzr, [sp, #0x20]
ffffffffc0001230:	add	x9, x9, #0xaa0
ffffffffc0001234:	adrp	x1, #0x4000
ffffffffc0001238:	add	x1, x1, #0xdb8
ffffffffc000123c:	stp	x8, x9, [sp, #0x40]
ffffffffc0001240:	adrp	x8, #0x0
ffffffffc0001244:	add	x8, x8, #0x650
ffffffffc0001248:	orr	w9, wzr, #0x2
ffffffffc000124c:	add	x0, sp, #0x10
ffffffffc0001250:	stp	x2, x8, [sp, #0x50]
ffffffffc0001254:	adrp	x8, #0x4000
ffffffffc0001258:	add	x8, x8, #0xd20
ffffffffc000125c:	stp	x8, x9, [sp, #0x10]
ffffffffc0001260:	add	x8, sp, #0x40
ffffffffc0001264:	stp	x8, x9, [sp, #0x30]
ffffffffc0001268:	bl	#0xb10 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc000126c:	brk	#0x1

ffffffffc0001270 core::result::unwrap_failed::ha2bc0ead5e2d013e:
ffffffffc0001270:	sub	sp, sp, #0x70
ffffffffc0001274:	adrp	x8, #0x0
ffffffffc0001278:	stp	x0, x1, [sp, #0x8]
ffffffffc000127c:	add	x8, x8, #0xaa0
ffffffffc0001280:	stp	xzr, xzr, [sp, #0x28]
ffffffffc0001284:	add	x9, sp, #0x8
ffffffffc0001288:	orr	w10, wzr, #0x2
ffffffffc000128c:	adrp	x1, #0x4000
ffffffffc0001290:	stp	x9, x8, [sp, #0x48]
ffffffffc0001294:	adrp	x9, #0x3000
ffffffffc0001298:	add	x8, sp, #0x68
ffffffffc000129c:	add	x9, x9, #0xd90
ffffffffc00012a0:	add	x1, x1, #0xdb8
ffffffffc00012a4:	add	x0, sp, #0x18
ffffffffc00012a8:	stp	x8, x9, [sp, #0x58]
ffffffffc00012ac:	adrp	x8, #0x4000
ffffffffc00012b0:	add	x8, x8, #0xd20
ffffffffc00012b4:	stp	x8, x10, [sp, #0x18]
ffffffffc00012b8:	add	x8, sp, #0x48
ffffffffc00012bc:	stp	x8, x10, [sp, #0x38]
ffffffffc00012c0:	bl	#0xab8 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc00012c4:	brk	#0x1

ffffffffc00012c8 <&T as core::fmt::Debug>::fmt::h4eb6a989d7666628:
ffffffffc00012c8:	ldr	x8, [x0]
ffffffffc00012cc:	mov	x2, x1
ffffffffc00012d0:	ldp	x0, x8, [x8]
ffffffffc00012d4:	mov	x1, x8
ffffffffc00012d8:	b	#0x1e8 <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b>
ffffffffc00012dc:	udf	#0x0

ffffffffc00012e0 core::ptr::real_drop_in_place::h05400d258e6ddf6a:
ffffffffc00012e0:	ret
ffffffffc00012e4:	udf	#0x0

ffffffffc00012e8 kernel_api::cstr::CString::into_string::h8b748705072cb04b:
ffffffffc00012e8:	sub	sp, sp, #0xe0
ffffffffc00012ec:	stp	x19, x30, [sp, #0xd0]
ffffffffc00012f0:	mov	x19, x8
ffffffffc00012f4:	sub	x8, x1, #0x1
ffffffffc00012f8:	str	x22, [sp, #0xb0]
ffffffffc00012fc:	cmp	x1, #0x0
ffffffffc0001300:	stp	x21, x20, [sp, #0xc0]
ffffffffc0001304:	csel	x22, xzr, x8, eq
ffffffffc0001308:	mov	x21, x1
ffffffffc000130c:	add	x8, sp, #0x88
ffffffffc0001310:	mov	x1, x22
ffffffffc0001314:	mov	x20, x0
ffffffffc0001318:	bl	#0x2010 <core::str::from_utf8::hc36910fe2ca0e613>
ffffffffc000131c:	ldr	x8, [sp, #0x88]
ffffffffc0001320:	cmp	x8, #0x1
ffffffffc0001324:	b.ne	#0xe4 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x120>
ffffffffc0001328:	ldp	x8, x9, [sp, #0x90]
ffffffffc000132c:	stp	x20, x21, [sp, #0x10]
ffffffffc0001330:	add	x10, sp, #0x8
ffffffffc0001334:	mov	w20, #0x28
ffffffffc0001338:	orr	w11, wzr, #0x1
ffffffffc000133c:	stp	x22, x8, [sp, #0x20]
ffffffffc0001340:	add	x1, x10, #0x8
ffffffffc0001344:	str	x9, [sp, #0x30]
ffffffffc0001348:	add	x0, sp, #0x38
ffffffffc000134c:	mov	x2, x20
ffffffffc0001350:	str	x11, [sp, #0x8]
ffffffffc0001354:	bl	#0x3f8c <memcpy>
ffffffffc0001358:	add	x8, sp, #0x60
ffffffffc000135c:	add	x0, sp, #0x38
ffffffffc0001360:	bl	#0x780 <alloc::string::FromUtf8Error::utf8_error::hbe9a0b7c329a5a2b>
ffffffffc0001364:	add	x0, sp, #0x88
ffffffffc0001368:	add	x1, sp, #0x38
ffffffffc000136c:	mov	x2, x20
ffffffffc0001370:	bl	#0x3f70 <memcpy>
ffffffffc0001374:	add	x8, sp, #0x70
ffffffffc0001378:	add	x0, sp, #0x88
ffffffffc000137c:	bl	#0x74c <alloc::string::FromUtf8Error::into_bytes::hd638653ca4c4bd52>
ffffffffc0001380:	ldr	x1, [sp, #0x80]
ffffffffc0001384:	add	x0, sp, #0x70
ffffffffc0001388:	orr	w2, wzr, #0x1
ffffffffc000138c:	mov	w3, wzr
ffffffffc0001390:	bl	#0x360 <alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177>
ffffffffc0001394:	and	w8, w0, #0xff
ffffffffc0001398:	cmp	w8, #0x2
ffffffffc000139c:	b.ne	#0xd0 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x184>
ffffffffc00013a0:	ldp	x1, x8, [sp, #0x78]
ffffffffc00013a4:	cmp	x8, x1
ffffffffc00013a8:	b.ne	#0x28 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0xe8>
ffffffffc00013ac:	add	x0, sp, #0x70
ffffffffc00013b0:	mov	x1, x8
ffffffffc00013b4:	orr	w2, wzr, #0x1
ffffffffc00013b8:	orr	w3, wzr, #0x1
ffffffffc00013bc:	bl	#0x334 <alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177>
ffffffffc00013c0:	and	w8, w0, #0xff
ffffffffc00013c4:	cmp	w8, #0x2
ffffffffc00013c8:	b.ne	#0xb8 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x198>
ffffffffc00013cc:	ldp	x1, x8, [sp, #0x78]
ffffffffc00013d0:	ldr	x0, [sp, #0x70]
ffffffffc00013d4:	add	x20, x8, #0x1
ffffffffc00013d8:	cmp	x1, x20
ffffffffc00013dc:	strb	wzr, [x0, x8]
ffffffffc00013e0:	str	x20, [sp, #0x80]
ffffffffc00013e4:	b.eq	#0x58 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x154>
ffffffffc00013e8:	b.lo	#0xa4 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x1a4>
ffffffffc00013ec:	cbz	x20, #0x3c <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x140>
ffffffffc00013f0:	orr	w2, wzr, #0x1
ffffffffc00013f4:	mov	x3, x20
ffffffffc00013f8:	bl	#-0xa40 <__rust_realloc>
ffffffffc00013fc:	cbz	x0, #0xa0 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x1b4>
ffffffffc0001400:	mov	x1, x20
ffffffffc0001404:	b	#0x38 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x154>
ffffffffc0001408:	mov	x8, x22
ffffffffc000140c:	stp	x21, x22, [sp, #0x18]
ffffffffc0001410:	mov	x9, x21
ffffffffc0001414:	stp	xzr, x20, [sp, #0x8]
ffffffffc0001418:	mov	x10, x20
ffffffffc000141c:	stp	x9, x8, [x19, #0x10]
ffffffffc0001420:	stp	xzr, x10, [x19]
ffffffffc0001424:	b	#0x34 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x170>
ffffffffc0001428:	cbz	x1, #0x10 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x150>
ffffffffc000142c:	orr	w2, wzr, #0x1
ffffffffc0001430:	bl	#-0xa88 <__rust_dealloc>
ffffffffc0001434:	mov	x1, xzr
ffffffffc0001438:	orr	w0, wzr, #0x1
ffffffffc000143c:	ldp	x9, x8, [sp, #0x60]
ffffffffc0001440:	str	x1, [x19, #0x10]
ffffffffc0001444:	stp	x9, x8, [sp, #0x88]
ffffffffc0001448:	orr	w8, wzr, #0x1
ffffffffc000144c:	ldp	x10, x9, [sp, #0x88]
ffffffffc0001450:	stp	x8, x0, [x19]
ffffffffc0001454:	stp	x10, x9, [x19, #0x18]
ffffffffc0001458:	ldp	x19, x30, [sp, #0xd0]
ffffffffc000145c:	ldp	x21, x20, [sp, #0xc0]
ffffffffc0001460:	ldr	x22, [sp, #0xb0]
ffffffffc0001464:	add	sp, sp, #0xe0
ffffffffc0001468:	ret
ffffffffc000146c:	tbz	w0, #0x0, #0x18 <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x19c>
ffffffffc0001470:	adrp	x0, #0x4000
ffffffffc0001474:	add	x0, x0, #0xee8
ffffffffc0001478:	bl	#0x870 <core::panicking::panic::hd514700a611a3e48>
ffffffffc000147c:	brk	#0x1
ffffffffc0001480:	tbnz	w0, #0x0, #0x2c <kernel_api::cstr::CString::into_string::h8b748705072cb04b+0x1c4>
ffffffffc0001484:	bl	#0x634 <alloc::raw_vec::capacity_overflow::he4b6819a339f6049>
ffffffffc0001488:	brk	#0x1
ffffffffc000148c:	adrp	x0, #0x4000
ffffffffc0001490:	add	x0, x0, #0xf38
ffffffffc0001494:	bl	#0x854 <core::panicking::panic::hd514700a611a3e48>
ffffffffc0001498:	brk	#0x1
ffffffffc000149c:	mov	x0, x20
ffffffffc00014a0:	orr	w1, wzr, #0x1
ffffffffc00014a4:	bl	#0x64c <alloc::alloc::handle_alloc_error::ha05a6b3a93f59cd1>
ffffffffc00014a8:	brk	#0x1
ffffffffc00014ac:	adrp	x0, #0x4000
ffffffffc00014b0:	add	x0, x0, #0xf60
ffffffffc00014b4:	bl	#0x834 <core::panicking::panic::hd514700a611a3e48>
ffffffffc00014b8:	brk	#0x1
ffffffffc00014bc:	udf	#0x0

ffffffffc00014c0 <kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b:
ffffffffc00014c0:	sub	sp, sp, #0xe0
ffffffffc00014c4:	str	x24, [sp, #0xa0]
ffffffffc00014c8:	adrp	x24, #0x4000
ffffffffc00014cc:	stp	x23, x22, [sp, #0xb0]
ffffffffc00014d0:	adrp	x23, #0x4000
ffffffffc00014d4:	stp	x21, x20, [sp, #0xc0]
ffffffffc00014d8:	mov	x22, x1
ffffffffc00014dc:	orr	w21, wzr, #0x1
ffffffffc00014e0:	stp	x19, x30, [sp, #0xd0]
ffffffffc00014e4:	add	x23, x23, #0xdd8
ffffffffc00014e8:	stp	xzr, xzr, [sp, #0x48]
ffffffffc00014ec:	mov	x20, x0
ffffffffc00014f0:	add	x24, x24, #0xde8
ffffffffc00014f4:	add	x1, sp, #0x38
ffffffffc00014f8:	stp	x23, x21, [sp, #0x38]
ffffffffc00014fc:	mov	x0, x2
ffffffffc0001500:	mov	x19, x2
ffffffffc0001504:	stp	x24, xzr, [sp, #0x58]
ffffffffc0001508:	bl	#0x3438 <<core::fmt::Formatter as core::fmt::Write>::write_fmt::h90a4062c2bd7f95c>
ffffffffc000150c:	cbnz	w0, #0x118 <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0x164>
ffffffffc0001510:	sub	x0, x22, #0x1
ffffffffc0001514:	cbz	x22, #0x12c <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0x180>
ffffffffc0001518:	ldp	x10, x9, [sp, #0x40]
ffffffffc000151c:	ldr	x11, [sp, #0x38]
ffffffffc0001520:	mov	x8, xzr
ffffffffc0001524:	ldr	x13, [sp, #0x88]
ffffffffc0001528:	orr	w22, wzr, #0x1
ffffffffc000152c:	stp	x10, x9, [sp, #0x28]
ffffffffc0001530:	ldp	x12, x9, [sp, #0x90]
ffffffffc0001534:	stp	xzr, x13, [sp, #0x68]
ffffffffc0001538:	stp	x9, x11, [sp, #0x18]
ffffffffc000153c:	add	x9, x20, x0
ffffffffc0001540:	ldp	x11, x10, [sp, #0x28]
ffffffffc0001544:	stp	x13, x12, [sp, #0x8]
ffffffffc0001548:	stp	x20, x9, [sp, #0x38]
ffffffffc000154c:	stp	x11, x10, [sp, #0x58]
ffffffffc0001550:	mov	x11, x12
ffffffffc0001554:	ldp	x10, x9, [sp, #0x18]
ffffffffc0001558:	add	x12, sp, #0x38
ffffffffc000155c:	add	x20, x12, #0x18
ffffffffc0001560:	add	x21, x12, #0x38
ffffffffc0001564:	stp	xzr, x9, [sp, #0x48]
ffffffffc0001568:	stp	x11, x10, [sp, #0x78]
ffffffffc000156c:	cmp	x8, #0x1
ffffffffc0001570:	b.ne	#0x20 <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0xd0>
ffffffffc0001574:	b	#0x10 <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0xc4>
ffffffffc0001578:	ldr	x8, [sp, #0x48]
ffffffffc000157c:	cmp	x8, #0x1
ffffffffc0001580:	b.ne	#0x10 <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0xd0>
ffffffffc0001584:	mov	x0, x20
ffffffffc0001588:	bl	#0x718 <<core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::h16f13a8ae4a2ed5c>
ffffffffc000158c:	tbnz	w0, #0x0, #0x60 <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0x12c>
ffffffffc0001590:	ldp	x8, x9, [sp, #0x38]
ffffffffc0001594:	cmp	x8, x9
ffffffffc0001598:	b.eq	#0x3c <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0x114>
ffffffffc000159c:	add	x9, x8, #0x1
ffffffffc00015a0:	str	x9, [sp, #0x38]
ffffffffc00015a4:	ldrb	w0, [x8]
ffffffffc00015a8:	add	x8, sp, #0x88
ffffffffc00015ac:	bl	#0x5ec <core::ascii::escape_default::hecc357d0cc424dd1>
ffffffffc00015b0:	ldp	x10, x8, [sp, #0x90]
ffffffffc00015b4:	ldr	x9, [sp, #0x88]
ffffffffc00015b8:	str	x22, [sp, #0x48]
ffffffffc00015bc:	stp	x10, x8, [x20, #0x8]
ffffffffc00015c0:	str	x9, [x20]
ffffffffc00015c4:	mov	x0, x20
ffffffffc00015c8:	bl	#0x6d8 <<core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::h16f13a8ae4a2ed5c>
ffffffffc00015cc:	tbz	w0, #0x0, #-0x3c <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0xd0>
ffffffffc00015d0:	b	#0x1c <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0x12c>
ffffffffc00015d4:	ldr	x8, [sp, #0x68]
ffffffffc00015d8:	cmp	x8, #0x1
ffffffffc00015dc:	b.ne	#0x28 <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0x144>
ffffffffc00015e0:	mov	x0, x21
ffffffffc00015e4:	bl	#0x6bc <<core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::h16f13a8ae4a2ed5c>
ffffffffc00015e8:	tbz	w0, #0x0, #0x1c <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0x144>
ffffffffc00015ec:	and	w1, w1, #0xff
ffffffffc00015f0:	mov	x0, x19
ffffffffc00015f4:	bl	#0x3414 <<core::fmt::Formatter as core::fmt::Write>::write_char::h01ba1a71f18b5b8a>
ffffffffc00015f8:	tbz	w0, #0x0, #-0x80 <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0xb8>
ffffffffc00015fc:	orr	w21, wzr, #0x1
ffffffffc0001600:	b	#0x24 <<kernel_api::cstr::CStr as core::fmt::Debug>::fmt::he62b6807be92684b+0x164>
ffffffffc0001604:	orr	w8, wzr, #0x1
ffffffffc0001608:	stp	xzr, xzr, [sp, #0x48]
ffffffffc000160c:	add	x1, sp, #0x38
ffffffffc0001610:	stp	x24, xzr, [sp, #0x58]
ffffffffc0001614:	mov	x0, x19
ffffffffc0001618:	stp	x23, x8, [sp, #0x38]
ffffffffc000161c:	bl	#0x3324 <<core::fmt::Formatter as core::fmt::Write>::write_fmt::h90a4062c2bd7f95c>
ffffffffc0001620:	mov	w21, w0
ffffffffc0001624:	mov	w0, w21
ffffffffc0001628:	ldr	x24, [sp, #0xa0]
ffffffffc000162c:	ldp	x19, x30, [sp, #0xd0]
ffffffffc0001630:	ldp	x21, x20, [sp, #0xc0]
ffffffffc0001634:	ldp	x23, x22, [sp, #0xb0]
ffffffffc0001638:	add	sp, sp, #0xe0
ffffffffc000163c:	ret
ffffffffc0001640:	mov	x1, xzr
ffffffffc0001644:	bl	#0x2474 <core::slice::slice_index_len_fail::h54ac268d785f98ad>
ffffffffc0001648:	brk	#0x1
ffffffffc000164c:	udf	#0x0

ffffffffc0001650 <kernel_api::cstr::IntoStringError as core::fmt::Debug>::fmt::hc6f6bdbb0ed15416:
ffffffffc0001650:	sub	sp, sp, #0x30
ffffffffc0001654:	mov	x9, x1
ffffffffc0001658:	str	x20, [sp, #0x10]
ffffffffc000165c:	adrp	x1, #0x4000
ffffffffc0001660:	stp	x19, x30, [sp, #0x20]
ffffffffc0001664:	mov	x19, x0
ffffffffc0001668:	add	x20, x0, #0x10
ffffffffc000166c:	add	x1, x1, #0xde8
ffffffffc0001670:	mov	x8, sp
ffffffffc0001674:	mov	x0, x9
ffffffffc0001678:	orr	w2, wzr, #0xf
ffffffffc000167c:	bl	#0x3314 <core::fmt::Formatter::debug_struct::hb9eb7636bdc6364f>
ffffffffc0001680:	str	x19, [sp, #0x18]
ffffffffc0001684:	adrp	x1, #0x4000
ffffffffc0001688:	adrp	x4, #0x4000
ffffffffc000168c:	mov	w19, #0x5
ffffffffc0001690:	add	x1, x1, #0xdf7
ffffffffc0001694:	add	x4, x4, #0xe00
ffffffffc0001698:	mov	x0, sp
ffffffffc000169c:	add	x3, sp, #0x18
ffffffffc00016a0:	mov	x2, x19
ffffffffc00016a4:	bl	#0x98c <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd>
ffffffffc00016a8:	adrp	x1, #0x4000
ffffffffc00016ac:	str	x20, [sp, #0x18]
ffffffffc00016b0:	adrp	x4, #0x4000
ffffffffc00016b4:	add	x1, x1, #0xe20
ffffffffc00016b8:	add	x4, x4, #0xe28
ffffffffc00016bc:	mov	x0, sp
ffffffffc00016c0:	add	x3, sp, #0x18
ffffffffc00016c4:	mov	x2, x19
ffffffffc00016c8:	bl	#0x968 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd>
ffffffffc00016cc:	mov	x0, sp
ffffffffc00016d0:	bl	#0xb80 <core::fmt::builders::DebugStruct::finish::he53b1c975bd6683b>
ffffffffc00016d4:	ldp	x19, x30, [sp, #0x20]
ffffffffc00016d8:	ldr	x20, [sp, #0x10]
ffffffffc00016dc:	add	sp, sp, #0x30
ffffffffc00016e0:	ret
ffffffffc00016e4:	udf	#0x0

ffffffffc00016e8 <&T as core::fmt::Debug>::fmt::h08dd76c642d2ec5c:
ffffffffc00016e8:	ldr	x0, [x0]
ffffffffc00016ec:	b	#0x22d4 <<core::str::Utf8Error as core::fmt::Debug>::fmt::h3c7a8527f0f2a332>

ffffffffc00016f0 alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177:
ffffffffc00016f0:	str	x20, [sp, #-0x20]!
ffffffffc00016f4:	stp	x19, x30, [sp, #0x10]
ffffffffc00016f8:	mov	x8, x1
ffffffffc00016fc:	ldr	x1, [x0, #0x8]
ffffffffc0001700:	sub	x9, x1, x8
ffffffffc0001704:	cmp	x9, x2
ffffffffc0001708:	b.hs	#0x2c <alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177+0x44>
ffffffffc000170c:	adds	x20, x8, x2
ffffffffc0001710:	mov	x19, x0
ffffffffc0001714:	cset	w8, hs
ffffffffc0001718:	tbz	w3, #0x0, #0x30 <alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177+0x58>
ffffffffc000171c:	tbz	w8, #0x0, #0x44 <alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177+0x70>
ffffffffc0001720:	mov	w8, wzr
ffffffffc0001724:	ldp	x19, x30, [sp, #0x10]
ffffffffc0001728:	mov	w0, w8
ffffffffc000172c:	ldr	x20, [sp], #0x20
ffffffffc0001730:	ret
ffffffffc0001734:	orr	w8, wzr, #0x2
ffffffffc0001738:	ldp	x19, x30, [sp, #0x10]
ffffffffc000173c:	mov	w0, w8
ffffffffc0001740:	ldr	x20, [sp], #0x20
ffffffffc0001744:	ret
ffffffffc0001748:	tbz	w8, #0x0, #0x24 <alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177+0x7c>
ffffffffc000174c:	mov	w8, wzr
ffffffffc0001750:	ldp	x19, x30, [sp, #0x10]
ffffffffc0001754:	mov	w0, w8
ffffffffc0001758:	ldr	x20, [sp], #0x20
ffffffffc000175c:	ret
ffffffffc0001760:	lsl	x8, x1, #1
ffffffffc0001764:	cmp	x20, x8
ffffffffc0001768:	csel	x20, x8, x20, lo
ffffffffc000176c:	cbz	x1, #0x30 <alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177+0xac>
ffffffffc0001770:	ldr	x0, [x19]
ffffffffc0001774:	orr	w2, wzr, #0x1
ffffffffc0001778:	mov	x3, x20
ffffffffc000177c:	bl	#-0xdc4 <__rust_realloc>
ffffffffc0001780:	cbz	x0, #0x2c <alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177+0xbc>
ffffffffc0001784:	orr	w8, wzr, #0x2
ffffffffc0001788:	stp	x0, x20, [x19]
ffffffffc000178c:	ldp	x19, x30, [sp, #0x10]
ffffffffc0001790:	mov	w0, w8
ffffffffc0001794:	ldr	x20, [sp], #0x20
ffffffffc0001798:	ret
ffffffffc000179c:	mov	x0, x20
ffffffffc00017a0:	orr	w1, wzr, #0x1
ffffffffc00017a4:	bl	#-0xe0c <__rust_alloc>
ffffffffc00017a8:	cbnz	x0, #-0x24 <alloc::raw_vec::RawVec<T,A>::reserve_internal::h239ce2926b59cc72.llvm.486458189326537177+0x94>
ffffffffc00017ac:	mov	x0, x20
ffffffffc00017b0:	orr	w1, wzr, #0x1
ffffffffc00017b4:	bl	#0x33c <alloc::alloc::handle_alloc_error::ha05a6b3a93f59cd1>
ffffffffc00017b8:	brk	#0x1
ffffffffc00017bc:	udf	#0x0

ffffffffc00017c0 <kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e:
ffffffffc00017c0:	sub	sp, sp, #0x30
ffffffffc00017c4:	ldrh	w8, [x0]
ffffffffc00017c8:	str	x30, [sp, #0x20]
ffffffffc00017cc:	cmp	x8, #0xc7
ffffffffc00017d0:	b.gt	#0x44 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x54>
ffffffffc00017d4:	sub	x8, x8, #0x1
ffffffffc00017d8:	cmp	x8, #0x68
ffffffffc00017dc:	b.hi	#0x194 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1b0>
ffffffffc00017e0:	adrp	x9, #0x4000
ffffffffc00017e4:	add	x9, x9, #0xf88
ffffffffc00017e8:	adr	x10, #0x10
ffffffffc00017ec:	ldrb	w11, [x9, x8]
ffffffffc00017f0:	add	x10, x10, x11, lsl #2
ffffffffc00017f4:	br	x10
ffffffffc00017f8:	adrp	x9, #0x5000
ffffffffc00017fc:	add	x9, x9, #0xa8
ffffffffc0001800:	add	x8, sp, #0x8
ffffffffc0001804:	mov	x0, x1
ffffffffc0001808:	mov	x1, x9
ffffffffc000180c:	orr	w2, wzr, #0x2
ffffffffc0001810:	b	#0x178 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1c8>
ffffffffc0001814:	cmp	x8, #0xc8
ffffffffc0001818:	b.eq	#0x12c <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x184>
ffffffffc000181c:	cmp	x8, #0xc9
ffffffffc0001820:	b.eq	#0x134 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x194>
ffffffffc0001824:	cmp	x8, #0x12d
ffffffffc0001828:	b.ne	#0x148 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1b0>
ffffffffc000182c:	adrp	x9, #0x4000
ffffffffc0001830:	add	x9, x9, #0xff1
ffffffffc0001834:	add	x8, sp, #0x8
ffffffffc0001838:	mov	x0, x1
ffffffffc000183c:	mov	x1, x9
ffffffffc0001840:	orr	w2, wzr, #0xc
ffffffffc0001844:	b	#0x144 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1c8>
ffffffffc0001848:	adrp	x9, #0x5000
ffffffffc000184c:	add	x9, x9, #0x9f
ffffffffc0001850:	mov	w2, #0x9
ffffffffc0001854:	b	#0x10c <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1a0>
ffffffffc0001858:	adrp	x9, #0x4000
ffffffffc000185c:	add	x9, x9, #0x808
ffffffffc0001860:	b	#0x6c <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x10c>
ffffffffc0001864:	adrp	x9, #0x5000
ffffffffc0001868:	add	x9, x9, #0x98
ffffffffc000186c:	b	#0x10c <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1b8>
ffffffffc0001870:	adrp	x9, #0x4000
ffffffffc0001874:	add	x9, x9, #0x800
ffffffffc0001878:	b	#0x54 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x10c>
ffffffffc000187c:	adrp	x9, #0x5000
ffffffffc0001880:	add	x9, x9, #0x8f
ffffffffc0001884:	mov	w2, #0x9
ffffffffc0001888:	b	#0xd8 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1a0>
ffffffffc000188c:	adrp	x9, #0x4000
ffffffffc0001890:	add	x9, x9, #0x820
ffffffffc0001894:	b	#0x38 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x10c>
ffffffffc0001898:	adrp	x9, #0x5000
ffffffffc000189c:	add	x9, x9, #0x85
ffffffffc00018a0:	mov	w2, #0xa
ffffffffc00018a4:	b	#0xbc <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1a0>
ffffffffc00018a8:	adrp	x9, #0x5000
ffffffffc00018ac:	add	x9, x9, #0x7b
ffffffffc00018b0:	mov	w2, #0xa
ffffffffc00018b4:	b	#0xac <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1a0>
ffffffffc00018b8:	adrp	x9, #0x5000
ffffffffc00018bc:	add	x9, x9, #0x6c
ffffffffc00018c0:	b	#0x70 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x170>
ffffffffc00018c4:	adrp	x9, #0x4000
ffffffffc00018c8:	add	x9, x9, #0x830
ffffffffc00018cc:	add	x8, sp, #0x8
ffffffffc00018d0:	mov	x0, x1
ffffffffc00018d4:	mov	x1, x9
ffffffffc00018d8:	orr	w2, wzr, #0x8
ffffffffc00018dc:	b	#0xac <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1c8>
ffffffffc00018e0:	adrp	x9, #0x5000
ffffffffc00018e4:	add	x9, x9, #0x65
ffffffffc00018e8:	b	#0x90 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1b8>
ffffffffc00018ec:	adrp	x9, #0x5000
ffffffffc00018f0:	add	x9, x9, #0x5e
ffffffffc00018f4:	b	#0x84 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1b8>
ffffffffc00018f8:	adrp	x9, #0x5000
ffffffffc00018fc:	add	x9, x9, #0x54
ffffffffc0001900:	mov	w2, #0xa
ffffffffc0001904:	b	#0x5c <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1a0>
ffffffffc0001908:	adrp	x9, #0x5000
ffffffffc000190c:	add	x9, x9, #0x42
ffffffffc0001910:	mov	w2, #0x12
ffffffffc0001914:	b	#0x4c <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1a0>
ffffffffc0001918:	adrp	x9, #0x5000
ffffffffc000191c:	add	x9, x9, #0x2f
ffffffffc0001920:	mov	w2, #0x13
ffffffffc0001924:	b	#0x3c <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1a0>
ffffffffc0001928:	adrp	x9, #0x5000
ffffffffc000192c:	add	x9, x9, #0x20
ffffffffc0001930:	add	x8, sp, #0x8
ffffffffc0001934:	mov	x0, x1
ffffffffc0001938:	mov	x1, x9
ffffffffc000193c:	orr	w2, wzr, #0xf
ffffffffc0001940:	b	#0x48 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1c8>
ffffffffc0001944:	adrp	x9, #0x5000
ffffffffc0001948:	add	x9, x9, #0x13
ffffffffc000194c:	mov	w2, #0xd
ffffffffc0001950:	b	#0x10 <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1a0>
ffffffffc0001954:	adrp	x9, #0x4000
ffffffffc0001958:	add	x9, x9, #0xffd
ffffffffc000195c:	mov	w2, #0x16
ffffffffc0001960:	add	x8, sp, #0x8
ffffffffc0001964:	mov	x0, x1
ffffffffc0001968:	mov	x1, x9
ffffffffc000196c:	b	#0x1c <<kernel_api::OsError as core::fmt::Debug>::fmt::ha57ea39f2043dc2e+0x1c8>
ffffffffc0001970:	adrp	x9, #0x5000
ffffffffc0001974:	add	x9, x9, #0xaa
ffffffffc0001978:	add	x8, sp, #0x8
ffffffffc000197c:	mov	x0, x1
ffffffffc0001980:	mov	x1, x9
ffffffffc0001984:	orr	w2, wzr, #0x7
ffffffffc0001988:	bl	#0x3040 <core::fmt::Formatter::debug_tuple::h8df15be0add34538>
ffffffffc000198c:	add	x0, sp, #0x8
ffffffffc0001990:	bl	#0xac0 <core::fmt::builders::DebugTuple::finish::h3442d214b640573b>
ffffffffc0001994:	ldr	x30, [sp, #0x20]
ffffffffc0001998:	add	sp, sp, #0x30
ffffffffc000199c:	ret

ffffffffc00019a0 kernel_api::args::CArgs::from_raw::h2e9f2887e59b4fc6:
ffffffffc00019a0:	mov	x9, xzr
ffffffffc00019a4:	ldrb	w10, [x0, x9]
ffffffffc00019a8:	mov	x8, x9
ffffffffc00019ac:	add	x9, x9, #0x1
ffffffffc00019b0:	cbnz	w10, #-0xc <kernel_api::args::CArgs::from_raw::h2e9f2887e59b4fc6+0x4>
ffffffffc00019b4:	add	x10, x0, x8
ffffffffc00019b8:	ldrb	w10, [x10, #0x1]
ffffffffc00019bc:	cbnz	w10, #-0x18 <kernel_api::args::CArgs::from_raw::h2e9f2887e59b4fc6+0x4>
ffffffffc00019c0:	add	x1, x8, #0x2
ffffffffc00019c4:	ret

ffffffffc00019c8 <kernel_api::args::CArgs as core::iter::traits::collect::IntoIterator>::into_iter::hf3c8da2d560349eb:
ffffffffc00019c8:	stp	x0, x1, [x8]
ffffffffc00019cc:	str	xzr, [x8, #0x10]
ffffffffc00019d0:	ret
ffffffffc00019d4:	udf	#0x0

ffffffffc00019d8 <kernel_api::args::ArgsIter as core::iter::traits::iterator::Iterator>::next::he64c1111dbd51964:
ffffffffc00019d8:	sub	sp, sp, #0x70
ffffffffc00019dc:	stp	x19, x30, [sp, #0x60]
ffffffffc00019e0:	mov	x9, x0
ffffffffc00019e4:	ldr	x10, [x0]
ffffffffc00019e8:	mov	x19, x8
ffffffffc00019ec:	ldr	x11, [x0, #0x10]
ffffffffc00019f0:	str	x20, [sp, #0x50]
ffffffffc00019f4:	add	x0, x10, x11
ffffffffc00019f8:	ldrb	w12, [x0]
ffffffffc00019fc:	cbz	w12, #0x64 <<kernel_api::args::ArgsIter as core::iter::traits::iterator::Iterator>::next::he64c1111dbd51964+0x88>
ffffffffc0001a00:	add	x8, x11, #0x1
ffffffffc0001a04:	ldrb	w11, [x10, x8]
ffffffffc0001a08:	add	x8, x8, #0x1
ffffffffc0001a0c:	cbnz	w11, #-0x8 <<kernel_api::args::ArgsIter as core::iter::traits::iterator::Iterator>::next::he64c1111dbd51964+0x2c>
ffffffffc0001a10:	mov	x1, xzr
ffffffffc0001a14:	str	x8, [x9, #0x10]
ffffffffc0001a18:	ldrb	w8, [x0, x1]
ffffffffc0001a1c:	add	x1, x1, #0x1
ffffffffc0001a20:	cbnz	w8, #-0x8 <<kernel_api::args::ArgsIter as core::iter::traits::iterator::Iterator>::next::he64c1111dbd51964+0x40>
ffffffffc0001a24:	add	x8, sp, #0x8
ffffffffc0001a28:	add	x20, sp, #0x8
ffffffffc0001a2c:	bl	#-0x744 <kernel_api::cstr::CString::into_string::h8b748705072cb04b>
ffffffffc0001a30:	ldr	x9, [sp, #0x8]
ffffffffc0001a34:	add	x8, x20, #0x8
ffffffffc0001a38:	cmp	x9, #0x1
ffffffffc0001a3c:	b.eq	#0x3c <<kernel_api::args::ArgsIter as core::iter::traits::iterator::Iterator>::next::he64c1111dbd51964+0xa0>
ffffffffc0001a40:	ldp	x9, x10, [x8, #0x8]
ffffffffc0001a44:	ldr	x8, [x8]
ffffffffc0001a48:	stp	x9, x10, [x19, #0x8]
ffffffffc0001a4c:	str	x8, [x19]
ffffffffc0001a50:	ldp	x19, x30, [sp, #0x60]
ffffffffc0001a54:	ldr	x20, [sp, #0x50]
ffffffffc0001a58:	add	sp, sp, #0x70
ffffffffc0001a5c:	ret
ffffffffc0001a60:	stp	xzr, xzr, [x19, #0x8]
ffffffffc0001a64:	str	xzr, [x19]
ffffffffc0001a68:	ldp	x19, x30, [sp, #0x60]
ffffffffc0001a6c:	ldr	x20, [sp, #0x50]
ffffffffc0001a70:	add	sp, sp, #0x70
ffffffffc0001a74:	ret
ffffffffc0001a78:	ldp	x9, x10, [x8, #0x10]
ffffffffc0001a7c:	adrp	x0, #0x5000
ffffffffc0001a80:	ldp	x8, x11, [x8]
ffffffffc0001a84:	add	x0, x0, #0xb1
ffffffffc0001a88:	mov	w1, #0x22
ffffffffc0001a8c:	stp	x9, x10, [sp, #0x40]
ffffffffc0001a90:	add	x2, sp, #0x30
ffffffffc0001a94:	stp	x8, x11, [sp, #0x30]
ffffffffc0001a98:	bl	#-0x878 <core::result::unwrap_failed::h475c8a0f760f88dd>
ffffffffc0001a9c:	brk	#0x1

ffffffffc0001aa0 <&T as core::fmt::Display>::fmt::h2499d2cc28c66a0d:
ffffffffc0001aa0:	ldp	x8, x9, [x0]
ffffffffc0001aa4:	mov	x2, x1
ffffffffc0001aa8:	mov	x0, x8
ffffffffc0001aac:	mov	x1, x9
ffffffffc0001ab0:	b	#0x2f68 <<str as core::fmt::Display>::fmt::h342559e7c894975f>
ffffffffc0001ab4:	udf	#0x0

ffffffffc0001ab8 alloc::raw_vec::capacity_overflow::he4b6819a339f6049:
ffffffffc0001ab8:	adrp	x0, #0x5000
ffffffffc0001abc:	add	x0, x0, #0x160
ffffffffc0001ac0:	bl	#0x228 <core::panicking::panic::hd514700a611a3e48>
ffffffffc0001ac4:	brk	#0x1

ffffffffc0001ac8 alloc::string::FromUtf8Error::into_bytes::hd638653ca4c4bd52:
ffffffffc0001ac8:	ldp	x9, x10, [x0, #0x8]
ffffffffc0001acc:	ldr	x11, [x0]
ffffffffc0001ad0:	stp	x9, x10, [x8, #0x8]
ffffffffc0001ad4:	str	x11, [x8]
ffffffffc0001ad8:	ret
ffffffffc0001adc:	udf	#0x0

ffffffffc0001ae0 alloc::string::FromUtf8Error::utf8_error::hbe9a0b7c329a5a2b:
ffffffffc0001ae0:	ldp	x10, x9, [x0, #0x18]
ffffffffc0001ae4:	stp	x10, x9, [x8]
ffffffffc0001ae8:	ret
ffffffffc0001aec:	udf	#0x0

ffffffffc0001af0 alloc::alloc::handle_alloc_error::ha05a6b3a93f59cd1:
ffffffffc0001af0:	bl	#-0xec8 <rust_oom>
ffffffffc0001af4:	brk	#0x1

ffffffffc0001af8 core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::h350cec83cf61c005:
ffffffffc0001af8:	sub	sp, sp, #0x90
ffffffffc0001afc:	ldr	x10, [x0]
ffffffffc0001b00:	mov	x8, xzr
ffffffffc0001b04:	mov	x9, sp
ffffffffc0001b08:	str	x30, [sp, #0x80]
ffffffffc0001b0c:	and	w13, w10, #0xf
ffffffffc0001b10:	orr	w14, wzr, #0x30
ffffffffc0001b14:	lsr	x12, x10, #4
ffffffffc0001b18:	bfxil	w14, w10, #0, #4
ffffffffc0001b1c:	add	w10, w13, #0x57
ffffffffc0001b20:	cmp	w13, #0xa
ffffffffc0001b24:	add	x11, x9, x8
ffffffffc0001b28:	csel	w13, w14, w10, lo
ffffffffc0001b2c:	sub	x8, x8, #0x1
ffffffffc0001b30:	mov	x10, x12
ffffffffc0001b34:	strb	w13, [x11, #0x7f]
ffffffffc0001b38:	cbnz	x12, #-0x2c <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::h350cec83cf61c005+0x14>
ffffffffc0001b3c:	add	x0, x8, #0x80
ffffffffc0001b40:	cmp	x0, #0x81
ffffffffc0001b44:	b.hs	#0x38 <core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::h350cec83cf61c005+0x84>
ffffffffc0001b48:	mov	x9, sp
ffffffffc0001b4c:	neg	x5, x8
ffffffffc0001b50:	add	x8, x9, x8
ffffffffc0001b54:	adrp	x2, #0x5000
ffffffffc0001b58:	add	x4, x8, #0x80
ffffffffc0001b5c:	add	x2, x2, #0x188
ffffffffc0001b60:	mov	x0, x1
ffffffffc0001b64:	orr	w1, wzr, #0x1
ffffffffc0001b68:	orr	w3, wzr, #0x2
ffffffffc0001b6c:	bl	#0x25ec <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0001b70:	ldr	x30, [sp, #0x80]
ffffffffc0001b74:	add	sp, sp, #0x90
ffffffffc0001b78:	ret
ffffffffc0001b7c:	orr	w1, wzr, #0x80
ffffffffc0001b80:	bl	#0x1f88 <core::slice::slice_index_order_fail::ha4d039b02b1440b5>
ffffffffc0001b84:	brk	#0x1

ffffffffc0001b88 core::ptr::real_drop_in_place::h0cd744ada9385933:
ffffffffc0001b88:	ret
ffffffffc0001b8c:	udf	#0x0

ffffffffc0001b90 core::ptr::real_drop_in_place::h3661ea5b8c9d5416:
ffffffffc0001b90:	ret
ffffffffc0001b94:	udf	#0x0

ffffffffc0001b98 core::ascii::escape_default::hecc357d0cc424dd1:
ffffffffc0001b98:	and	w9, w0, #0xff
ffffffffc0001b9c:	sub	w11, w9, #0x9
ffffffffc0001ba0:	cmp	w11, #0x1e
ffffffffc0001ba4:	b.hi	#0x38 <core::ascii::escape_default::hecc357d0cc424dd1+0x44>
ffffffffc0001ba8:	adrp	x12, #0x5000
ffffffffc0001bac:	add	x12, x12, #0x260
ffffffffc0001bb0:	mov	w9, #0x745c
ffffffffc0001bb4:	orr	w10, wzr, #0x2
ffffffffc0001bb8:	adr	x13, #0x10
ffffffffc0001bbc:	ldrb	w14, [x12, x11]
ffffffffc0001bc0:	add	x13, x13, x14, lsl #2
ffffffffc0001bc4:	br	x13
ffffffffc0001bc8:	mov	w9, #0x6e5c
ffffffffc0001bcc:	orr	w10, wzr, #0x2
ffffffffc0001bd0:	stp	xzr, x10, [x8]
ffffffffc0001bd4:	str	w9, [x8, #0x10]
ffffffffc0001bd8:	ret
ffffffffc0001bdc:	cmp	w9, #0x5c
ffffffffc0001be0:	b.ne	#0x18 <core::ascii::escape_default::hecc357d0cc424dd1+0x60>
ffffffffc0001be4:	mov	w9, #0x5c5c
ffffffffc0001be8:	orr	w10, wzr, #0x2
ffffffffc0001bec:	stp	xzr, x10, [x8]
ffffffffc0001bf0:	str	w9, [x8, #0x10]
ffffffffc0001bf4:	ret
ffffffffc0001bf8:	sub	w9, w0, #0x20
ffffffffc0001bfc:	and	w9, w9, #0xff
ffffffffc0001c00:	cmp	w9, #0x5f
ffffffffc0001c04:	b.hs	#0x54 <core::ascii::escape_default::hecc357d0cc424dd1+0xc0>
ffffffffc0001c08:	and	w9, w0, #0xff
ffffffffc0001c0c:	orr	w10, wzr, #0x1
ffffffffc0001c10:	stp	xzr, x10, [x8]
ffffffffc0001c14:	str	w9, [x8, #0x10]
ffffffffc0001c18:	ret
ffffffffc0001c1c:	mov	w9, #0x725c
ffffffffc0001c20:	orr	w10, wzr, #0x2
ffffffffc0001c24:	stp	xzr, x10, [x8]
ffffffffc0001c28:	str	w9, [x8, #0x10]
ffffffffc0001c2c:	ret
ffffffffc0001c30:	mov	w9, #0x225c
ffffffffc0001c34:	orr	w10, wzr, #0x2
ffffffffc0001c38:	stp	xzr, x10, [x8]
ffffffffc0001c3c:	str	w9, [x8, #0x10]
ffffffffc0001c40:	ret
ffffffffc0001c44:	mov	w9, #0x275c
ffffffffc0001c48:	orr	w10, wzr, #0x2
ffffffffc0001c4c:	stp	xzr, x10, [x8]
ffffffffc0001c50:	str	w9, [x8, #0x10]
ffffffffc0001c54:	ret
ffffffffc0001c58:	and	w9, w0, #0xff
ffffffffc0001c5c:	mov	w10, #0x57
ffffffffc0001c60:	orr	w11, wzr, #0x30
ffffffffc0001c64:	cmp	w9, #0xa0
ffffffffc0001c68:	and	w12, w0, #0xf
ffffffffc0001c6c:	csel	w13, w11, w10, lo
ffffffffc0001c70:	cmp	w12, #0xa
ffffffffc0001c74:	add	w9, w13, w9, lsr #4
ffffffffc0001c78:	csel	w10, w11, w10, lo
ffffffffc0001c7c:	add	w10, w10, w12
ffffffffc0001c80:	lsl	w10, w10, #24
ffffffffc0001c84:	mov	w11, #0x785c
ffffffffc0001c88:	bfi	w10, w9, #16, #8
ffffffffc0001c8c:	orr	w9, w10, w11
ffffffffc0001c90:	orr	w10, wzr, #0x4
ffffffffc0001c94:	stp	xzr, x10, [x8]
ffffffffc0001c98:	str	w9, [x8, #0x10]
ffffffffc0001c9c:	ret

ffffffffc0001ca0 <core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::h16f13a8ae4a2ed5c:
ffffffffc0001ca0:	ldp	x1, x8, [x0]
ffffffffc0001ca4:	cmp	x1, x8
ffffffffc0001ca8:	b.hs	#0x24 <<core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::h16f13a8ae4a2ed5c+0x2c>
ffffffffc0001cac:	add	x8, x1, #0x1
ffffffffc0001cb0:	cmp	x1, #0x4
ffffffffc0001cb4:	str	x8, [x0]
ffffffffc0001cb8:	b.hs	#0x1c <<core::ascii::EscapeDefault as core::iter::traits::iterator::Iterator>::next::h16f13a8ae4a2ed5c+0x34>
ffffffffc0001cbc:	add	x8, x0, x1
ffffffffc0001cc0:	orr	w0, wzr, #0x1
ffffffffc0001cc4:	ldrb	w1, [x8, #0x10]
ffffffffc0001cc8:	ret
ffffffffc0001ccc:	mov	w0, wzr
ffffffffc0001cd0:	ret
ffffffffc0001cd4:	adrp	x0, #0x5000
ffffffffc0001cd8:	add	x0, x0, #0x2f8
ffffffffc0001cdc:	orr	w2, wzr, #0x4
ffffffffc0001ce0:	bl	#0x50 <core::panicking::panic_bounds_check::h5652958be485e7fc>
ffffffffc0001ce4:	brk	#0x1

ffffffffc0001ce8 core::panicking::panic::hd514700a611a3e48:
ffffffffc0001ce8:	sub	sp, sp, #0x60
ffffffffc0001cec:	ldp	x9, x10, [x0]
ffffffffc0001cf0:	orr	w8, wzr, #0x1
ffffffffc0001cf4:	ldr	x12, [x0, #0x20]
ffffffffc0001cf8:	add	x1, sp, #0x48
ffffffffc0001cfc:	stp	xzr, xzr, [sp, #0x18]
ffffffffc0001d00:	stp	x9, x10, [sp, #0x38]
ffffffffc0001d04:	add	x10, sp, #0x38
ffffffffc0001d08:	ldp	x9, x11, [x0, #0x10]
ffffffffc0001d0c:	add	x0, sp, #0x8
ffffffffc0001d10:	stp	x10, x8, [sp, #0x8]
ffffffffc0001d14:	adrp	x8, #0x5000
ffffffffc0001d18:	add	x8, x8, #0x310
ffffffffc0001d1c:	str	x12, [sp, #0x58]
ffffffffc0001d20:	stp	x9, x11, [sp, #0x48]
ffffffffc0001d24:	stp	x8, xzr, [sp, #0x28]
ffffffffc0001d28:	bl	#0x50 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc0001d2c:	brk	#0x1

ffffffffc0001d30 core::panicking::panic_bounds_check::h5652958be485e7fc:
ffffffffc0001d30:	adrp	x9, #0x1000
ffffffffc0001d34:	stp	x1, x2, [sp, #-0x60]!
ffffffffc0001d38:	add	x8, sp, #0x8
ffffffffc0001d3c:	stp	xzr, xzr, [sp, #0x20]
ffffffffc0001d40:	add	x9, x9, #0x8a8
ffffffffc0001d44:	mov	x10, sp
ffffffffc0001d48:	mov	x1, x0
ffffffffc0001d4c:	stp	x8, x9, [sp, #0x40]
ffffffffc0001d50:	orr	w8, wzr, #0x2
ffffffffc0001d54:	stp	x10, x9, [sp, #0x50]
ffffffffc0001d58:	adrp	x9, #0x5000
ffffffffc0001d5c:	add	x9, x9, #0x378
ffffffffc0001d60:	add	x0, sp, #0x10
ffffffffc0001d64:	stp	x9, x8, [sp, #0x10]
ffffffffc0001d68:	add	x9, sp, #0x40
ffffffffc0001d6c:	stp	x9, x8, [sp, #0x30]
ffffffffc0001d70:	bl	#0x8 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc0001d74:	brk	#0x1

ffffffffc0001d78 core::panicking::panic_fmt::h6d34fa387ad51a6d:
ffffffffc0001d78:	adrp	x8, #0x5000
ffffffffc0001d7c:	add	x8, x8, #0x310
ffffffffc0001d80:	str	x8, [sp, #-0x30]!
ffffffffc0001d84:	adrp	x10, #0x5000
ffffffffc0001d88:	ldr	x11, [x1, #0x10]
ffffffffc0001d8c:	add	x10, x10, #0x310
ffffffffc0001d90:	ldp	x8, x9, [x1]
ffffffffc0001d94:	stp	x10, x0, [sp, #0x8]
ffffffffc0001d98:	mov	x0, sp
ffffffffc0001d9c:	str	x11, [sp, #0x28]
ffffffffc0001da0:	stp	x8, x9, [sp, #0x18]
ffffffffc0001da4:	bl	#-0x1b54 <rust_begin_unwind>
ffffffffc0001da8:	brk	#0x1
ffffffffc0001dac:	udf	#0x0

ffffffffc0001db0 core::str::traits::<impl core::slice::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index::{{closure}}::h634c6f93cdd82db3:
ffffffffc0001db0:	ldp	x8, x9, [x0]
ffffffffc0001db4:	mov	x3, x1
ffffffffc0001db8:	mov	x2, xzr
ffffffffc0001dbc:	mov	x0, x8
ffffffffc0001dc0:	mov	x1, x9
ffffffffc0001dc4:	bl	#0x1884 <core::str::slice_error_fail::haf30dd007bc44399>
ffffffffc0001dc8:	brk	#0x1
ffffffffc0001dcc:	udf	#0x0

ffffffffc0001dd0 core::str::traits::<impl core::slice::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index::{{closure}}::h6158777b4bcb3dec:
ffffffffc0001dd0:	ldp	x8, x9, [x0]
ffffffffc0001dd4:	ldr	x10, [x0, #0x10]
ffffffffc0001dd8:	ldp	x0, x1, [x8]
ffffffffc0001ddc:	ldr	x2, [x9]
ffffffffc0001de0:	ldr	x3, [x10]
ffffffffc0001de4:	bl	#0x1864 <core::str::slice_error_fail::haf30dd007bc44399>
ffffffffc0001de8:	brk	#0x1
ffffffffc0001dec:	udf	#0x0

ffffffffc0001df0 <core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3:
ffffffffc0001df0:	sub	sp, sp, #0xc0
ffffffffc0001df4:	str	d8, [sp, #0x50]
ffffffffc0001df8:	stp	x28, x27, [sp, #0x60]
ffffffffc0001dfc:	stp	x26, x25, [sp, #0x70]
ffffffffc0001e00:	stp	x24, x23, [sp, #0x80]
ffffffffc0001e04:	stp	x22, x21, [sp, #0x90]
ffffffffc0001e08:	stp	x20, x19, [sp, #0xa0]
ffffffffc0001e0c:	stp	x29, x30, [sp, #0xb0]
ffffffffc0001e10:	cbz	x2, #0x1ac <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x1cc>
ffffffffc0001e14:	movi	v8.2s, #0xa
ffffffffc0001e18:	add	x26, sp, #0x20
ffffffffc0001e1c:	mov	x19, x2
ffffffffc0001e20:	mov	x20, x1
ffffffffc0001e24:	mov	x21, x0
ffffffffc0001e28:	add	x22, x26, #0x2c
ffffffffc0001e2c:	orr	w27, wzr, #0x1
ffffffffc0001e30:	mov	w23, #0xa
ffffffffc0001e34:	ldrb	w8, [x21, #0x10]
ffffffffc0001e38:	cbz	w8, #0x20 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x68>
ffffffffc0001e3c:	ldp	x0, x8, [x21]
ffffffffc0001e40:	adrp	x1, #0x5000
ffffffffc0001e44:	add	x1, x1, #0x398
ffffffffc0001e48:	orr	w2, wzr, #0x4
ffffffffc0001e4c:	ldr	x8, [x8, #0x18]
ffffffffc0001e50:	blr	x8
ffffffffc0001e54:	cbnz	w0, #0x170 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x1d4>
ffffffffc0001e58:	mov	w0, w23
ffffffffc0001e5c:	stp	x20, x19, [sp, #0x20]
ffffffffc0001e60:	mov	x1, x20
ffffffffc0001e64:	stp	xzr, x19, [sp, #0x30]
ffffffffc0001e68:	mov	x2, x19
ffffffffc0001e6c:	str	x27, [sp, #0x40]
ffffffffc0001e70:	str	d8, [sp, #0x48]
ffffffffc0001e74:	bl	#0x126c <core::slice::memchr::memchr::h08a8ecbbaccebba6>
ffffffffc0001e78:	cmp	x0, #0x1
ffffffffc0001e7c:	b.ne	#0xa8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x134>
ffffffffc0001e80:	ldr	x8, [sp, #0x30]
ffffffffc0001e84:	ldr	x25, [sp, #0x40]
ffffffffc0001e88:	add	x8, x1, x8
ffffffffc0001e8c:	add	x28, x8, #0x1
ffffffffc0001e90:	subs	x24, x28, x25
ffffffffc0001e94:	str	x28, [sp, #0x30]
ffffffffc0001e98:	b.hs	#0x3c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0xe4>
ffffffffc0001e9c:	ldr	x29, [sp, #0x28]
ffffffffc0001ea0:	ldr	x8, [sp, #0x38]
ffffffffc0001ea4:	subs	x2, x8, x28
ffffffffc0001ea8:	b.lo	#0x84 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x13c>
ffffffffc0001eac:	cmp	x29, x8
ffffffffc0001eb0:	b.lo	#0x7c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x13c>
ffffffffc0001eb4:	add	x9, x26, x25
ffffffffc0001eb8:	ldr	x8, [sp, #0x20]
ffffffffc0001ebc:	ldrb	w0, [x9, #0x2b]
ffffffffc0001ec0:	add	x1, x8, x28
ffffffffc0001ec4:	bl	#0x121c <core::slice::memchr::memchr::h08a8ecbbaccebba6>
ffffffffc0001ec8:	cmp	x0, #0x1
ffffffffc0001ecc:	b.eq	#-0x4c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x90>
ffffffffc0001ed0:	b	#0x54 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x134>
ffffffffc0001ed4:	ldr	x29, [sp, #0x28]
ffffffffc0001ed8:	cmp	x29, x28
ffffffffc0001edc:	csel	x8, xzr, x25, lo
ffffffffc0001ee0:	b.lo	#0x34 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x124>
ffffffffc0001ee4:	cmp	x25, #0x5
ffffffffc0001ee8:	b.hs	#0x104 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x1fc>
ffffffffc0001eec:	cmp	x8, x25
ffffffffc0001ef0:	b.ne	#0x24 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x124>
ffffffffc0001ef4:	ldr	x8, [sp, #0x20]
ffffffffc0001ef8:	add	x0, x8, x24
ffffffffc0001efc:	cmp	x0, x22
ffffffffc0001f00:	b.eq	#0xb0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x1c0>
ffffffffc0001f04:	mov	x1, x22
ffffffffc0001f08:	mov	x2, x25
ffffffffc0001f0c:	bl	#0x37f4 <memcmp>
ffffffffc0001f10:	cbz	w0, #0xa0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x1c0>
ffffffffc0001f14:	ldr	x8, [sp, #0x38]
ffffffffc0001f18:	subs	x2, x8, x28
ffffffffc0001f1c:	b.hs	#-0x70 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0xbc>
ffffffffc0001f20:	b	#0xc <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x13c>
ffffffffc0001f24:	ldr	x8, [sp, #0x38]
ffffffffc0001f28:	str	x8, [sp, #0x30]
ffffffffc0001f2c:	mov	x25, x19
ffffffffc0001f30:	strb	wzr, [x21, #0x10]
ffffffffc0001f34:	cmp	x25, #0x0
ffffffffc0001f38:	cset	w9, eq
ffffffffc0001f3c:	cmp	x19, x25
ffffffffc0001f40:	cset	w10, eq
ffffffffc0001f44:	ldp	x0, x8, [x21]
ffffffffc0001f48:	orr	w24, w9, w10
ffffffffc0001f4c:	stp	x20, x19, [sp, #0x20]
ffffffffc0001f50:	tbnz	w24, #0x0, #0x18 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x178>
ffffffffc0001f54:	cmp	x19, x25
ffffffffc0001f58:	b.ls	#0xa4 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x20c>
ffffffffc0001f5c:	ldrsb	w9, [x20, x25]
ffffffffc0001f60:	cmn	w9, #0x41
ffffffffc0001f64:	b.le	#0x98 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x20c>
ffffffffc0001f68:	ldr	x8, [x8, #0x18]
ffffffffc0001f6c:	mov	x1, x20
ffffffffc0001f70:	mov	x2, x25
ffffffffc0001f74:	blr	x8
ffffffffc0001f78:	tbnz	w0, #0x0, #0x4c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x1d4>
ffffffffc0001f7c:	stp	x20, x19, [sp, #0x8]
ffffffffc0001f80:	str	x25, [sp, #0x18]
ffffffffc0001f84:	str	x19, [sp, #0x58]
ffffffffc0001f88:	tbnz	w24, #0x0, #0x18 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x1b0>
ffffffffc0001f8c:	cmp	x19, x25
ffffffffc0001f90:	b.ls	#0x7c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x21c>
ffffffffc0001f94:	ldrsb	w8, [x20, x25]
ffffffffc0001f98:	cmn	w8, #0x41
ffffffffc0001f9c:	b.le	#0x70 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x21c>
ffffffffc0001fa0:	add	x20, x20, x25
ffffffffc0001fa4:	subs	x19, x19, x25
ffffffffc0001fa8:	b.ne	#-0x174 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x44>
ffffffffc0001fac:	b	#0x10 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x1cc>
ffffffffc0001fb0:	add	x25, x24, #0x1
ffffffffc0001fb4:	strb	w27, [x21, #0x10]
ffffffffc0001fb8:	b	#-0x84 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x144>
ffffffffc0001fbc:	mov	w0, wzr
ffffffffc0001fc0:	b	#0x8 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3+0x1d8>
ffffffffc0001fc4:	orr	w0, wzr, #0x1
ffffffffc0001fc8:	ldp	x29, x30, [sp, #0xb0]
ffffffffc0001fcc:	ldp	x20, x19, [sp, #0xa0]
ffffffffc0001fd0:	ldp	x22, x21, [sp, #0x90]
ffffffffc0001fd4:	ldp	x24, x23, [sp, #0x80]
ffffffffc0001fd8:	ldp	x26, x25, [sp, #0x70]
ffffffffc0001fdc:	ldp	x28, x27, [sp, #0x60]
ffffffffc0001fe0:	ldr	d8, [sp, #0x50]
ffffffffc0001fe4:	add	sp, sp, #0xc0
ffffffffc0001fe8:	ret
ffffffffc0001fec:	mov	x0, x25
ffffffffc0001ff0:	orr	w1, wzr, #0x4
ffffffffc0001ff4:	bl	#0x1ac4 <core::slice::slice_index_len_fail::h54ac268d785f98ad>
ffffffffc0001ff8:	brk	#0x1
ffffffffc0001ffc:	add	x0, sp, #0x20
ffffffffc0002000:	mov	x1, x25
ffffffffc0002004:	bl	#-0x254 <core::str::traits::<impl core::slice::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index::{{closure}}::h634c6f93cdd82db3>
ffffffffc0002008:	brk	#0x1
ffffffffc000200c:	add	x8, sp, #0x8
ffffffffc0002010:	add	x9, sp, #0x58
ffffffffc0002014:	add	x10, sp, #0x18
ffffffffc0002018:	add	x0, sp, #0x20
ffffffffc000201c:	str	x9, [sp, #0x30]
ffffffffc0002020:	stp	x8, x10, [sp, #0x20]
ffffffffc0002024:	bl	#-0x254 <core::str::traits::<impl core::slice::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index::{{closure}}::h6158777b4bcb3dec>
ffffffffc0002028:	brk	#0x1
ffffffffc000202c:	udf	#0x0

ffffffffc0002030 core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd:
ffffffffc0002030:	sub	sp, sp, #0x120
ffffffffc0002034:	stp	x25, x24, [sp, #0xe0]
ffffffffc0002038:	orr	w24, wzr, #0x1
ffffffffc000203c:	stp	x23, x22, [sp, #0xf0]
ffffffffc0002040:	orr	w8, wzr, #0x1
ffffffffc0002044:	stp	x21, x20, [sp, #0x100]
ffffffffc0002048:	stp	x19, x30, [sp, #0x110]
ffffffffc000204c:	mov	x19, x0
ffffffffc0002050:	ldrb	w9, [x0, #0x8]
ffffffffc0002054:	str	x28, [sp, #0xd0]
ffffffffc0002058:	cbnz	w9, #0x1ac <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x1d4>
ffffffffc000205c:	ldr	x8, [x19]
ffffffffc0002060:	mov	x21, x4
ffffffffc0002064:	ldrb	w10, [x19, #0x9]
ffffffffc0002068:	mov	x20, x3
ffffffffc000206c:	mov	x22, x2
ffffffffc0002070:	mov	x23, x1
ffffffffc0002074:	ldr	w9, [x8, #0x50]
ffffffffc0002078:	tbnz	w9, #0x2, #0x84 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0xcc>
ffffffffc000207c:	ldp	x0, x11, [x8, #0x20]
ffffffffc0002080:	adrp	x9, #0x4000
ffffffffc0002084:	adrp	x12, #0x4000
ffffffffc0002088:	add	x9, x9, #0x3af
ffffffffc000208c:	add	x12, x12, #0x3b1
ffffffffc0002090:	cmp	w10, #0x0
ffffffffc0002094:	csel	x1, x12, x9, eq
ffffffffc0002098:	ldr	x9, [x11, #0x18]
ffffffffc000209c:	orr	w8, wzr, #0x2
ffffffffc00020a0:	cinc	x2, x8, eq
ffffffffc00020a4:	blr	x9
ffffffffc00020a8:	tbnz	w0, #0x0, #0x158 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x1d0>
ffffffffc00020ac:	ldr	x8, [x19]
ffffffffc00020b0:	mov	x1, x23
ffffffffc00020b4:	mov	x2, x22
ffffffffc00020b8:	ldp	x0, x9, [x8, #0x20]
ffffffffc00020bc:	ldr	x8, [x9, #0x18]
ffffffffc00020c0:	blr	x8
ffffffffc00020c4:	tbnz	w0, #0x0, #0x13c <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x1d0>
ffffffffc00020c8:	ldr	x8, [x19]
ffffffffc00020cc:	adrp	x1, #0x4000
ffffffffc00020d0:	add	x1, x1, #0x3ab
ffffffffc00020d4:	orr	w2, wzr, #0x2
ffffffffc00020d8:	ldp	x0, x9, [x8, #0x20]
ffffffffc00020dc:	ldr	x8, [x9, #0x18]
ffffffffc00020e0:	blr	x8
ffffffffc00020e4:	tbnz	w0, #0x0, #0x11c <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x1d0>
ffffffffc00020e8:	ldr	x1, [x19]
ffffffffc00020ec:	mov	x0, x20
ffffffffc00020f0:	ldr	x8, [x21, #0x18]
ffffffffc00020f4:	blr	x8
ffffffffc00020f8:	b	#0x14c <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x214>
ffffffffc00020fc:	cbnz	w10, #0x28 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0xf4>
ffffffffc0002100:	ldp	x0, x9, [x8, #0x20]
ffffffffc0002104:	adrp	x1, #0x4000
ffffffffc0002108:	add	x1, x1, #0x3a8
ffffffffc000210c:	orr	w2, wzr, #0x3
ffffffffc0002110:	ldr	x8, [x9, #0x18]
ffffffffc0002114:	blr	x8
ffffffffc0002118:	tbnz	w0, #0x0, #0xe8 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x1d0>
ffffffffc000211c:	ldr	x8, [x19]
ffffffffc0002120:	ldr	w9, [x8, #0x50]
ffffffffc0002124:	ldr	x10, [x8, #0x28]
ffffffffc0002128:	add	x0, sp, #0x50
ffffffffc000212c:	stp	xzr, xzr, [sp, #0x58]
ffffffffc0002130:	mov	x1, x23
ffffffffc0002134:	str	xzr, [sp, #0x50]
ffffffffc0002138:	mov	x2, x22
ffffffffc000213c:	str	x10, [sp, #0x28]
ffffffffc0002140:	ldr	x10, [x8, #0x20]
ffffffffc0002144:	str	x10, [sp, #0x20]
ffffffffc0002148:	orr	w10, wzr, #0x1
ffffffffc000214c:	ldr	q0, [sp, #0x20]
ffffffffc0002150:	strb	w10, [sp, #0x60]
ffffffffc0002154:	str	q0, [sp, #0x50]
ffffffffc0002158:	ldr	x10, [x8, #0x8]
ffffffffc000215c:	ldr	w11, [x8, #0x54]
ffffffffc0002160:	ldrb	w12, [x8, #0x58]
ffffffffc0002164:	str	x10, [sp, #0x48]
ffffffffc0002168:	ldr	x10, [x8]
ffffffffc000216c:	str	x10, [sp, #0x40]
ffffffffc0002170:	ldr	x10, [x8, #0x18]
ffffffffc0002174:	str	x10, [sp, #0x38]
ffffffffc0002178:	ldr	x10, [x8, #0x10]
ffffffffc000217c:	str	x10, [sp, #0x30]
ffffffffc0002180:	ldr	x10, [x8, #0x38]
ffffffffc0002184:	ldp	q1, q0, [sp, #0x30]
ffffffffc0002188:	str	x10, [sp, #0x8]
ffffffffc000218c:	ldr	x10, [x8, #0x30]
ffffffffc0002190:	str	x10, [sp]
ffffffffc0002194:	ldr	x10, [x8, #0x48]
ffffffffc0002198:	str	x10, [sp, #0x18]
ffffffffc000219c:	adrp	x10, #0x5000
ffffffffc00021a0:	ldr	x8, [x8, #0x40]
ffffffffc00021a4:	add	x10, x10, #0xd00
ffffffffc00021a8:	stp	w9, w11, [sp, #0xc0]
ffffffffc00021ac:	strb	w12, [sp, #0xc8]
ffffffffc00021b0:	ldr	x25, [x10, #0x18]
ffffffffc00021b4:	str	x8, [sp, #0x10]
ffffffffc00021b8:	add	x8, sp, #0x50
ffffffffc00021bc:	ldp	q2, q3, [sp]
ffffffffc00021c0:	stp	q0, q1, [sp, #0x70]
ffffffffc00021c4:	stp	x8, x10, [sp, #0x90]
ffffffffc00021c8:	stp	q2, q3, [sp, #0xa0]
ffffffffc00021cc:	blr	x25
ffffffffc00021d0:	cbnz	w0, #0x30 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x1d0>
ffffffffc00021d4:	adrp	x1, #0x4000
ffffffffc00021d8:	add	x1, x1, #0x3ab
ffffffffc00021dc:	add	x0, sp, #0x50
ffffffffc00021e0:	orr	w2, wzr, #0x2
ffffffffc00021e4:	blr	x25
ffffffffc00021e8:	tbnz	w0, #0x0, #0x18 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x1d0>
ffffffffc00021ec:	ldr	x8, [x21, #0x18]
ffffffffc00021f0:	add	x1, sp, #0x70
ffffffffc00021f4:	mov	x0, x20
ffffffffc00021f8:	blr	x8
ffffffffc00021fc:	tbz	w0, #0x0, #0x30 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x1fc>
ffffffffc0002200:	orr	w8, wzr, #0x1
ffffffffc0002204:	strb	w8, [x19, #0x8]
ffffffffc0002208:	mov	x0, x19
ffffffffc000220c:	strb	w24, [x19, #0x9]
ffffffffc0002210:	ldp	x19, x30, [sp, #0x110]
ffffffffc0002214:	ldp	x21, x20, [sp, #0x100]
ffffffffc0002218:	ldp	x23, x22, [sp, #0xf0]
ffffffffc000221c:	ldp	x25, x24, [sp, #0xe0]
ffffffffc0002220:	ldr	x28, [sp, #0xd0]
ffffffffc0002224:	add	sp, sp, #0x120
ffffffffc0002228:	ret
ffffffffc000222c:	ldp	x0, x8, [sp, #0x90]
ffffffffc0002230:	adrp	x1, #0x4000
ffffffffc0002234:	add	x1, x1, #0x3ad
ffffffffc0002238:	orr	w2, wzr, #0x2
ffffffffc000223c:	ldr	x8, [x8, #0x18]
ffffffffc0002240:	blr	x8
ffffffffc0002244:	mov	w8, w0
ffffffffc0002248:	b	#-0x44 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd+0x1d4>
ffffffffc000224c:	udf	#0x0

ffffffffc0002250 core::fmt::builders::DebugStruct::finish::he53b1c975bd6683b:
ffffffffc0002250:	stp	x19, x30, [sp, #-0x10]!
ffffffffc0002254:	mov	x19, x0
ffffffffc0002258:	ldrb	w8, [x0, #0x9]
ffffffffc000225c:	ldrb	w0, [x0, #0x8]
ffffffffc0002260:	cbz	w8, #0x48 <core::fmt::builders::DebugStruct::finish::he53b1c975bd6683b+0x58>
ffffffffc0002264:	cbz	w0, #0xc <core::fmt::builders::DebugStruct::finish::he53b1c975bd6683b+0x20>
ffffffffc0002268:	orr	w0, wzr, #0x1
ffffffffc000226c:	b	#0x38 <core::fmt::builders::DebugStruct::finish::he53b1c975bd6683b+0x54>
ffffffffc0002270:	ldr	x8, [x19]
ffffffffc0002274:	ldp	x0, x9, [x8, #0x20]
ffffffffc0002278:	ldrb	w10, [x8, #0x50]
ffffffffc000227c:	ldr	x8, [x9, #0x18]
ffffffffc0002280:	tbnz	w10, #0x2, #0x14 <core::fmt::builders::DebugStruct::finish::he53b1c975bd6683b+0x44>
ffffffffc0002284:	adrp	x1, #0x4000
ffffffffc0002288:	add	x1, x1, #0x3b5
ffffffffc000228c:	orr	w2, wzr, #0x2
ffffffffc0002290:	b	#0x10 <core::fmt::builders::DebugStruct::finish::he53b1c975bd6683b+0x50>
ffffffffc0002294:	adrp	x1, #0x4000
ffffffffc0002298:	add	x1, x1, #0x3b4
ffffffffc000229c:	orr	w2, wzr, #0x1
ffffffffc00022a0:	blr	x8
ffffffffc00022a4:	strb	w0, [x19, #0x8]
ffffffffc00022a8:	cmp	w0, #0x0
ffffffffc00022ac:	cset	w0, ne
ffffffffc00022b0:	ldp	x19, x30, [sp], #0x10
ffffffffc00022b4:	ret

ffffffffc00022b8 core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c:
ffffffffc00022b8:	sub	sp, sp, #0x100
ffffffffc00022bc:	stp	x21, x20, [sp, #0xe0]
ffffffffc00022c0:	stp	x19, x30, [sp, #0xf0]
ffffffffc00022c4:	mov	x19, x0
ffffffffc00022c8:	ldrb	w8, [x0, #0x10]
ffffffffc00022cc:	str	x22, [sp, #0xd0]
ffffffffc00022d0:	cbz	w8, #0x30 <core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c+0x48>
ffffffffc00022d4:	orr	w22, wzr, #0x1
ffffffffc00022d8:	ldr	x8, [x19, #0x8]
ffffffffc00022dc:	mov	x0, x19
ffffffffc00022e0:	strb	w22, [x19, #0x10]
ffffffffc00022e4:	ldr	x22, [sp, #0xd0]
ffffffffc00022e8:	add	x8, x8, #0x1
ffffffffc00022ec:	str	x8, [x19, #0x8]
ffffffffc00022f0:	ldp	x19, x30, [sp, #0xf0]
ffffffffc00022f4:	ldp	x21, x20, [sp, #0xe0]
ffffffffc00022f8:	add	sp, sp, #0x100
ffffffffc00022fc:	ret
ffffffffc0002300:	ldp	x8, x10, [x19]
ffffffffc0002304:	mov	x21, x2
ffffffffc0002308:	mov	x20, x1
ffffffffc000230c:	ldr	w9, [x8, #0x50]
ffffffffc0002310:	tbnz	w9, #0x2, #0x48 <core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c+0xa0>
ffffffffc0002314:	ldp	x0, x11, [x8, #0x20]
ffffffffc0002318:	adrp	x9, #0x4000
ffffffffc000231c:	adrp	x12, #0x4000
ffffffffc0002320:	add	x9, x9, #0x3af
ffffffffc0002324:	add	x12, x12, #0x3b9
ffffffffc0002328:	ldr	x8, [x11, #0x18]
ffffffffc000232c:	cmp	x10, #0x0
ffffffffc0002330:	orr	w22, wzr, #0x1
ffffffffc0002334:	csel	x1, x12, x9, eq
ffffffffc0002338:	cinc	x2, x22, ne
ffffffffc000233c:	blr	x8
ffffffffc0002340:	tbnz	w0, #0x0, #-0x68 <core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c+0x20>
ffffffffc0002344:	ldr	x1, [x19]
ffffffffc0002348:	mov	x0, x20
ffffffffc000234c:	ldr	x8, [x21, #0x18]
ffffffffc0002350:	blr	x8
ffffffffc0002354:	b	#0xf0 <core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c+0x18c>
ffffffffc0002358:	cbnz	x10, #0x28 <core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c+0xc8>
ffffffffc000235c:	ldp	x0, x9, [x8, #0x20]
ffffffffc0002360:	adrp	x1, #0x4000
ffffffffc0002364:	add	x1, x1, #0x3b7
ffffffffc0002368:	orr	w2, wzr, #0x2
ffffffffc000236c:	ldr	x8, [x9, #0x18]
ffffffffc0002370:	blr	x8
ffffffffc0002374:	tbnz	w0, #0x0, #-0xa0 <core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c+0x1c>
ffffffffc0002378:	ldr	x8, [x19]
ffffffffc000237c:	ldr	w9, [x8, #0x50]
ffffffffc0002380:	ldr	x10, [x8, #0x28]
ffffffffc0002384:	add	x1, sp, #0x70
ffffffffc0002388:	stp	xzr, xzr, [sp, #0x58]
ffffffffc000238c:	mov	x0, x20
ffffffffc0002390:	str	xzr, [sp, #0x50]
ffffffffc0002394:	str	x10, [sp, #0x28]
ffffffffc0002398:	ldr	x10, [x8, #0x20]
ffffffffc000239c:	str	x10, [sp, #0x20]
ffffffffc00023a0:	orr	w10, wzr, #0x1
ffffffffc00023a4:	ldr	q0, [sp, #0x20]
ffffffffc00023a8:	strb	w10, [sp, #0x60]
ffffffffc00023ac:	str	q0, [sp, #0x50]
ffffffffc00023b0:	ldr	x10, [x8, #0x8]
ffffffffc00023b4:	ldr	w11, [x8, #0x54]
ffffffffc00023b8:	ldrb	w12, [x8, #0x58]
ffffffffc00023bc:	str	x10, [sp, #0x48]
ffffffffc00023c0:	ldr	x10, [x8]
ffffffffc00023c4:	str	x10, [sp, #0x40]
ffffffffc00023c8:	ldr	x10, [x8, #0x18]
ffffffffc00023cc:	str	x10, [sp, #0x38]
ffffffffc00023d0:	ldr	x10, [x8, #0x10]
ffffffffc00023d4:	str	x10, [sp, #0x30]
ffffffffc00023d8:	ldr	x10, [x8, #0x38]
ffffffffc00023dc:	ldp	q1, q0, [sp, #0x30]
ffffffffc00023e0:	str	x10, [sp, #0x8]
ffffffffc00023e4:	ldr	x10, [x8, #0x30]
ffffffffc00023e8:	str	x10, [sp]
ffffffffc00023ec:	ldr	x10, [x8, #0x48]
ffffffffc00023f0:	str	x10, [sp, #0x18]
ffffffffc00023f4:	adrp	x10, #0x5000
ffffffffc00023f8:	ldr	x8, [x8, #0x40]
ffffffffc00023fc:	add	x10, x10, #0xd00
ffffffffc0002400:	stp	w9, w11, [sp, #0xc0]
ffffffffc0002404:	strb	w12, [sp, #0xc8]
ffffffffc0002408:	stp	q0, q1, [sp, #0x70]
ffffffffc000240c:	str	x8, [sp, #0x10]
ffffffffc0002410:	add	x8, sp, #0x50
ffffffffc0002414:	ldp	q2, q3, [sp]
ffffffffc0002418:	ldr	x9, [x21, #0x18]
ffffffffc000241c:	stp	x8, x10, [sp, #0x90]
ffffffffc0002420:	stp	q2, q3, [sp, #0xa0]
ffffffffc0002424:	blr	x9
ffffffffc0002428:	cbnz	w0, #-0x154 <core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c+0x1c>
ffffffffc000242c:	ldp	x0, x8, [sp, #0x90]
ffffffffc0002430:	adrp	x1, #0x4000
ffffffffc0002434:	add	x1, x1, #0x3ad
ffffffffc0002438:	orr	w2, wzr, #0x2
ffffffffc000243c:	ldr	x8, [x8, #0x18]
ffffffffc0002440:	blr	x8
ffffffffc0002444:	mov	w22, w0
ffffffffc0002448:	b	#-0x170 <core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c+0x20>
ffffffffc000244c:	udf	#0x0

ffffffffc0002450 core::fmt::builders::DebugTuple::finish::h3442d214b640573b:
ffffffffc0002450:	str	x20, [sp, #-0x20]!
ffffffffc0002454:	stp	x19, x30, [sp, #0x10]
ffffffffc0002458:	ldr	x8, [x0, #0x8]
ffffffffc000245c:	ldrb	w20, [x0, #0x10]
ffffffffc0002460:	cbz	x8, #0x74 <core::fmt::builders::DebugTuple::finish::h3442d214b640573b+0x84>
ffffffffc0002464:	mov	x19, x0
ffffffffc0002468:	cbz	w20, #0xc <core::fmt::builders::DebugTuple::finish::h3442d214b640573b+0x24>
ffffffffc000246c:	orr	w20, wzr, #0x1
ffffffffc0002470:	b	#0x60 <core::fmt::builders::DebugTuple::finish::h3442d214b640573b+0x80>
ffffffffc0002474:	cmp	x8, #0x1
ffffffffc0002478:	b.ne	#0x38 <core::fmt::builders::DebugTuple::finish::h3442d214b640573b+0x60>
ffffffffc000247c:	ldrb	w8, [x19, #0x11]
ffffffffc0002480:	cbz	w8, #0x30 <core::fmt::builders::DebugTuple::finish::h3442d214b640573b+0x60>
ffffffffc0002484:	ldr	x8, [x19]
ffffffffc0002488:	ldrb	w9, [x8, #0x50]
ffffffffc000248c:	tbnz	w9, #0x2, #0x24 <core::fmt::builders::DebugTuple::finish::h3442d214b640573b+0x60>
ffffffffc0002490:	ldp	x0, x9, [x8, #0x20]
ffffffffc0002494:	adrp	x1, #0x4000
ffffffffc0002498:	add	x1, x1, #0x3ba
ffffffffc000249c:	orr	w2, wzr, #0x1
ffffffffc00024a0:	ldr	x8, [x9, #0x18]
ffffffffc00024a4:	orr	w20, wzr, #0x1
ffffffffc00024a8:	blr	x8
ffffffffc00024ac:	tbnz	w0, #0x0, #0x24 <core::fmt::builders::DebugTuple::finish::h3442d214b640573b+0x80>
ffffffffc00024b0:	ldr	x8, [x19]
ffffffffc00024b4:	adrp	x1, #0x4000
ffffffffc00024b8:	add	x1, x1, #0x3bb
ffffffffc00024bc:	orr	w2, wzr, #0x1
ffffffffc00024c0:	ldp	x0, x9, [x8, #0x20]
ffffffffc00024c4:	ldr	x8, [x9, #0x18]
ffffffffc00024c8:	blr	x8
ffffffffc00024cc:	mov	w20, w0
ffffffffc00024d0:	strb	w20, [x19, #0x10]
ffffffffc00024d4:	ldp	x19, x30, [sp, #0x10]
ffffffffc00024d8:	cmp	w20, #0x0
ffffffffc00024dc:	cset	w0, ne
ffffffffc00024e0:	ldr	x20, [sp], #0x20
ffffffffc00024e4:	ret

ffffffffc00024e8 core::fmt::Write::write_char::he2347fac39fae41c:
ffffffffc00024e8:	str	x30, [sp, #-0x10]!
ffffffffc00024ec:	cmp	w1, #0x80
ffffffffc00024f0:	str	wzr, [sp, #0xc]
ffffffffc00024f4:	b.hs	#0x1c <core::fmt::Write::write_char::he2347fac39fae41c+0x28>
ffffffffc00024f8:	orr	w2, wzr, #0x1
ffffffffc00024fc:	strb	w1, [sp, #0xc]
ffffffffc0002500:	add	x1, sp, #0xc
ffffffffc0002504:	bl	#-0x714 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3>
ffffffffc0002508:	ldr	x30, [sp], #0x10
ffffffffc000250c:	ret
ffffffffc0002510:	cmp	w1, #0x800
ffffffffc0002514:	b.hs	#0x30 <core::fmt::Write::write_char::he2347fac39fae41c+0x5c>
ffffffffc0002518:	orr	w8, wzr, #0xc0
ffffffffc000251c:	orr	w9, wzr, #0x80
ffffffffc0002520:	bfxil	w8, w1, #6, #5
ffffffffc0002524:	bfxil	w9, w1, #0, #6
ffffffffc0002528:	orr	w2, wzr, #0x2
ffffffffc000252c:	strb	w8, [sp, #0xc]
ffffffffc0002530:	strb	w9, [sp, #0xd]
ffffffffc0002534:	add	x1, sp, #0xc
ffffffffc0002538:	bl	#-0x748 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3>
ffffffffc000253c:	ldr	x30, [sp], #0x10
ffffffffc0002540:	ret
ffffffffc0002544:	cmp	w1, #0x10, lsl #12
ffffffffc0002548:	b.hs	#0x3c <core::fmt::Write::write_char::he2347fac39fae41c+0x9c>
ffffffffc000254c:	orr	w8, wzr, #0xe0
ffffffffc0002550:	orr	w9, wzr, #0x80
ffffffffc0002554:	orr	w10, wzr, #0x80
ffffffffc0002558:	bfxil	w8, w1, #12, #4
ffffffffc000255c:	bfxil	w10, w1, #6, #6
ffffffffc0002560:	bfxil	w9, w1, #0, #6
ffffffffc0002564:	strb	w8, [sp, #0xc]
ffffffffc0002568:	orr	w2, wzr, #0x3
ffffffffc000256c:	strb	w10, [sp, #0xd]
ffffffffc0002570:	strb	w9, [sp, #0xe]
ffffffffc0002574:	add	x1, sp, #0xc
ffffffffc0002578:	bl	#-0x788 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3>
ffffffffc000257c:	ldr	x30, [sp], #0x10
ffffffffc0002580:	ret
ffffffffc0002584:	lsr	w8, w1, #18
ffffffffc0002588:	orr	w8, w8, #0xf0
ffffffffc000258c:	orr	w9, wzr, #0x80
ffffffffc0002590:	orr	w10, wzr, #0x80
ffffffffc0002594:	orr	w11, wzr, #0x80
ffffffffc0002598:	strb	w8, [sp, #0xc]
ffffffffc000259c:	orr	w2, wzr, #0x4
ffffffffc00025a0:	bfxil	w10, w1, #12, #6
ffffffffc00025a4:	bfxil	w11, w1, #6, #6
ffffffffc00025a8:	bfxil	w9, w1, #0, #6
ffffffffc00025ac:	strb	w10, [sp, #0xd]
ffffffffc00025b0:	strb	w11, [sp, #0xe]
ffffffffc00025b4:	strb	w9, [sp, #0xf]
ffffffffc00025b8:	add	x1, sp, #0xc
ffffffffc00025bc:	bl	#-0x7cc <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3>
ffffffffc00025c0:	ldr	x30, [sp], #0x10
ffffffffc00025c4:	ret

ffffffffc00025c8 core::fmt::Write::write_fmt::h91505223dbc81ad0:
ffffffffc00025c8:	sub	sp, sp, #0x40
ffffffffc00025cc:	stp	x30, x0, [sp, #0x30]
ffffffffc00025d0:	mov	x0, sp
ffffffffc00025d4:	orr	w2, wzr, #0x30
ffffffffc00025d8:	bl	#0x2d08 <memcpy>
ffffffffc00025dc:	adrp	x1, #0x4000
ffffffffc00025e0:	add	x1, x1, #0x3c0
ffffffffc00025e4:	add	x0, sp, #0x38
ffffffffc00025e8:	mov	x2, sp
ffffffffc00025ec:	bl	#0x184c <core::fmt::write::h30a176880c7ec5aa>
ffffffffc00025f0:	ldr	x30, [sp, #0x30]
ffffffffc00025f4:	add	sp, sp, #0x40
ffffffffc00025f8:	ret
ffffffffc00025fc:	udf	#0x0

ffffffffc0002600 <&mut W as core::fmt::Write>::write_str::h81d79b64eb9133e2:
ffffffffc0002600:	ldr	x0, [x0]
ffffffffc0002604:	b	#-0x814 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3>

ffffffffc0002608 <&mut W as core::fmt::Write>::write_char::h75b629484dd63ba9:
ffffffffc0002608:	str	x30, [sp, #-0x10]!
ffffffffc000260c:	ldr	x0, [x0]
ffffffffc0002610:	cmp	w1, #0x80
ffffffffc0002614:	str	wzr, [sp, #0xc]
ffffffffc0002618:	b.hs	#0x1c <<&mut W as core::fmt::Write>::write_char::h75b629484dd63ba9+0x2c>
ffffffffc000261c:	orr	w2, wzr, #0x1
ffffffffc0002620:	strb	w1, [sp, #0xc]
ffffffffc0002624:	add	x1, sp, #0xc
ffffffffc0002628:	bl	#-0x838 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3>
ffffffffc000262c:	ldr	x30, [sp], #0x10
ffffffffc0002630:	ret
ffffffffc0002634:	cmp	w1, #0x800
ffffffffc0002638:	b.hs	#0x30 <<&mut W as core::fmt::Write>::write_char::h75b629484dd63ba9+0x60>
ffffffffc000263c:	orr	w8, wzr, #0xc0
ffffffffc0002640:	orr	w9, wzr, #0x80
ffffffffc0002644:	bfxil	w8, w1, #6, #5
ffffffffc0002648:	bfxil	w9, w1, #0, #6
ffffffffc000264c:	orr	w2, wzr, #0x2
ffffffffc0002650:	strb	w8, [sp, #0xc]
ffffffffc0002654:	strb	w9, [sp, #0xd]
ffffffffc0002658:	add	x1, sp, #0xc
ffffffffc000265c:	bl	#-0x86c <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3>
ffffffffc0002660:	ldr	x30, [sp], #0x10
ffffffffc0002664:	ret
ffffffffc0002668:	cmp	w1, #0x10, lsl #12
ffffffffc000266c:	b.hs	#0x3c <<&mut W as core::fmt::Write>::write_char::h75b629484dd63ba9+0xa0>
ffffffffc0002670:	orr	w8, wzr, #0xe0
ffffffffc0002674:	orr	w9, wzr, #0x80
ffffffffc0002678:	orr	w10, wzr, #0x80
ffffffffc000267c:	bfxil	w8, w1, #12, #4
ffffffffc0002680:	bfxil	w10, w1, #6, #6
ffffffffc0002684:	bfxil	w9, w1, #0, #6
ffffffffc0002688:	strb	w8, [sp, #0xc]
ffffffffc000268c:	orr	w2, wzr, #0x3
ffffffffc0002690:	strb	w10, [sp, #0xd]
ffffffffc0002694:	strb	w9, [sp, #0xe]
ffffffffc0002698:	add	x1, sp, #0xc
ffffffffc000269c:	bl	#-0x8ac <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3>
ffffffffc00026a0:	ldr	x30, [sp], #0x10
ffffffffc00026a4:	ret
ffffffffc00026a8:	lsr	w8, w1, #18
ffffffffc00026ac:	orr	w8, w8, #0xf0
ffffffffc00026b0:	orr	w9, wzr, #0x80
ffffffffc00026b4:	orr	w10, wzr, #0x80
ffffffffc00026b8:	orr	w11, wzr, #0x80
ffffffffc00026bc:	strb	w8, [sp, #0xc]
ffffffffc00026c0:	orr	w2, wzr, #0x4
ffffffffc00026c4:	bfxil	w10, w1, #12, #6
ffffffffc00026c8:	bfxil	w11, w1, #6, #6
ffffffffc00026cc:	bfxil	w9, w1, #0, #6
ffffffffc00026d0:	strb	w10, [sp, #0xd]
ffffffffc00026d4:	strb	w11, [sp, #0xe]
ffffffffc00026d8:	strb	w9, [sp, #0xf]
ffffffffc00026dc:	add	x1, sp, #0xc
ffffffffc00026e0:	bl	#-0x8f0 <<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h5f7cb2103bee37f3>
ffffffffc00026e4:	ldr	x30, [sp], #0x10
ffffffffc00026e8:	ret
ffffffffc00026ec:	udf	#0x0

ffffffffc00026f0 <&mut W as core::fmt::Write>::write_fmt::h99285b05a4b2f6c7:
ffffffffc00026f0:	sub	sp, sp, #0x40
ffffffffc00026f4:	ldr	x8, [x0]
ffffffffc00026f8:	mov	x0, sp
ffffffffc00026fc:	orr	w2, wzr, #0x30
ffffffffc0002700:	stp	x30, x8, [sp, #0x30]
ffffffffc0002704:	bl	#0x2bdc <memcpy>
ffffffffc0002708:	adrp	x1, #0x4000
ffffffffc000270c:	add	x1, x1, #0x3c0
ffffffffc0002710:	add	x0, sp, #0x38
ffffffffc0002714:	mov	x2, sp
ffffffffc0002718:	bl	#0x1720 <core::fmt::write::h30a176880c7ec5aa>
ffffffffc000271c:	ldr	x30, [sp, #0x30]
ffffffffc0002720:	add	sp, sp, #0x40
ffffffffc0002724:	ret

ffffffffc0002728 core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hddf50bd1c6e5b3a7:
ffffffffc0002728:	sub	sp, sp, #0x40
ffffffffc000272c:	adrp	x8, #0x4000
ffffffffc0002730:	ldr	w9, [x0]
ffffffffc0002734:	str	x30, [sp, #0x30]
ffffffffc0002738:	ldr	x8, [x8, #0x258]
ffffffffc000273c:	ubfx	x10, x9, #4, #28
ffffffffc0002740:	cmp	w10, #0x271
ffffffffc0002744:	b.lo	#0xa4 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hddf50bd1c6e5b3a7+0xc0>
ffffffffc0002748:	mov	x11, #0x594b
ffffffffc000274c:	mov	x13, #0xf5c3
ffffffffc0002750:	movk	x11, #0x3886, lsl #16
ffffffffc0002754:	movk	x13, #0x5c28, lsl #16
ffffffffc0002758:	movk	x11, #0xc5d6, lsl #32
ffffffffc000275c:	movk	x13, #0xc28f, lsl #32
ffffffffc0002760:	mov	w16, #0xe0ff
ffffffffc0002764:	mov	x10, xzr
ffffffffc0002768:	movk	x11, #0x346d, lsl #48
ffffffffc000276c:	mov	w12, #0x2710
ffffffffc0002770:	movk	x13, #0x28f5, lsl #48
ffffffffc0002774:	mov	w14, #0x64
ffffffffc0002778:	add	x15, sp, #0x8
ffffffffc000277c:	movk	w16, #0x5f5, lsl #16
ffffffffc0002780:	mov	x17, x9
ffffffffc0002784:	umulh	x9, x9, x11
ffffffffc0002788:	add	x3, x15, x10
ffffffffc000278c:	lsr	x9, x9, #11
ffffffffc0002790:	msub	x18, x9, x12, x17
ffffffffc0002794:	sub	x10, x10, #0x4
ffffffffc0002798:	cmp	x17, x16
ffffffffc000279c:	lsr	x0, x18, #2
ffffffffc00027a0:	umulh	x0, x0, x13
ffffffffc00027a4:	lsr	x0, x0, #2
ffffffffc00027a8:	add	x2, x8, x0, lsl #1
ffffffffc00027ac:	msub	x18, x0, x14, x18
ffffffffc00027b0:	ldrb	w0, [x2, #0x1]
ffffffffc00027b4:	add	x18, x8, x18, lsl #1
ffffffffc00027b8:	ldrb	w2, [x2]
ffffffffc00027bc:	strb	w0, [x3, #0x24]
ffffffffc00027c0:	strb	w2, [x3, #0x23]
ffffffffc00027c4:	ldrb	w0, [x18, #0x1]
ffffffffc00027c8:	ldrb	w18, [x18]
ffffffffc00027cc:	strb	w0, [x3, #0x26]
ffffffffc00027d0:	strb	w18, [x3, #0x25]
ffffffffc00027d4:	b.hi	#-0x54 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hddf50bd1c6e5b3a7+0x58>
ffffffffc00027d8:	add	x10, x10, #0x27
ffffffffc00027dc:	cmp	x9, #0x64
ffffffffc00027e0:	b.hs	#0x14 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hddf50bd1c6e5b3a7+0xcc>
ffffffffc00027e4:	b	#0x50 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hddf50bd1c6e5b3a7+0x10c>
ffffffffc00027e8:	mov	w10, #0x27
ffffffffc00027ec:	cmp	x9, #0x64
ffffffffc00027f0:	b.lo	#0x44 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hddf50bd1c6e5b3a7+0x10c>
ffffffffc00027f4:	mov	w12, #0x851f
ffffffffc00027f8:	and	w11, w9, #0xffff
ffffffffc00027fc:	movk	w12, #0x51eb, lsl #16
ffffffffc0002800:	sub	x10, x10, #0x2
ffffffffc0002804:	umull	x11, w11, w12
ffffffffc0002808:	mov	w12, #0x64
ffffffffc000280c:	lsr	x11, x11, #37
ffffffffc0002810:	msub	w9, w11, w12, w9
ffffffffc0002814:	add	x12, sp, #0x8
ffffffffc0002818:	add	x12, x12, x10
ffffffffc000281c:	add	x9, x8, w9, uxth #1
ffffffffc0002820:	ldrb	w13, [x9, #0x1]
ffffffffc0002824:	ldrb	w14, [x9]
ffffffffc0002828:	mov	x9, x11
ffffffffc000282c:	strb	w13, [x12, #0x1]
ffffffffc0002830:	strb	w14, [x12]
ffffffffc0002834:	cmp	x9, #0xa
ffffffffc0002838:	b.ge	#0x18 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hddf50bd1c6e5b3a7+0x128>
ffffffffc000283c:	sub	x8, x10, #0x1
ffffffffc0002840:	add	w9, w9, #0x30
ffffffffc0002844:	add	x10, sp, #0x8
ffffffffc0002848:	strb	w9, [x10, x8]
ffffffffc000284c:	b	#0x24 <core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::hddf50bd1c6e5b3a7+0x148>
ffffffffc0002850:	add	x9, x8, x9, lsl #1
ffffffffc0002854:	sub	x8, x10, #0x2
ffffffffc0002858:	add	x10, sp, #0x8
ffffffffc000285c:	ldrb	w11, [x9, #0x1]
ffffffffc0002860:	add	x10, x10, x8
ffffffffc0002864:	ldrb	w9, [x9]
ffffffffc0002868:	strb	w11, [x10, #0x1]
ffffffffc000286c:	strb	w9, [x10]
ffffffffc0002870:	add	x9, sp, #0x8
ffffffffc0002874:	mov	w10, #0x27
ffffffffc0002878:	adrp	x2, #0x4000
ffffffffc000287c:	add	x4, x9, x8
ffffffffc0002880:	sub	x5, x10, x8
ffffffffc0002884:	add	x2, x2, #0x310
ffffffffc0002888:	mov	x0, x1
ffffffffc000288c:	orr	w1, wzr, #0x1
ffffffffc0002890:	mov	x3, xzr
ffffffffc0002894:	bl	#0x18c4 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0002898:	ldr	x30, [sp, #0x30]
ffffffffc000289c:	add	sp, sp, #0x40
ffffffffc00028a0:	ret
ffffffffc00028a4:	udf	#0x0

ffffffffc00028a8 core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h60feac39127f14a5:
ffffffffc00028a8:	sub	sp, sp, #0x40
ffffffffc00028ac:	adrp	x8, #0x4000
ffffffffc00028b0:	ldr	x9, [x0]
ffffffffc00028b4:	str	x30, [sp, #0x30]
ffffffffc00028b8:	ldr	x8, [x8, #0x258]
ffffffffc00028bc:	lsr	x10, x9, #4
ffffffffc00028c0:	cmp	x10, #0x271
ffffffffc00028c4:	b.lo	#0xa4 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h60feac39127f14a5+0xc0>
ffffffffc00028c8:	mov	x11, #0x594b
ffffffffc00028cc:	mov	x13, #0xf5c3
ffffffffc00028d0:	movk	x11, #0x3886, lsl #16
ffffffffc00028d4:	movk	x13, #0x5c28, lsl #16
ffffffffc00028d8:	movk	x11, #0xc5d6, lsl #32
ffffffffc00028dc:	movk	x13, #0xc28f, lsl #32
ffffffffc00028e0:	mov	w16, #0xe0ff
ffffffffc00028e4:	mov	x10, xzr
ffffffffc00028e8:	movk	x11, #0x346d, lsl #48
ffffffffc00028ec:	mov	w12, #0x2710
ffffffffc00028f0:	movk	x13, #0x28f5, lsl #48
ffffffffc00028f4:	mov	w14, #0x64
ffffffffc00028f8:	add	x15, sp, #0x8
ffffffffc00028fc:	movk	w16, #0x5f5, lsl #16
ffffffffc0002900:	mov	x17, x9
ffffffffc0002904:	umulh	x9, x9, x11
ffffffffc0002908:	add	x3, x15, x10
ffffffffc000290c:	lsr	x9, x9, #11
ffffffffc0002910:	msub	x18, x9, x12, x17
ffffffffc0002914:	sub	x10, x10, #0x4
ffffffffc0002918:	cmp	x17, x16
ffffffffc000291c:	lsr	x0, x18, #2
ffffffffc0002920:	umulh	x0, x0, x13
ffffffffc0002924:	lsr	x0, x0, #2
ffffffffc0002928:	add	x2, x8, x0, lsl #1
ffffffffc000292c:	msub	x18, x0, x14, x18
ffffffffc0002930:	ldrb	w0, [x2, #0x1]
ffffffffc0002934:	add	x18, x8, x18, lsl #1
ffffffffc0002938:	ldrb	w2, [x2]
ffffffffc000293c:	strb	w0, [x3, #0x24]
ffffffffc0002940:	strb	w2, [x3, #0x23]
ffffffffc0002944:	ldrb	w0, [x18, #0x1]
ffffffffc0002948:	ldrb	w18, [x18]
ffffffffc000294c:	strb	w0, [x3, #0x26]
ffffffffc0002950:	strb	w18, [x3, #0x25]
ffffffffc0002954:	b.hi	#-0x54 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h60feac39127f14a5+0x58>
ffffffffc0002958:	add	x10, x10, #0x27
ffffffffc000295c:	cmp	x9, #0x64
ffffffffc0002960:	b.ge	#0x14 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h60feac39127f14a5+0xcc>
ffffffffc0002964:	b	#0x50 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h60feac39127f14a5+0x10c>
ffffffffc0002968:	mov	w10, #0x27
ffffffffc000296c:	cmp	x9, #0x64
ffffffffc0002970:	b.lt	#0x44 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h60feac39127f14a5+0x10c>
ffffffffc0002974:	mov	w12, #0x851f
ffffffffc0002978:	and	w11, w9, #0xffff
ffffffffc000297c:	movk	w12, #0x51eb, lsl #16
ffffffffc0002980:	sub	x10, x10, #0x2
ffffffffc0002984:	umull	x11, w11, w12
ffffffffc0002988:	mov	w12, #0x64
ffffffffc000298c:	lsr	x11, x11, #37
ffffffffc0002990:	msub	w9, w11, w12, w9
ffffffffc0002994:	add	x12, sp, #0x8
ffffffffc0002998:	add	x12, x12, x10
ffffffffc000299c:	add	x9, x8, w9, uxth #1
ffffffffc00029a0:	ldrb	w13, [x9, #0x1]
ffffffffc00029a4:	ldrb	w14, [x9]
ffffffffc00029a8:	mov	x9, x11
ffffffffc00029ac:	strb	w13, [x12, #0x1]
ffffffffc00029b0:	strb	w14, [x12]
ffffffffc00029b4:	cmp	x9, #0xa
ffffffffc00029b8:	b.ge	#0x18 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h60feac39127f14a5+0x128>
ffffffffc00029bc:	sub	x8, x10, #0x1
ffffffffc00029c0:	add	w9, w9, #0x30
ffffffffc00029c4:	add	x10, sp, #0x8
ffffffffc00029c8:	strb	w9, [x10, x8]
ffffffffc00029cc:	b	#0x24 <core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::h60feac39127f14a5+0x148>
ffffffffc00029d0:	add	x9, x8, x9, lsl #1
ffffffffc00029d4:	sub	x8, x10, #0x2
ffffffffc00029d8:	add	x10, sp, #0x8
ffffffffc00029dc:	ldrb	w11, [x9, #0x1]
ffffffffc00029e0:	add	x10, x10, x8
ffffffffc00029e4:	ldrb	w9, [x9]
ffffffffc00029e8:	strb	w11, [x10, #0x1]
ffffffffc00029ec:	strb	w9, [x10]
ffffffffc00029f0:	add	x9, sp, #0x8
ffffffffc00029f4:	mov	w10, #0x27
ffffffffc00029f8:	adrp	x2, #0x4000
ffffffffc00029fc:	add	x4, x9, x8
ffffffffc0002a00:	sub	x5, x10, x8
ffffffffc0002a04:	add	x2, x2, #0x310
ffffffffc0002a08:	mov	x0, x1
ffffffffc0002a0c:	orr	w1, wzr, #0x1
ffffffffc0002a10:	mov	x3, xzr
ffffffffc0002a14:	bl	#0x1744 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0002a18:	ldr	x30, [sp, #0x30]
ffffffffc0002a1c:	add	sp, sp, #0x40
ffffffffc0002a20:	ret
ffffffffc0002a24:	udf	#0x0

ffffffffc0002a28 core::ptr::real_drop_in_place::h03b91dd9ad3833b1:
ffffffffc0002a28:	ret
ffffffffc0002a2c:	udf	#0x0

ffffffffc0002a30 <core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b:
ffffffffc0002a30:	sub	sp, sp, #0xa0
ffffffffc0002a34:	stp	x21, x20, [sp, #0x80]
ffffffffc0002a38:	mov	x20, x0
ffffffffc0002a3c:	stp	x19, x30, [sp, #0x90]
ffffffffc0002a40:	mov	x19, x1
ffffffffc0002a44:	ldr	w9, [x1, #0x50]
ffffffffc0002a48:	tbnz	w9, #0x4, #0xc0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0xd8>
ffffffffc0002a4c:	ldr	x8, [x20]
ffffffffc0002a50:	tbnz	w9, #0x5, #0x110 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x130>
ffffffffc0002a54:	adrp	x9, #0x4000
ffffffffc0002a58:	lsr	x10, x8, #4
ffffffffc0002a5c:	cmp	x10, #0x271
ffffffffc0002a60:	ldr	x9, [x9, #0x258]
ffffffffc0002a64:	b.lo	#0x174 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x1a8>
ffffffffc0002a68:	mov	x12, #0x594b
ffffffffc0002a6c:	mov	x14, #0xf5c3
ffffffffc0002a70:	movk	x12, #0x3886, lsl #16
ffffffffc0002a74:	movk	x14, #0x5c28, lsl #16
ffffffffc0002a78:	mov	w11, #0xe0ff
ffffffffc0002a7c:	movk	x12, #0xc5d6, lsl #32
ffffffffc0002a80:	movk	x14, #0xc28f, lsl #32
ffffffffc0002a84:	mov	x10, xzr
ffffffffc0002a88:	movk	w11, #0x5f5, lsl #16
ffffffffc0002a8c:	movk	x12, #0x346d, lsl #48
ffffffffc0002a90:	mov	w13, #0x2710
ffffffffc0002a94:	movk	x14, #0x28f5, lsl #48
ffffffffc0002a98:	mov	w15, #0x64
ffffffffc0002a9c:	mov	x16, sp
ffffffffc0002aa0:	mov	x17, x8
ffffffffc0002aa4:	umulh	x8, x8, x12
ffffffffc0002aa8:	add	x2, x16, x10
ffffffffc0002aac:	lsr	x8, x8, #11
ffffffffc0002ab0:	msub	x18, x8, x13, x17
ffffffffc0002ab4:	sub	x10, x10, #0x4
ffffffffc0002ab8:	cmp	x17, x11
ffffffffc0002abc:	lsr	x0, x18, #2
ffffffffc0002ac0:	umulh	x0, x0, x14
ffffffffc0002ac4:	lsr	x0, x0, #2
ffffffffc0002ac8:	add	x1, x9, x0, lsl #1
ffffffffc0002acc:	msub	x18, x0, x15, x18
ffffffffc0002ad0:	ldrb	w0, [x1, #0x1]
ffffffffc0002ad4:	add	x18, x9, x18, lsl #1
ffffffffc0002ad8:	ldrb	w1, [x1]
ffffffffc0002adc:	strb	w0, [x2, #0x24]
ffffffffc0002ae0:	strb	w1, [x2, #0x23]
ffffffffc0002ae4:	ldrb	w0, [x18, #0x1]
ffffffffc0002ae8:	ldrb	w18, [x18]
ffffffffc0002aec:	strb	w0, [x2, #0x26]
ffffffffc0002af0:	strb	w18, [x2, #0x25]
ffffffffc0002af4:	b.hi	#-0x54 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x70>
ffffffffc0002af8:	add	x10, x10, #0x27
ffffffffc0002afc:	cmp	x8, #0x64
ffffffffc0002b00:	b.ge	#0xe4 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x1b4>
ffffffffc0002b04:	b	#0x120 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x1f4>
ffffffffc0002b08:	ldr	x10, [x20]
ffffffffc0002b0c:	mov	x8, xzr
ffffffffc0002b10:	mov	x9, sp
ffffffffc0002b14:	and	w13, w10, #0xf
ffffffffc0002b18:	orr	w14, wzr, #0x30
ffffffffc0002b1c:	lsr	x12, x10, #4
ffffffffc0002b20:	bfxil	w14, w10, #0, #4
ffffffffc0002b24:	add	w10, w13, #0x57
ffffffffc0002b28:	cmp	w13, #0xa
ffffffffc0002b2c:	add	x11, x9, x8
ffffffffc0002b30:	csel	w13, w14, w10, lo
ffffffffc0002b34:	sub	x8, x8, #0x1
ffffffffc0002b38:	mov	x10, x12
ffffffffc0002b3c:	strb	w13, [x11, #0x7f]
ffffffffc0002b40:	cbnz	x12, #-0x2c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0xe4>
ffffffffc0002b44:	add	x0, x8, #0x80
ffffffffc0002b48:	cmp	x0, #0x81
ffffffffc0002b4c:	b.hs	#0x3d8 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4f4>
ffffffffc0002b50:	mov	x9, sp
ffffffffc0002b54:	neg	x5, x8
ffffffffc0002b58:	add	x8, x9, x8
ffffffffc0002b5c:	b	#0x54 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x180>
ffffffffc0002b60:	mov	x9, xzr
ffffffffc0002b64:	mov	x10, sp
ffffffffc0002b68:	and	w13, w8, #0xf
ffffffffc0002b6c:	orr	w14, wzr, #0x30
ffffffffc0002b70:	lsr	x12, x8, #4
ffffffffc0002b74:	bfxil	w14, w8, #0, #4
ffffffffc0002b78:	add	w8, w13, #0x37
ffffffffc0002b7c:	cmp	w13, #0xa
ffffffffc0002b80:	add	x11, x10, x9
ffffffffc0002b84:	csel	w13, w14, w8, lo
ffffffffc0002b88:	sub	x9, x9, #0x1
ffffffffc0002b8c:	mov	x8, x12
ffffffffc0002b90:	strb	w13, [x11, #0x7f]
ffffffffc0002b94:	cbnz	x12, #-0x2c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x138>
ffffffffc0002b98:	add	x0, x9, #0x80
ffffffffc0002b9c:	cmp	x0, #0x81
ffffffffc0002ba0:	b.hs	#0x384 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4f4>
ffffffffc0002ba4:	mov	x8, sp
ffffffffc0002ba8:	neg	x5, x9
ffffffffc0002bac:	add	x8, x8, x9
ffffffffc0002bb0:	adrp	x2, #0x4000
ffffffffc0002bb4:	add	x4, x8, #0x80
ffffffffc0002bb8:	add	x2, x2, #0x188
ffffffffc0002bbc:	mov	x0, x19
ffffffffc0002bc0:	orr	w1, wzr, #0x1
ffffffffc0002bc4:	orr	w3, wzr, #0x2
ffffffffc0002bc8:	orr	w21, wzr, #0x1
ffffffffc0002bcc:	bl	#0x158c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0002bd0:	tbz	w0, #0x0, #0xc0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x260>
ffffffffc0002bd4:	b	#0x33c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4e0>
ffffffffc0002bd8:	mov	w10, #0x27
ffffffffc0002bdc:	cmp	x8, #0x64
ffffffffc0002be0:	b.lt	#0x44 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x1f4>
ffffffffc0002be4:	mov	w12, #0x851f
ffffffffc0002be8:	and	w11, w8, #0xffff
ffffffffc0002bec:	movk	w12, #0x51eb, lsl #16
ffffffffc0002bf0:	sub	x10, x10, #0x2
ffffffffc0002bf4:	umull	x11, w11, w12
ffffffffc0002bf8:	mov	w12, #0x64
ffffffffc0002bfc:	lsr	x11, x11, #37
ffffffffc0002c00:	msub	w8, w11, w12, w8
ffffffffc0002c04:	mov	x12, sp
ffffffffc0002c08:	add	x12, x12, x10
ffffffffc0002c0c:	add	x8, x9, w8, uxth #1
ffffffffc0002c10:	ldrb	w13, [x8, #0x1]
ffffffffc0002c14:	ldrb	w14, [x8]
ffffffffc0002c18:	mov	x8, x11
ffffffffc0002c1c:	strb	w13, [x12, #0x1]
ffffffffc0002c20:	strb	w14, [x12]
ffffffffc0002c24:	cmp	x8, #0xa
ffffffffc0002c28:	b.ge	#0x18 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x210>
ffffffffc0002c2c:	sub	x9, x10, #0x1
ffffffffc0002c30:	add	w8, w8, #0x30
ffffffffc0002c34:	mov	x10, sp
ffffffffc0002c38:	strb	w8, [x10, x9]
ffffffffc0002c3c:	b	#0x24 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x230>
ffffffffc0002c40:	add	x8, x9, x8, lsl #1
ffffffffc0002c44:	sub	x9, x10, #0x2
ffffffffc0002c48:	mov	x10, sp
ffffffffc0002c4c:	ldrb	w11, [x8, #0x1]
ffffffffc0002c50:	add	x10, x10, x9
ffffffffc0002c54:	ldrb	w8, [x8]
ffffffffc0002c58:	strb	w11, [x10, #0x1]
ffffffffc0002c5c:	strb	w8, [x10]
ffffffffc0002c60:	mov	x8, sp
ffffffffc0002c64:	mov	w10, #0x27
ffffffffc0002c68:	adrp	x2, #0x4000
ffffffffc0002c6c:	add	x4, x8, x9
ffffffffc0002c70:	sub	x5, x10, x9
ffffffffc0002c74:	add	x2, x2, #0x310
ffffffffc0002c78:	mov	x0, x19
ffffffffc0002c7c:	orr	w1, wzr, #0x1
ffffffffc0002c80:	mov	x3, xzr
ffffffffc0002c84:	orr	w21, wzr, #0x1
ffffffffc0002c88:	bl	#0x14d0 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0002c8c:	cbnz	w0, #0x284 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4e0>
ffffffffc0002c90:	adrp	x8, #0x5000
ffffffffc0002c94:	orr	w21, wzr, #0x1
ffffffffc0002c98:	add	x8, x8, #0x10
ffffffffc0002c9c:	ldp	x0, x1, [x19, #0x20]
ffffffffc0002ca0:	mov	x2, sp
ffffffffc0002ca4:	stp	x8, x21, [sp]
ffffffffc0002ca8:	adrp	x8, #0x5000
ffffffffc0002cac:	add	x8, x8, #0x20
ffffffffc0002cb0:	stp	xzr, xzr, [sp, #0x10]
ffffffffc0002cb4:	stp	x8, xzr, [sp, #0x20]
ffffffffc0002cb8:	bl	#0x1180 <core::fmt::write::h30a176880c7ec5aa>
ffffffffc0002cbc:	tbnz	w0, #0x0, #0x254 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4e0>
ffffffffc0002cc0:	ldr	w9, [x19, #0x50]
ffffffffc0002cc4:	tbnz	w9, #0x4, #0x118 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x3ac>
ffffffffc0002cc8:	ldr	x8, [x20, #0x8]
ffffffffc0002ccc:	tbnz	w9, #0x5, #0x16c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x408>
ffffffffc0002cd0:	adrp	x9, #0x4000
ffffffffc0002cd4:	lsr	x10, x8, #4
ffffffffc0002cd8:	cmp	x10, #0x271
ffffffffc0002cdc:	ldr	x9, [x9, #0x258]
ffffffffc0002ce0:	b.lo	#0x1d0 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x480>
ffffffffc0002ce4:	mov	x12, #0x594b
ffffffffc0002ce8:	mov	x14, #0xf5c3
ffffffffc0002cec:	movk	x12, #0x3886, lsl #16
ffffffffc0002cf0:	movk	x14, #0x5c28, lsl #16
ffffffffc0002cf4:	mov	w11, #0xe0ff
ffffffffc0002cf8:	movk	x12, #0xc5d6, lsl #32
ffffffffc0002cfc:	movk	x14, #0xc28f, lsl #32
ffffffffc0002d00:	mov	x10, xzr
ffffffffc0002d04:	movk	w11, #0x5f5, lsl #16
ffffffffc0002d08:	movk	x12, #0x346d, lsl #48
ffffffffc0002d0c:	mov	w13, #0x2710
ffffffffc0002d10:	movk	x14, #0x28f5, lsl #48
ffffffffc0002d14:	mov	w15, #0x64
ffffffffc0002d18:	mov	x16, sp
ffffffffc0002d1c:	mov	x17, x8
ffffffffc0002d20:	umulh	x8, x8, x12
ffffffffc0002d24:	add	x2, x16, x10
ffffffffc0002d28:	lsr	x8, x8, #11
ffffffffc0002d2c:	msub	x18, x8, x13, x17
ffffffffc0002d30:	sub	x10, x10, #0x4
ffffffffc0002d34:	cmp	x17, x11
ffffffffc0002d38:	lsr	x0, x18, #2
ffffffffc0002d3c:	umulh	x0, x0, x14
ffffffffc0002d40:	lsr	x0, x0, #2
ffffffffc0002d44:	add	x1, x9, x0, lsl #1
ffffffffc0002d48:	msub	x18, x0, x15, x18
ffffffffc0002d4c:	ldrb	w0, [x1, #0x1]
ffffffffc0002d50:	add	x18, x9, x18, lsl #1
ffffffffc0002d54:	ldrb	w1, [x1]
ffffffffc0002d58:	strb	w0, [x2, #0x24]
ffffffffc0002d5c:	strb	w1, [x2, #0x23]
ffffffffc0002d60:	ldrb	w0, [x18, #0x1]
ffffffffc0002d64:	ldrb	w18, [x18]
ffffffffc0002d68:	strb	w0, [x2, #0x26]
ffffffffc0002d6c:	strb	w18, [x2, #0x25]
ffffffffc0002d70:	b.hi	#-0x54 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x2ec>
ffffffffc0002d74:	add	x10, x10, #0x27
ffffffffc0002d78:	cmp	x8, #0x64
ffffffffc0002d7c:	b.lt	#0x44 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x390>
ffffffffc0002d80:	mov	w12, #0x851f
ffffffffc0002d84:	and	w11, w8, #0xffff
ffffffffc0002d88:	movk	w12, #0x51eb, lsl #16
ffffffffc0002d8c:	sub	x10, x10, #0x2
ffffffffc0002d90:	umull	x11, w11, w12
ffffffffc0002d94:	mov	w12, #0x64
ffffffffc0002d98:	lsr	x11, x11, #37
ffffffffc0002d9c:	msub	w8, w11, w12, w8
ffffffffc0002da0:	mov	x12, sp
ffffffffc0002da4:	add	x12, x12, x10
ffffffffc0002da8:	add	x8, x9, w8, uxth #1
ffffffffc0002dac:	ldrb	w13, [x8, #0x1]
ffffffffc0002db0:	ldrb	w14, [x8]
ffffffffc0002db4:	mov	x8, x11
ffffffffc0002db8:	strb	w13, [x12, #0x1]
ffffffffc0002dbc:	strb	w14, [x12]
ffffffffc0002dc0:	cmp	x8, #0xa
ffffffffc0002dc4:	b.ge	#0xfc <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x490>
ffffffffc0002dc8:	sub	x9, x10, #0x1
ffffffffc0002dcc:	add	w8, w8, #0x30
ffffffffc0002dd0:	mov	x10, sp
ffffffffc0002dd4:	strb	w8, [x10, x9]
ffffffffc0002dd8:	b	#0x108 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4b0>
ffffffffc0002ddc:	ldr	x10, [x20, #0x8]
ffffffffc0002de0:	mov	x8, xzr
ffffffffc0002de4:	mov	x9, sp
ffffffffc0002de8:	and	w13, w10, #0xf
ffffffffc0002dec:	orr	w14, wzr, #0x30
ffffffffc0002df0:	lsr	x12, x10, #4
ffffffffc0002df4:	bfxil	w14, w10, #0, #4
ffffffffc0002df8:	add	w10, w13, #0x57
ffffffffc0002dfc:	cmp	w13, #0xa
ffffffffc0002e00:	add	x11, x9, x8
ffffffffc0002e04:	csel	w13, w14, w10, lo
ffffffffc0002e08:	sub	x8, x8, #0x1
ffffffffc0002e0c:	mov	x10, x12
ffffffffc0002e10:	strb	w13, [x11, #0x7f]
ffffffffc0002e14:	cbnz	x12, #-0x2c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x3b8>
ffffffffc0002e18:	add	x0, x8, #0x80
ffffffffc0002e1c:	cmp	x0, #0x81
ffffffffc0002e20:	b.hs	#0x104 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4f4>
ffffffffc0002e24:	mov	x9, sp
ffffffffc0002e28:	neg	x5, x8
ffffffffc0002e2c:	add	x8, x9, x8
ffffffffc0002e30:	adrp	x2, #0x4000
ffffffffc0002e34:	b	#0x58 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x45c>
ffffffffc0002e38:	mov	x9, xzr
ffffffffc0002e3c:	mov	x10, sp
ffffffffc0002e40:	and	w13, w8, #0xf
ffffffffc0002e44:	orr	w14, wzr, #0x30
ffffffffc0002e48:	lsr	x12, x8, #4
ffffffffc0002e4c:	bfxil	w14, w8, #0, #4
ffffffffc0002e50:	add	w8, w13, #0x37
ffffffffc0002e54:	cmp	w13, #0xa
ffffffffc0002e58:	add	x11, x10, x9
ffffffffc0002e5c:	csel	w13, w14, w8, lo
ffffffffc0002e60:	sub	x9, x9, #0x1
ffffffffc0002e64:	mov	x8, x12
ffffffffc0002e68:	strb	w13, [x11, #0x7f]
ffffffffc0002e6c:	cbnz	x12, #-0x2c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x410>
ffffffffc0002e70:	add	x0, x9, #0x80
ffffffffc0002e74:	cmp	x0, #0x81
ffffffffc0002e78:	b.hs	#0xac <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4f4>
ffffffffc0002e7c:	mov	x8, sp
ffffffffc0002e80:	add	x8, x8, x9
ffffffffc0002e84:	adrp	x2, #0x4000
ffffffffc0002e88:	neg	x5, x9
ffffffffc0002e8c:	add	x4, x8, #0x80
ffffffffc0002e90:	add	x2, x2, #0x188
ffffffffc0002e94:	mov	x0, x19
ffffffffc0002e98:	orr	w1, wzr, #0x1
ffffffffc0002e9c:	orr	w3, wzr, #0x2
ffffffffc0002ea0:	bl	#0x12b8 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0002ea4:	tbz	w0, #0x0, #0x68 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4dc>
ffffffffc0002ea8:	orr	w21, wzr, #0x1
ffffffffc0002eac:	b	#0x64 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x4e0>
ffffffffc0002eb0:	mov	w10, #0x27
ffffffffc0002eb4:	cmp	x8, #0x64
ffffffffc0002eb8:	b.lt	#-0xf8 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x390>
ffffffffc0002ebc:	b	#-0x13c <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x350>
ffffffffc0002ec0:	add	x8, x9, x8, lsl #1
ffffffffc0002ec4:	sub	x9, x10, #0x2
ffffffffc0002ec8:	mov	x10, sp
ffffffffc0002ecc:	ldrb	w11, [x8, #0x1]
ffffffffc0002ed0:	add	x10, x10, x9
ffffffffc0002ed4:	ldrb	w8, [x8]
ffffffffc0002ed8:	strb	w11, [x10, #0x1]
ffffffffc0002edc:	strb	w8, [x10]
ffffffffc0002ee0:	mov	x8, sp
ffffffffc0002ee4:	mov	w10, #0x27
ffffffffc0002ee8:	adrp	x2, #0x4000
ffffffffc0002eec:	add	x4, x8, x9
ffffffffc0002ef0:	sub	x5, x10, x9
ffffffffc0002ef4:	add	x2, x2, #0x310
ffffffffc0002ef8:	mov	x0, x19
ffffffffc0002efc:	orr	w1, wzr, #0x1
ffffffffc0002f00:	mov	x3, xzr
ffffffffc0002f04:	bl	#0x1254 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0002f08:	cbnz	w0, #-0x60 <<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::h4b211e4486c0675b+0x478>
ffffffffc0002f0c:	mov	w21, wzr
ffffffffc0002f10:	mov	w0, w21
ffffffffc0002f14:	ldp	x19, x30, [sp, #0x90]
ffffffffc0002f18:	ldp	x21, x20, [sp, #0x80]
ffffffffc0002f1c:	add	sp, sp, #0xa0
ffffffffc0002f20:	ret
ffffffffc0002f24:	orr	w1, wzr, #0x80
ffffffffc0002f28:	bl	#0xbe0 <core::slice::slice_index_order_fail::ha4d039b02b1440b5>
ffffffffc0002f2c:	brk	#0x1

ffffffffc0002f30 core::option::expect_failed::h5de215e81479fb8c:
ffffffffc0002f30:	adrp	x8, #0x3000
ffffffffc0002f34:	stp	x0, x1, [sp, #-0x50]!
ffffffffc0002f38:	add	x8, x8, #0x1b8
ffffffffc0002f3c:	stp	xzr, xzr, [sp, #0x20]
ffffffffc0002f40:	mov	x9, sp
ffffffffc0002f44:	orr	w10, wzr, #0x1
ffffffffc0002f48:	adrp	x1, #0x5000
ffffffffc0002f4c:	stp	x9, x8, [sp, #0x40]
ffffffffc0002f50:	adrp	x8, #0x5000
ffffffffc0002f54:	add	x8, x8, #0x20
ffffffffc0002f58:	add	x1, x1, #0xa8
ffffffffc0002f5c:	add	x0, sp, #0x10
ffffffffc0002f60:	stp	x8, x10, [sp, #0x10]
ffffffffc0002f64:	add	x8, sp, #0x40
ffffffffc0002f68:	stp	x8, x10, [sp, #0x30]
ffffffffc0002f6c:	bl	#-0x11f4 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc0002f70:	brk	#0x1
ffffffffc0002f74:	udf	#0x0

ffffffffc0002f78 <&T as core::fmt::Debug>::fmt::h85252899a29e0e56:
ffffffffc0002f78:	sub	sp, sp, #0x40
ffffffffc0002f7c:	stp	x19, x30, [sp, #0x30]
ffffffffc0002f80:	mov	x19, x1
ffffffffc0002f84:	ldr	x8, [x0]
ffffffffc0002f88:	str	x20, [sp, #0x20]
ffffffffc0002f8c:	ldrb	w9, [x8]
ffffffffc0002f90:	cmp	w9, #0x1
ffffffffc0002f94:	b.ne	#0x5c <<&T as core::fmt::Debug>::fmt::h85252899a29e0e56+0x78>
ffffffffc0002f98:	ldp	x0, x9, [x19, #0x20]
ffffffffc0002f9c:	adrp	x1, #0x4000
ffffffffc0002fa0:	add	x1, x1, #0x39c
ffffffffc0002fa4:	orr	w2, wzr, #0x4
ffffffffc0002fa8:	ldr	x9, [x9, #0x18]
ffffffffc0002fac:	add	x20, x8, #0x1
ffffffffc0002fb0:	blr	x9
ffffffffc0002fb4:	adrp	x2, #0x5000
ffffffffc0002fb8:	strb	w0, [sp, #0x18]
ffffffffc0002fbc:	add	x2, x2, #0xc0
ffffffffc0002fc0:	stp	x19, xzr, [sp, #0x8]
ffffffffc0002fc4:	add	x0, sp, #0x8
ffffffffc0002fc8:	strb	wzr, [sp, #0x19]
ffffffffc0002fcc:	add	x1, sp, #0x28
ffffffffc0002fd0:	str	x20, [sp, #0x28]
ffffffffc0002fd4:	bl	#-0xd1c <core::fmt::builders::DebugTuple::field::h08d845abef1e5e5c>
ffffffffc0002fd8:	ldr	x8, [sp, #0x10]
ffffffffc0002fdc:	ldrb	w19, [sp, #0x18]
ffffffffc0002fe0:	cbz	x8, #0x94 <<&T as core::fmt::Debug>::fmt::h85252899a29e0e56+0xfc>
ffffffffc0002fe4:	cbz	w19, #0x30 <<&T as core::fmt::Debug>::fmt::h85252899a29e0e56+0x9c>
ffffffffc0002fe8:	orr	w19, wzr, #0x1
ffffffffc0002fec:	b	#0x84 <<&T as core::fmt::Debug>::fmt::h85252899a29e0e56+0xf8>
ffffffffc0002ff0:	ldp	x0, x8, [x19, #0x20]
ffffffffc0002ff4:	ldr	x20, [sp, #0x20]
ffffffffc0002ff8:	adrp	x1, #0x4000
ffffffffc0002ffc:	ldp	x19, x30, [sp, #0x30]
ffffffffc0003000:	add	x1, x1, #0x3a4
ffffffffc0003004:	ldr	x3, [x8, #0x18]
ffffffffc0003008:	orr	w2, wzr, #0x4
ffffffffc000300c:	add	sp, sp, #0x40
ffffffffc0003010:	br	x3
ffffffffc0003014:	cmp	x8, #0x1
ffffffffc0003018:	b.ne	#0x38 <<&T as core::fmt::Debug>::fmt::h85252899a29e0e56+0xd8>
ffffffffc000301c:	ldrb	w8, [sp, #0x19]
ffffffffc0003020:	cbz	w8, #0x30 <<&T as core::fmt::Debug>::fmt::h85252899a29e0e56+0xd8>
ffffffffc0003024:	ldr	x8, [sp, #0x8]
ffffffffc0003028:	ldrb	w9, [x8, #0x50]
ffffffffc000302c:	tbnz	w9, #0x2, #0x24 <<&T as core::fmt::Debug>::fmt::h85252899a29e0e56+0xd8>
ffffffffc0003030:	ldp	x0, x9, [x8, #0x20]
ffffffffc0003034:	adrp	x1, #0x3000
ffffffffc0003038:	add	x1, x1, #0x3ba
ffffffffc000303c:	orr	w2, wzr, #0x1
ffffffffc0003040:	ldr	x8, [x9, #0x18]
ffffffffc0003044:	orr	w19, wzr, #0x1
ffffffffc0003048:	blr	x8
ffffffffc000304c:	tbnz	w0, #0x0, #0x24 <<&T as core::fmt::Debug>::fmt::h85252899a29e0e56+0xf8>
ffffffffc0003050:	ldr	x8, [sp, #0x8]
ffffffffc0003054:	adrp	x1, #0x3000
ffffffffc0003058:	add	x1, x1, #0x3bb
ffffffffc000305c:	orr	w2, wzr, #0x1
ffffffffc0003060:	ldp	x0, x9, [x8, #0x20]
ffffffffc0003064:	ldr	x8, [x9, #0x18]
ffffffffc0003068:	blr	x8
ffffffffc000306c:	mov	w19, w0
ffffffffc0003070:	strb	w19, [sp, #0x18]
ffffffffc0003074:	cmp	w19, #0x0
ffffffffc0003078:	ldr	x20, [sp, #0x20]
ffffffffc000307c:	ldp	x19, x30, [sp, #0x30]
ffffffffc0003080:	cset	w0, ne
ffffffffc0003084:	add	sp, sp, #0x40
ffffffffc0003088:	ret
ffffffffc000308c:	udf	#0x0

ffffffffc0003090 core::ptr::real_drop_in_place::h0cd744ada9385933:
ffffffffc0003090:	ret
ffffffffc0003094:	udf	#0x0

ffffffffc0003098 <T as core::any::Any>::type_id::h2327eecc50893d10:
ffffffffc0003098:	mov	x0, #0x43e
ffffffffc000309c:	movk	x0, #0xa1e8, lsl #16
ffffffffc00030a0:	movk	x0, #0xe724, lsl #32
ffffffffc00030a4:	movk	x0, #0x1369, lsl #48
ffffffffc00030a8:	ret
ffffffffc00030ac:	udf	#0x0

ffffffffc00030b0 core::panic::PanicInfo::message::he12553d63173534f:
ffffffffc00030b0:	ldr	x0, [x0, #0x10]
ffffffffc00030b4:	ret

ffffffffc00030b8 core::panic::PanicInfo::location::h4ff520a176df480f:
ffffffffc00030b8:	add	x0, x0, #0x18
ffffffffc00030bc:	ret

ffffffffc00030c0 core::panic::Location::file::h86d264eadd6fb32a:
ffffffffc00030c0:	ldp	x8, x1, [x0]
ffffffffc00030c4:	mov	x0, x8
ffffffffc00030c8:	ret
ffffffffc00030cc:	udf	#0x0

ffffffffc00030d0 core::panic::Location::line::hef66514c815da497:
ffffffffc00030d0:	ldr	w0, [x0, #0x10]
ffffffffc00030d4:	ret

ffffffffc00030d8 core::panic::Location::column::h9531d8d38528b6a8:
ffffffffc00030d8:	ldr	w0, [x0, #0x14]
ffffffffc00030dc:	ret

ffffffffc00030e0 core::slice::memchr::memchr::h08a8ecbbaccebba6:
ffffffffc00030e0:	sub	sp, sp, #0x10
ffffffffc00030e4:	mov	w8, w0
ffffffffc00030e8:	and	x9, x1, #0x7
ffffffffc00030ec:	mov	x0, xzr
ffffffffc00030f0:	cbz	x9, #0xc8 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0xd8>
ffffffffc00030f4:	orr	w10, wzr, #0x8
ffffffffc00030f8:	sub	x10, x10, x9
ffffffffc00030fc:	cbz	x10, #0xbc <core::slice::memchr::memchr::h08a8ecbbaccebba6+0xd8>
ffffffffc0003100:	cmp	x10, x2
ffffffffc0003104:	csel	x0, x2, x10, hi
ffffffffc0003108:	mov	x9, xzr
ffffffffc000310c:	add	x12, x1, x0
ffffffffc0003110:	mov	x10, x0
ffffffffc0003114:	mov	x11, x1
ffffffffc0003118:	sub	x13, x12, x11
ffffffffc000311c:	cmp	x13, #0x3
ffffffffc0003120:	b.ls	#0x50 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x90>
ffffffffc0003124:	ldrb	w13, [x11]
ffffffffc0003128:	cmp	w13, w8, uxtb
ffffffffc000312c:	cinc	x9, x9, ne
ffffffffc0003130:	b.eq	#0x74 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0xc4>
ffffffffc0003134:	ldrb	w13, [x11, #0x1]
ffffffffc0003138:	cmp	w13, w8, uxtb
ffffffffc000313c:	cinc	x9, x9, ne
ffffffffc0003140:	b.eq	#0x64 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0xc4>
ffffffffc0003144:	ldrb	w13, [x11, #0x2]
ffffffffc0003148:	cmp	w13, w8, uxtb
ffffffffc000314c:	cinc	x9, x9, ne
ffffffffc0003150:	b.eq	#0x54 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0xc4>
ffffffffc0003154:	ldrb	w13, [x11, #0x3]
ffffffffc0003158:	sub	x10, x10, #0x4
ffffffffc000315c:	add	x11, x11, #0x4
ffffffffc0003160:	cmp	w13, w8, uxtb
ffffffffc0003164:	cinc	x9, x9, ne
ffffffffc0003168:	b.ne	#-0x50 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x38>
ffffffffc000316c:	b	#0x38 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0xc4>
ffffffffc0003170:	mov	x12, xzr
ffffffffc0003174:	cbz	x10, #0x44 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0xd8>
ffffffffc0003178:	ldrb	w13, [x11, x12]
ffffffffc000317c:	add	x12, x12, #0x1
ffffffffc0003180:	sub	x10, x10, #0x1
ffffffffc0003184:	cmp	w13, w8, uxtb
ffffffffc0003188:	b.ne	#-0x14 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x94>
ffffffffc000318c:	orr	w8, wzr, #0x2
ffffffffc0003190:	csinc	w8, w8, wzr, eq
ffffffffc0003194:	and	x8, x8, #0x1
ffffffffc0003198:	add	x8, x8, x9
ffffffffc000319c:	add	x8, x8, x12
ffffffffc00031a0:	sub	x9, x8, #0x1
ffffffffc00031a4:	orr	w8, wzr, #0x1
ffffffffc00031a8:	mov	x0, x8
ffffffffc00031ac:	mov	x1, x9
ffffffffc00031b0:	add	sp, sp, #0x10
ffffffffc00031b4:	ret
ffffffffc00031b8:	subs	x9, x2, #0x10
ffffffffc00031bc:	b.lo	#0x78 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x154>
ffffffffc00031c0:	cmp	x0, x9
ffffffffc00031c4:	b.hi	#0x70 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x154>
ffffffffc00031c8:	and	x10, x8, #0xff
ffffffffc00031cc:	movi	v2.16b, #0x80
ffffffffc00031d0:	mov	x11, #0x101010101010101
ffffffffc00031d4:	mov	x12, #-0x101010101010102
ffffffffc00031d8:	mul	x10, x10, x11
ffffffffc00031dc:	movk	x12, #0xfeff
ffffffffc00031e0:	dup	v0.2d, x12
ffffffffc00031e4:	dup	v1.2d, x10
ffffffffc00031e8:	add	x10, x1, x0
ffffffffc00031ec:	ldr	x11, [x10, #0x8]
ffffffffc00031f0:	str	x11, [sp, #0x8]
ffffffffc00031f4:	ldr	x10, [x10]
ffffffffc00031f8:	str	x10, [sp]
ffffffffc00031fc:	ldr	q3, [sp]
ffffffffc0003200:	eor	v3.16b, v3.16b, v1.16b
ffffffffc0003204:	add	v4.2d, v3.2d, v0.2d
ffffffffc0003208:	bic	v3.16b, v4.16b, v3.16b
ffffffffc000320c:	and	v3.16b, v3.16b, v2.16b
ffffffffc0003210:	mov	x10, v3.d[1]
ffffffffc0003214:	fmov	x11, d3
ffffffffc0003218:	orr	x10, x10, x11
ffffffffc000321c:	cbnz	x10, #0x10 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x14c>
ffffffffc0003220:	add	x0, x0, #0x10
ffffffffc0003224:	cmp	x0, x9
ffffffffc0003228:	b.ls	#-0x40 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x108>
ffffffffc000322c:	cmp	x0, x2
ffffffffc0003230:	b.hi	#0xe8 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x238>
ffffffffc0003234:	mov	x9, xzr
ffffffffc0003238:	add	x10, x1, x0
ffffffffc000323c:	add	x12, x1, x2
ffffffffc0003240:	sub	x11, x2, x0
ffffffffc0003244:	sub	x13, x12, x10
ffffffffc0003248:	cmp	x13, #0x3
ffffffffc000324c:	b.ls	#0x64 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x1d0>
ffffffffc0003250:	ldrb	w13, [x10]
ffffffffc0003254:	cmp	w13, w8, uxtb
ffffffffc0003258:	cinc	x9, x9, ne
ffffffffc000325c:	b.eq	#0x3c <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x1b8>
ffffffffc0003260:	ldrb	w13, [x10, #0x1]
ffffffffc0003264:	cmp	w13, w8, uxtb
ffffffffc0003268:	cinc	x9, x9, ne
ffffffffc000326c:	b.eq	#0x2c <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x1b8>
ffffffffc0003270:	ldrb	w13, [x10, #0x2]
ffffffffc0003274:	cmp	w13, w8, uxtb
ffffffffc0003278:	cinc	x9, x9, ne
ffffffffc000327c:	b.eq	#0x1c <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x1b8>
ffffffffc0003280:	ldrb	w13, [x10, #0x3]
ffffffffc0003284:	sub	x11, x11, #0x4
ffffffffc0003288:	add	x10, x10, #0x4
ffffffffc000328c:	cmp	w13, w8, uxtb
ffffffffc0003290:	cinc	x9, x9, ne
ffffffffc0003294:	b.ne	#-0x50 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x164>
ffffffffc0003298:	orr	w8, wzr, #0x1
ffffffffc000329c:	add	x9, x9, x0
ffffffffc00032a0:	mov	x0, x8
ffffffffc00032a4:	mov	x1, x9
ffffffffc00032a8:	add	sp, sp, #0x10
ffffffffc00032ac:	ret
ffffffffc00032b0:	mov	x12, xzr
ffffffffc00032b4:	cbz	x11, #0x48 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x21c>
ffffffffc00032b8:	ldrb	w13, [x10, x12]
ffffffffc00032bc:	add	x12, x12, #0x1
ffffffffc00032c0:	sub	x11, x11, #0x1
ffffffffc00032c4:	cmp	w13, w8, uxtb
ffffffffc00032c8:	b.ne	#-0x14 <core::slice::memchr::memchr::h08a8ecbbaccebba6+0x1d4>
ffffffffc00032cc:	orr	w8, wzr, #0x2
ffffffffc00032d0:	csinc	w8, w8, wzr, eq
ffffffffc00032d4:	and	x8, x8, #0x1
ffffffffc00032d8:	add	x8, x8, x9
ffffffffc00032dc:	add	x8, x8, x12
ffffffffc00032e0:	sub	x9, x8, #0x1
ffffffffc00032e4:	orr	w8, wzr, #0x1
ffffffffc00032e8:	add	x9, x9, x0
ffffffffc00032ec:	mov	x0, x8
ffffffffc00032f0:	mov	x1, x9
ffffffffc00032f4:	add	sp, sp, #0x10
ffffffffc00032f8:	ret
ffffffffc00032fc:	add	x9, x9, x12
ffffffffc0003300:	mov	x8, xzr
ffffffffc0003304:	add	x9, x9, x0
ffffffffc0003308:	mov	x0, x8
ffffffffc000330c:	mov	x1, x9
ffffffffc0003310:	add	sp, sp, #0x10
ffffffffc0003314:	ret
ffffffffc0003318:	mov	x1, x2
ffffffffc000331c:	bl	#0x7ec <core::slice::slice_index_order_fail::ha4d039b02b1440b5>
ffffffffc0003320:	brk	#0x1
ffffffffc0003324:	udf	#0x0

ffffffffc0003328 core::str::from_utf8::hc36910fe2ca0e613:
ffffffffc0003328:	sub	sp, sp, #0x40
ffffffffc000332c:	stp	x21, x20, [sp, #0x20]
ffffffffc0003330:	mov	x20, x1
ffffffffc0003334:	mov	x21, x0
ffffffffc0003338:	str	x22, [sp, #0x10]
ffffffffc000333c:	mov	x0, sp
ffffffffc0003340:	stp	x19, x30, [sp, #0x30]
ffffffffc0003344:	mov	x1, x21
ffffffffc0003348:	mov	x2, x20
ffffffffc000334c:	mov	x19, x8
ffffffffc0003350:	mov	x22, sp
ffffffffc0003354:	bl	#0x94 <core::str::run_utf8_validation::hb6c24bfb9816b275>
ffffffffc0003358:	ldrb	w10, [sp, #0xe]
ffffffffc000335c:	add	x13, x22, #0x9
ffffffffc0003360:	ldrb	w11, [sp, #0xd]
ffffffffc0003364:	ldrb	w12, [sp, #0xf]
ffffffffc0003368:	ldr	x8, [sp]
ffffffffc000336c:	ldrb	w9, [sp, #0x8]
ffffffffc0003370:	bfi	w11, w10, #8, #24
ffffffffc0003374:	strb	w12, [sp, #0x1e]
ffffffffc0003378:	strh	w11, [sp, #0x1c]
ffffffffc000337c:	ldrb	w10, [x13], #0x2
ffffffffc0003380:	cmp	w9, #0x2
ffffffffc0003384:	ldrb	w11, [x13, #0x1]
ffffffffc0003388:	ldrb	w12, [x13]
ffffffffc000338c:	ldrb	w13, [sp, #0xa]
ffffffffc0003390:	bfi	w12, w11, #8, #8
ffffffffc0003394:	bfi	w10, w13, #8, #8
ffffffffc0003398:	bfi	w10, w12, #16, #16
ffffffffc000339c:	str	w10, [sp, #0x18]
ffffffffc00033a0:	b.ne	#0x10 <core::str::from_utf8::hc36910fe2ca0e613+0x88>
ffffffffc00033a4:	mov	x8, xzr
ffffffffc00033a8:	stp	x21, x20, [x19, #0x8]
ffffffffc00033ac:	b	#0x20 <core::str::from_utf8::hc36910fe2ca0e613+0xa4>
ffffffffc00033b0:	add	x0, x19, #0x11
ffffffffc00033b4:	str	x8, [x19, #0x8]
ffffffffc00033b8:	add	x1, sp, #0x18
ffffffffc00033bc:	strb	w9, [x19, #0x10]
ffffffffc00033c0:	orr	w2, wzr, #0x7
ffffffffc00033c4:	bl	#0x1f1c <memcpy>
ffffffffc00033c8:	orr	w8, wzr, #0x1
ffffffffc00033cc:	str	x8, [x19]
ffffffffc00033d0:	ldp	x19, x30, [sp, #0x30]
ffffffffc00033d4:	ldp	x21, x20, [sp, #0x20]
ffffffffc00033d8:	ldr	x22, [sp, #0x10]
ffffffffc00033dc:	add	sp, sp, #0x40
ffffffffc00033e0:	ret
ffffffffc00033e4:	udf	#0x0

ffffffffc00033e8 core::str::run_utf8_validation::hb6c24bfb9816b275:
ffffffffc00033e8:	subs	x8, x2, #0xf
ffffffffc00033ec:	csel	x9, x8, xzr, hi
ffffffffc00033f0:	cbz	x2, #0x218 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x220>
ffffffffc00033f4:	adrp	x10, #0x4000
ffffffffc00033f8:	mov	x8, xzr
ffffffffc00033fc:	add	x10, x10, #0x1a8
ffffffffc0003400:	add	x11, x1, x8
ffffffffc0003404:	ldrsb	w12, [x11]
ffffffffc0003408:	tbnz	w12, #0x1f, #0x60 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x80>
ffffffffc000340c:	tst	x11, #0x7
ffffffffc0003410:	b.eq	#0x18 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x40>
ffffffffc0003414:	add	x8, x8, #0x1
ffffffffc0003418:	cmp	x8, x2
ffffffffc000341c:	b.lo	#-0x1c <core::str::run_utf8_validation::hb6c24bfb9816b275+0x18>
ffffffffc0003420:	b	#0x1e8 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x220>
ffffffffc0003424:	add	x8, x8, #0x10
ffffffffc0003428:	cmp	x8, x9
ffffffffc000342c:	b.hs	#0x20 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x64>
ffffffffc0003430:	add	x11, x1, x8
ffffffffc0003434:	ldp	x12, x11, [x11]
ffffffffc0003438:	orr	x11, x11, x12
ffffffffc000343c:	tst	x11, #0x8080808080808080
ffffffffc0003440:	b.eq	#-0x1c <core::str::run_utf8_validation::hb6c24bfb9816b275+0x3c>
ffffffffc0003444:	b	#0x8 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x64>
ffffffffc0003448:	add	x8, x8, #0x1
ffffffffc000344c:	cmp	x8, x2
ffffffffc0003450:	b.hs	#0xc <core::str::run_utf8_validation::hb6c24bfb9816b275+0x74>
ffffffffc0003454:	ldrsb	w11, [x1, x8]
ffffffffc0003458:	tbz	w11, #0x1f, #-0x10 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x60>
ffffffffc000345c:	cmp	x8, x2
ffffffffc0003460:	b.lo	#-0x60 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x18>
ffffffffc0003464:	b	#0x1a4 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x220>
ffffffffc0003468:	and	x11, x12, #0xff
ffffffffc000346c:	ldrb	w12, [x10, x11]
ffffffffc0003470:	cmp	w12, #0x2
ffffffffc0003474:	b.eq	#0x48 <core::str::run_utf8_validation::hb6c24bfb9816b275+0xd4>
ffffffffc0003478:	cmp	w12, #0x3
ffffffffc000347c:	b.eq	#0x60 <core::str::run_utf8_validation::hb6c24bfb9816b275+0xf4>
ffffffffc0003480:	cmp	w12, #0x4
ffffffffc0003484:	b.ne	#0x174 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc0003488:	add	x12, x8, #0x1
ffffffffc000348c:	cmp	x12, x2
ffffffffc0003490:	b.hs	#0x188 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x230>
ffffffffc0003494:	ldrb	w12, [x1, x12]
ffffffffc0003498:	cmp	w11, #0xf0
ffffffffc000349c:	b.eq	#0x74 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x128>
ffffffffc00034a0:	cmp	w11, #0xf4
ffffffffc00034a4:	b.ne	#0x80 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x13c>
ffffffffc00034a8:	sxtb	w11, w12
ffffffffc00034ac:	tbz	w11, #0x1f, #0x14c <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc00034b0:	cmp	w12, #0x90
ffffffffc00034b4:	b.lo	#0x90 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x15c>
ffffffffc00034b8:	b	#0x140 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc00034bc:	add	x11, x8, #0x1
ffffffffc00034c0:	cmp	x11, x2
ffffffffc00034c4:	b.hs	#0x154 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x230>
ffffffffc00034c8:	ldrb	w12, [x1, x11]
ffffffffc00034cc:	and	w12, w12, #0xc0
ffffffffc00034d0:	cmp	w12, #0x80
ffffffffc00034d4:	b.eq	#0xd4 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x1c0>
ffffffffc00034d8:	b	#0x120 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc00034dc:	add	x12, x8, #0x1
ffffffffc00034e0:	cmp	x12, x2
ffffffffc00034e4:	b.hs	#0x134 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x230>
ffffffffc00034e8:	ldrb	w12, [x1, x12]
ffffffffc00034ec:	cmp	w11, #0xe0
ffffffffc00034f0:	b.eq	#0x90 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x198>
ffffffffc00034f4:	cmp	w11, #0xed
ffffffffc00034f8:	b.ne	#0xc0 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x1d0>
ffffffffc00034fc:	sxtb	w11, w12
ffffffffc0003500:	tbz	w11, #0x1f, #0xf8 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc0003504:	cmp	w12, #0xa0
ffffffffc0003508:	b.lo	#0x84 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x1a4>
ffffffffc000350c:	b	#0xec <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc0003510:	add	w11, w12, #0x70
ffffffffc0003514:	and	w11, w11, #0xff
ffffffffc0003518:	cmp	w11, #0x30
ffffffffc000351c:	b.lo	#0x28 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x15c>
ffffffffc0003520:	b	#0xd8 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc0003524:	cmp	w12, #0xbf
ffffffffc0003528:	b.hi	#0xd0 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc000352c:	add	w11, w11, #0xf
ffffffffc0003530:	and	w11, w11, #0xff
ffffffffc0003534:	cmp	w11, #0x2
ffffffffc0003538:	b.hi	#0xc0 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc000353c:	sxtb	w11, w12
ffffffffc0003540:	tbz	w11, #0x1f, #0xb8 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc0003544:	add	x11, x8, #0x2
ffffffffc0003548:	cmp	x11, x2
ffffffffc000354c:	b.hs	#0xcc <core::str::run_utf8_validation::hb6c24bfb9816b275+0x230>
ffffffffc0003550:	ldrb	w11, [x1, x11]
ffffffffc0003554:	and	w11, w11, #0xc0
ffffffffc0003558:	cmp	w11, #0x80
ffffffffc000355c:	b.ne	#0xc8 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x23c>
ffffffffc0003560:	add	x11, x8, #0x3
ffffffffc0003564:	cmp	x11, x2
ffffffffc0003568:	b.hs	#0xb0 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x230>
ffffffffc000356c:	ldrb	w12, [x1, x11]
ffffffffc0003570:	and	w12, w12, #0xc0
ffffffffc0003574:	cmp	w12, #0x80
ffffffffc0003578:	b.eq	#0x30 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x1c0>
ffffffffc000357c:	b	#0xb8 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x24c>
ffffffffc0003580:	and	w11, w12, #0xe0
ffffffffc0003584:	cmp	w11, #0xa0
ffffffffc0003588:	b.ne	#0x70 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc000358c:	add	x11, x8, #0x2
ffffffffc0003590:	cmp	x11, x2
ffffffffc0003594:	b.hs	#0x84 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x230>
ffffffffc0003598:	ldrb	w12, [x1, x11]
ffffffffc000359c:	and	w12, w12, #0xc0
ffffffffc00035a0:	cmp	w12, #0x80
ffffffffc00035a4:	b.ne	#0x80 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x23c>
ffffffffc00035a8:	add	x8, x11, #0x1
ffffffffc00035ac:	cmp	x8, x2
ffffffffc00035b0:	b.lo	#-0x1b0 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x18>
ffffffffc00035b4:	b	#0x54 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x220>
ffffffffc00035b8:	add	w13, w11, #0x1f
ffffffffc00035bc:	and	w13, w13, #0xff
ffffffffc00035c0:	cmp	w13, #0xb
ffffffffc00035c4:	b.hi	#0x18 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x1f4>
ffffffffc00035c8:	sxtb	w11, w12
ffffffffc00035cc:	tbz	w11, #0x1f, #0x2c <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc00035d0:	cmp	w12, #0xc0
ffffffffc00035d4:	b.lo	#-0x48 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x1a4>
ffffffffc00035d8:	b	#0x20 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc00035dc:	cmp	w12, #0xbf
ffffffffc00035e0:	b.hi	#0x18 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc00035e4:	and	w11, w11, #0xfe
ffffffffc00035e8:	cmp	w11, #0xee
ffffffffc00035ec:	b.ne	#0xc <core::str::run_utf8_validation::hb6c24bfb9816b275+0x210>
ffffffffc00035f0:	sxtb	w11, w12
ffffffffc00035f4:	tbnz	w11, #0x1f, #-0x68 <core::str::run_utf8_validation::hb6c24bfb9816b275+0x1a4>
ffffffffc00035f8:	mov	w9, #0x101
ffffffffc00035fc:	str	x8, [x0]
ffffffffc0003600:	strh	w9, [x0, #0x8]
ffffffffc0003604:	ret
ffffffffc0003608:	orr	w8, wzr, #0x2
ffffffffc000360c:	stp	xzr, xzr, [x0]
ffffffffc0003610:	strb	w8, [x0, #0x8]
ffffffffc0003614:	ret
ffffffffc0003618:	str	x8, [x0]
ffffffffc000361c:	strb	wzr, [x0, #0x8]
ffffffffc0003620:	ret
ffffffffc0003624:	mov	w9, #0x201
ffffffffc0003628:	str	x8, [x0]
ffffffffc000362c:	strh	w9, [x0, #0x8]
ffffffffc0003630:	ret
ffffffffc0003634:	mov	w9, #0x301
ffffffffc0003638:	str	x8, [x0]
ffffffffc000363c:	strh	w9, [x0, #0x8]
ffffffffc0003640:	ret
ffffffffc0003644:	udf	#0x0

ffffffffc0003648 core::str::slice_error_fail::haf30dd007bc44399:
ffffffffc0003648:	stp	x2, x3, [sp, #-0xd0]!
ffffffffc000364c:	cmp	x1, #0x101
ffffffffc0003650:	b.hs	#0x10 <core::str::slice_error_fail::haf30dd007bc44399+0x18>
ffffffffc0003654:	orr	w9, wzr, #0x1
ffffffffc0003658:	mov	x8, x1
ffffffffc000365c:	b	#0x54 <core::str::slice_error_fail::haf30dd007bc44399+0x68>
ffffffffc0003660:	mov	x8, xzr
ffffffffc0003664:	add	x9, x0, #0x100
ffffffffc0003668:	sub	x10, x1, #0xff
ffffffffc000366c:	add	x11, x8, #0x100
ffffffffc0003670:	cmp	x11, x1
ffffffffc0003674:	b.hs	#0x10 <core::str::slice_error_fail::haf30dd007bc44399+0x3c>
ffffffffc0003678:	ldrsb	w11, [x9, x8]
ffffffffc000367c:	cmn	w11, #0x41
ffffffffc0003680:	b.gt	#0x28 <core::str::slice_error_fail::haf30dd007bc44399+0x60>
ffffffffc0003684:	sub	x11, x8, #0x1
ffffffffc0003688:	cmn	x8, #0xff
ffffffffc000368c:	b.eq	#0x10 <core::str::slice_error_fail::haf30dd007bc44399+0x54>
ffffffffc0003690:	cmp	x10, x8
ffffffffc0003694:	mov	x8, x11
ffffffffc0003698:	b.ne	#-0x2c <core::str::slice_error_fail::haf30dd007bc44399+0x24>
ffffffffc000369c:	mov	w9, wzr
ffffffffc00036a0:	add	x8, x11, #0x100
ffffffffc00036a4:	b	#0xc <core::str::slice_error_fail::haf30dd007bc44399+0x68>
ffffffffc00036a8:	mov	w9, wzr
ffffffffc00036ac:	add	x8, x8, #0x100
ffffffffc00036b0:	adrp	x10, #0x4000
ffffffffc00036b4:	stp	x0, x8, [sp, #0x10]
ffffffffc00036b8:	adrp	x11, #0x4000
ffffffffc00036bc:	add	x10, x10, #0x2a8
ffffffffc00036c0:	add	x11, x11, #0xe1
ffffffffc00036c4:	cmp	w9, #0x0
ffffffffc00036c8:	mov	w9, #0x5
ffffffffc00036cc:	csel	x9, xzr, x9, ne
ffffffffc00036d0:	csel	x10, x11, x10, ne
ffffffffc00036d4:	cmp	x2, x1
ffffffffc00036d8:	stp	x10, x9, [sp, #0x20]
ffffffffc00036dc:	b.hi	#0x74 <core::str::slice_error_fail::haf30dd007bc44399+0x108>
ffffffffc00036e0:	cmp	x3, x1
ffffffffc00036e4:	b.hi	#0x6c <core::str::slice_error_fail::haf30dd007bc44399+0x108>
ffffffffc00036e8:	cmp	x2, x3
ffffffffc00036ec:	b.hi	#0x274 <core::str::slice_error_fail::haf30dd007bc44399+0x318>
ffffffffc00036f0:	cbz	x2, #0x1c <core::str::slice_error_fail::haf30dd007bc44399+0xc4>
ffffffffc00036f4:	cmp	x1, x2
ffffffffc00036f8:	b.eq	#0x14 <core::str::slice_error_fail::haf30dd007bc44399+0xc4>
ffffffffc00036fc:	b.ls	#0x14 <core::str::slice_error_fail::haf30dd007bc44399+0xc8>
ffffffffc0003700:	ldrsb	w8, [x0, x2]
ffffffffc0003704:	cmn	w8, #0x40
ffffffffc0003708:	b.lt	#0x8 <core::str::slice_error_fail::haf30dd007bc44399+0xc8>
ffffffffc000370c:	mov	x2, x3
ffffffffc0003710:	str	x2, [sp, #0x30]
ffffffffc0003714:	cbz	x2, #0xa0 <core::str::slice_error_fail::haf30dd007bc44399+0x16c>
ffffffffc0003718:	cmp	x2, x1
ffffffffc000371c:	b.eq	#0x98 <core::str::slice_error_fail::haf30dd007bc44399+0x16c>
ffffffffc0003720:	add	x8, x1, #0x1
ffffffffc0003724:	cmp	x2, x1
ffffffffc0003728:	b.hs	#0x10 <core::str::slice_error_fail::haf30dd007bc44399+0xf0>
ffffffffc000372c:	ldrsb	w9, [x0, x2]
ffffffffc0003730:	cmn	w9, #0x41
ffffffffc0003734:	b.gt	#0x88 <core::str::slice_error_fail::haf30dd007bc44399+0x174>
ffffffffc0003738:	subs	x9, x2, #0x1
ffffffffc000373c:	b.eq	#0x7c <core::str::slice_error_fail::haf30dd007bc44399+0x170>
ffffffffc0003740:	cmp	x8, x2
ffffffffc0003744:	mov	x2, x9
ffffffffc0003748:	b.ne	#-0x24 <core::str::slice_error_fail::haf30dd007bc44399+0xdc>
ffffffffc000374c:	b	#0x6c <core::str::slice_error_fail::haf30dd007bc44399+0x170>
ffffffffc0003750:	cmp	x2, x1
ffffffffc0003754:	stp	xzr, xzr, [sp, #0x60]
ffffffffc0003758:	csel	x9, x2, x3, hi
ffffffffc000375c:	adrp	x10, #-0x1000
ffffffffc0003760:	add	x8, sp, #0x40
ffffffffc0003764:	add	x10, x10, #0x8a8
ffffffffc0003768:	str	x9, [sp, #0x40]
ffffffffc000376c:	adrp	x9, #0x2000
ffffffffc0003770:	add	x9, x9, #0x1b8
ffffffffc0003774:	stp	x8, x10, [sp, #0x80]
ffffffffc0003778:	add	x8, sp, #0x10
ffffffffc000377c:	add	x10, sp, #0x20
ffffffffc0003780:	adrp	x1, #0x4000
ffffffffc0003784:	stp	x8, x9, [sp, #0x90]
ffffffffc0003788:	orr	w8, wzr, #0x3
ffffffffc000378c:	stp	x10, x9, [sp, #0xa0]
ffffffffc0003790:	adrp	x9, #0x4000
ffffffffc0003794:	add	x9, x9, #0x2d0
ffffffffc0003798:	add	x1, x1, #0x378
ffffffffc000379c:	stp	x9, x8, [sp, #0x50]
ffffffffc00037a0:	add	x9, sp, #0x80
ffffffffc00037a4:	stp	x9, x8, [sp, #0x70]
ffffffffc00037a8:	add	x0, sp, #0x50
ffffffffc00037ac:	bl	#-0x1a34 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc00037b0:	brk	#0x1
ffffffffc00037b4:	mov	x9, x2
ffffffffc00037b8:	mov	x2, x9
ffffffffc00037bc:	cmp	x2, x1
ffffffffc00037c0:	b.ne	#0x14 <core::str::slice_error_fail::haf30dd007bc44399+0x18c>
ffffffffc00037c4:	adrp	x0, #0x4000
ffffffffc00037c8:	add	x0, x0, #0x180
ffffffffc00037cc:	bl	#-0x1ae4 <core::panicking::panic::hd514700a611a3e48>
ffffffffc00037d0:	brk	#0x1
ffffffffc00037d4:	add	x8, x0, x2
ffffffffc00037d8:	mov	x11, x8
ffffffffc00037dc:	ldrsb	w10, [x11], #0x1
ffffffffc00037e0:	and	w9, w10, #0xff
ffffffffc00037e4:	tbnz	w10, #0x1f, #0x10 <core::str::slice_error_fail::haf30dd007bc44399+0x1ac>
ffffffffc00037e8:	orr	w8, wzr, #0x1
ffffffffc00037ec:	str	w9, [sp, #0x3c]
ffffffffc00037f0:	b	#0xf0 <core::str::slice_error_fail::haf30dd007bc44399+0x298>
ffffffffc00037f4:	add	x10, x0, x1
ffffffffc00037f8:	cmp	x11, x10
ffffffffc00037fc:	b.ne	#0x38 <core::str::slice_error_fail::haf30dd007bc44399+0x1ec>
ffffffffc0003800:	mov	w8, wzr
ffffffffc0003804:	mov	x12, x10
ffffffffc0003808:	and	w11, w9, #0x1f
ffffffffc000380c:	cmp	w9, #0xdf
ffffffffc0003810:	b.hi	#0x3c <core::str::slice_error_fail::haf30dd007bc44399+0x204>
ffffffffc0003814:	bfi	w8, w11, #6, #5
ffffffffc0003818:	cmp	w8, #0x80
ffffffffc000381c:	str	w8, [sp, #0x3c]
ffffffffc0003820:	b.lo	#0xbc <core::str::slice_error_fail::haf30dd007bc44399+0x294>
ffffffffc0003824:	cmp	w8, #0x800
ffffffffc0003828:	b.hs	#0x7c <core::str::slice_error_fail::haf30dd007bc44399+0x25c>
ffffffffc000382c:	orr	w8, wzr, #0x2
ffffffffc0003830:	b	#0xb0 <core::str::slice_error_fail::haf30dd007bc44399+0x298>
ffffffffc0003834:	ldrb	w11, [x8, #0x1]
ffffffffc0003838:	add	x12, x8, #0x2
ffffffffc000383c:	and	w8, w11, #0x3f
ffffffffc0003840:	and	w11, w9, #0x1f
ffffffffc0003844:	cmp	w9, #0xdf
ffffffffc0003848:	b.ls	#-0x34 <core::str::slice_error_fail::haf30dd007bc44399+0x1cc>
ffffffffc000384c:	cmp	x12, x10
ffffffffc0003850:	b.ne	#0x30 <core::str::slice_error_fail::haf30dd007bc44399+0x238>
ffffffffc0003854:	mov	w13, wzr
ffffffffc0003858:	mov	x12, x10
ffffffffc000385c:	bfi	w13, w8, #6, #6
ffffffffc0003860:	cmp	w9, #0xf0
ffffffffc0003864:	b.hs	#0x30 <core::str::slice_error_fail::haf30dd007bc44399+0x24c>
ffffffffc0003868:	bfi	w13, w11, #12, #5
ffffffffc000386c:	mov	w8, w13
ffffffffc0003870:	cmp	w8, #0x80
ffffffffc0003874:	str	w8, [sp, #0x3c]
ffffffffc0003878:	b.hs	#-0x54 <core::str::slice_error_fail::haf30dd007bc44399+0x1dc>
ffffffffc000387c:	b	#0x60 <core::str::slice_error_fail::haf30dd007bc44399+0x294>
ffffffffc0003880:	ldrb	w13, [x12], #0x1
ffffffffc0003884:	and	w13, w13, #0x3f
ffffffffc0003888:	bfi	w13, w8, #6, #6
ffffffffc000388c:	cmp	w9, #0xf0
ffffffffc0003890:	b.lo	#-0x28 <core::str::slice_error_fail::haf30dd007bc44399+0x220>
ffffffffc0003894:	cmp	x12, x10
ffffffffc0003898:	b.ne	#0x1c <core::str::slice_error_fail::haf30dd007bc44399+0x26c>
ffffffffc000389c:	mov	w8, wzr
ffffffffc00038a0:	b	#0x1c <core::str::slice_error_fail::haf30dd007bc44399+0x274>
ffffffffc00038a4:	cmp	w8, #0x10, lsl #12
ffffffffc00038a8:	orr	w8, wzr, #0x3
ffffffffc00038ac:	cinc	x8, x8, hs
ffffffffc00038b0:	b	#0x30 <core::str::slice_error_fail::haf30dd007bc44399+0x298>
ffffffffc00038b4:	ldrb	w8, [x12]
ffffffffc00038b8:	and	w8, w8, #0x3f
ffffffffc00038bc:	ubfiz	w9, w11, #18, #3
ffffffffc00038c0:	bfi	w9, w13, #6, #12
ffffffffc00038c4:	orr	w8, w9, w8
ffffffffc00038c8:	cmp	w8, #0x110, lsl #12
ffffffffc00038cc:	b.eq	#-0x108 <core::str::slice_error_fail::haf30dd007bc44399+0x17c>
ffffffffc00038d0:	cmp	w8, #0x80
ffffffffc00038d4:	str	w8, [sp, #0x3c]
ffffffffc00038d8:	b.hs	#-0xb4 <core::str::slice_error_fail::haf30dd007bc44399+0x1dc>
ffffffffc00038dc:	orr	w8, wzr, #0x1
ffffffffc00038e0:	adrp	x9, #-0x1000
ffffffffc00038e4:	stp	xzr, xzr, [sp, #0x60]
ffffffffc00038e8:	add	x9, x9, #0x8a8
ffffffffc00038ec:	add	x10, sp, #0x30
ffffffffc00038f0:	add	x8, x8, x2
ffffffffc00038f4:	adrp	x1, #0x4000
ffffffffc00038f8:	stp	x10, x9, [sp, #0x80]
ffffffffc00038fc:	adrp	x9, #0x1000
ffffffffc0003900:	stp	x2, x8, [sp, #0x40]
ffffffffc0003904:	add	x8, sp, #0x3c
ffffffffc0003908:	add	x9, x9, #0xa30
ffffffffc000390c:	add	x10, sp, #0x20
ffffffffc0003910:	add	x1, x1, #0x478
ffffffffc0003914:	stp	x8, x9, [sp, #0x90]
ffffffffc0003918:	adrp	x9, #-0x1000
ffffffffc000391c:	add	x8, sp, #0x40
ffffffffc0003920:	add	x9, x9, #0xa30
ffffffffc0003924:	stp	x8, x9, [sp, #0xa0]
ffffffffc0003928:	adrp	x9, #0x2000
ffffffffc000392c:	add	x8, sp, #0x10
ffffffffc0003930:	add	x9, x9, #0x1b8
ffffffffc0003934:	stp	x8, x9, [sp, #0xb0]
ffffffffc0003938:	mov	w8, #0x5
ffffffffc000393c:	stp	x10, x9, [sp, #0xc0]
ffffffffc0003940:	adrp	x9, #0x4000
ffffffffc0003944:	add	x9, x9, #0x428
ffffffffc0003948:	stp	x9, x8, [sp, #0x50]
ffffffffc000394c:	add	x9, sp, #0x80
ffffffffc0003950:	stp	x9, x8, [sp, #0x70]
ffffffffc0003954:	add	x0, sp, #0x50
ffffffffc0003958:	bl	#-0x1be0 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc000395c:	brk	#0x1
ffffffffc0003960:	adrp	x9, #-0x1000
ffffffffc0003964:	stp	xzr, xzr, [sp, #0x60]
ffffffffc0003968:	mov	x8, sp
ffffffffc000396c:	add	x9, x9, #0x8a8
ffffffffc0003970:	add	x10, sp, #0x8
ffffffffc0003974:	adrp	x1, #0x4000
ffffffffc0003978:	stp	x8, x9, [sp, #0x80]
ffffffffc000397c:	add	x8, sp, #0x10
ffffffffc0003980:	stp	x10, x9, [sp, #0x90]
ffffffffc0003984:	adrp	x9, #0x2000
ffffffffc0003988:	add	x9, x9, #0x1b8
ffffffffc000398c:	add	x10, sp, #0x20
ffffffffc0003990:	add	x1, x1, #0x3e0
ffffffffc0003994:	stp	x8, x9, [sp, #0xa0]
ffffffffc0003998:	orr	w8, wzr, #0x4
ffffffffc000399c:	stp	x10, x9, [sp, #0xb0]
ffffffffc00039a0:	adrp	x9, #0x4000
ffffffffc00039a4:	add	x9, x9, #0x3a0
ffffffffc00039a8:	stp	x9, x8, [sp, #0x50]
ffffffffc00039ac:	add	x9, sp, #0x80
ffffffffc00039b0:	stp	x9, x8, [sp, #0x70]
ffffffffc00039b4:	add	x0, sp, #0x50
ffffffffc00039b8:	bl	#-0x1c40 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc00039bc:	brk	#0x1

ffffffffc00039c0 <core::str::Utf8Error as core::fmt::Debug>::fmt::h3c7a8527f0f2a332:
ffffffffc00039c0:	sub	sp, sp, #0x40
ffffffffc00039c4:	str	x22, [sp, #0x10]
ffffffffc00039c8:	stp	x21, x20, [sp, #0x20]
ffffffffc00039cc:	mov	x20, x0
ffffffffc00039d0:	stp	x19, x30, [sp, #0x30]
ffffffffc00039d4:	mov	x19, x1
ffffffffc00039d8:	ldp	x0, x8, [x1, #0x20]
ffffffffc00039dc:	adrp	x1, #0x4000
ffffffffc00039e0:	mov	w21, #0x9
ffffffffc00039e4:	add	x1, x1, #0x490
ffffffffc00039e8:	ldr	x8, [x8, #0x18]
ffffffffc00039ec:	mov	x2, x21
ffffffffc00039f0:	add	x22, x20, #0x8
ffffffffc00039f4:	blr	x8
ffffffffc00039f8:	adrp	x1, #0x4000
ffffffffc00039fc:	strb	w0, [sp, #0x8]
ffffffffc0003a00:	adrp	x4, #0x4000
ffffffffc0003a04:	str	x19, [sp]
ffffffffc0003a08:	add	x1, x1, #0x499
ffffffffc0003a0c:	strb	wzr, [sp, #0x9]
ffffffffc0003a10:	add	x4, x4, #0x4a8
ffffffffc0003a14:	str	x20, [sp, #0x18]
ffffffffc0003a18:	mov	w2, #0xb
ffffffffc0003a1c:	mov	x0, sp
ffffffffc0003a20:	add	x3, sp, #0x18
ffffffffc0003a24:	bl	#-0x19f4 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd>
ffffffffc0003a28:	adrp	x1, #0x4000
ffffffffc0003a2c:	str	x22, [sp, #0x18]
ffffffffc0003a30:	adrp	x4, #0x4000
ffffffffc0003a34:	add	x1, x1, #0x4c8
ffffffffc0003a38:	add	x4, x4, #0x4d8
ffffffffc0003a3c:	mov	x0, sp
ffffffffc0003a40:	add	x3, sp, #0x18
ffffffffc0003a44:	mov	x2, x21
ffffffffc0003a48:	bl	#-0x1a18 <core::fmt::builders::DebugStruct::field::h780f4db7e2d5effd>
ffffffffc0003a4c:	ldrb	w8, [sp, #0x9]
ffffffffc0003a50:	ldrb	w0, [sp, #0x8]
ffffffffc0003a54:	cbz	w8, #0x48 <<core::str::Utf8Error as core::fmt::Debug>::fmt::h3c7a8527f0f2a332+0xdc>
ffffffffc0003a58:	cbz	w0, #0xc <<core::str::Utf8Error as core::fmt::Debug>::fmt::h3c7a8527f0f2a332+0xa4>
ffffffffc0003a5c:	orr	w0, wzr, #0x1
ffffffffc0003a60:	b	#0x38 <<core::str::Utf8Error as core::fmt::Debug>::fmt::h3c7a8527f0f2a332+0xd8>
ffffffffc0003a64:	ldr	x8, [sp]
ffffffffc0003a68:	ldp	x0, x9, [x8, #0x20]
ffffffffc0003a6c:	ldrb	w10, [x8, #0x50]
ffffffffc0003a70:	ldr	x8, [x9, #0x18]
ffffffffc0003a74:	tbnz	w10, #0x2, #0x14 <<core::str::Utf8Error as core::fmt::Debug>::fmt::h3c7a8527f0f2a332+0xc8>
ffffffffc0003a78:	adrp	x1, #0x3000
ffffffffc0003a7c:	add	x1, x1, #0x3b5
ffffffffc0003a80:	orr	w2, wzr, #0x2
ffffffffc0003a84:	b	#0x10 <<core::str::Utf8Error as core::fmt::Debug>::fmt::h3c7a8527f0f2a332+0xd4>
ffffffffc0003a88:	adrp	x1, #0x3000
ffffffffc0003a8c:	add	x1, x1, #0x3b4
ffffffffc0003a90:	orr	w2, wzr, #0x1
ffffffffc0003a94:	blr	x8
ffffffffc0003a98:	strb	w0, [sp, #0x8]
ffffffffc0003a9c:	ldp	x19, x30, [sp, #0x30]
ffffffffc0003aa0:	ldp	x21, x20, [sp, #0x20]
ffffffffc0003aa4:	ldr	x22, [sp, #0x10]
ffffffffc0003aa8:	cmp	w0, #0x0
ffffffffc0003aac:	cset	w0, ne
ffffffffc0003ab0:	add	sp, sp, #0x40
ffffffffc0003ab4:	ret

ffffffffc0003ab8 core::slice::slice_index_len_fail::h54ac268d785f98ad:
ffffffffc0003ab8:	adrp	x9, #-0x1000
ffffffffc0003abc:	stp	x0, x1, [sp, #-0x60]!
ffffffffc0003ac0:	mov	x8, sp
ffffffffc0003ac4:	stp	xzr, xzr, [sp, #0x20]
ffffffffc0003ac8:	add	x9, x9, #0x8a8
ffffffffc0003acc:	add	x10, sp, #0x8
ffffffffc0003ad0:	adrp	x1, #0x4000
ffffffffc0003ad4:	stp	x8, x9, [sp, #0x40]
ffffffffc0003ad8:	orr	w8, wzr, #0x2
ffffffffc0003adc:	stp	x10, x9, [sp, #0x50]
ffffffffc0003ae0:	adrp	x9, #0x4000
ffffffffc0003ae4:	add	x9, x9, #0x660
ffffffffc0003ae8:	add	x1, x1, #0x680
ffffffffc0003aec:	add	x0, sp, #0x10
ffffffffc0003af0:	stp	x9, x8, [sp, #0x10]
ffffffffc0003af4:	add	x9, sp, #0x40
ffffffffc0003af8:	stp	x9, x8, [sp, #0x30]
ffffffffc0003afc:	bl	#-0x1d84 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc0003b00:	brk	#0x1
ffffffffc0003b04:	udf	#0x0

ffffffffc0003b08 core::slice::slice_index_order_fail::ha4d039b02b1440b5:
ffffffffc0003b08:	adrp	x9, #-0x1000
ffffffffc0003b0c:	stp	x0, x1, [sp, #-0x60]!
ffffffffc0003b10:	mov	x8, sp
ffffffffc0003b14:	stp	xzr, xzr, [sp, #0x20]
ffffffffc0003b18:	add	x9, x9, #0x8a8
ffffffffc0003b1c:	add	x10, sp, #0x8
ffffffffc0003b20:	adrp	x1, #0x4000
ffffffffc0003b24:	stp	x8, x9, [sp, #0x40]
ffffffffc0003b28:	orr	w8, wzr, #0x2
ffffffffc0003b2c:	stp	x10, x9, [sp, #0x50]
ffffffffc0003b30:	adrp	x9, #0x4000
ffffffffc0003b34:	add	x9, x9, #0x6c0
ffffffffc0003b38:	add	x1, x1, #0x6e0
ffffffffc0003b3c:	add	x0, sp, #0x10
ffffffffc0003b40:	stp	x9, x8, [sp, #0x10]
ffffffffc0003b44:	add	x9, sp, #0x40
ffffffffc0003b48:	stp	x9, x8, [sp, #0x30]
ffffffffc0003b4c:	bl	#-0x1dd4 <core::panicking::panic_fmt::h6d34fa387ad51a6d>
ffffffffc0003b50:	brk	#0x1
ffffffffc0003b54:	udf	#0x0

ffffffffc0003b58 core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836:
ffffffffc0003b58:	cbz	x2, #0x60 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0x60>
ffffffffc0003b5c:	mov	x9, xzr
ffffffffc0003b60:	add	x10, x1, x2, lsl #1
ffffffffc0003b64:	ldrb	w11, [x1, #0x1]
ffffffffc0003b68:	and	w13, w0, #0xff00
ffffffffc0003b6c:	ldrb	w12, [x1], #0x2
ffffffffc0003b70:	cmp	w12, w13, lsr #8
ffffffffc0003b74:	add	x8, x9, x11
ffffffffc0003b78:	b.ne	#0x30 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0x50>
ffffffffc0003b7c:	cmp	x8, x9
ffffffffc0003b80:	b.lo	#0xcc <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0xf4>
ffffffffc0003b84:	cmp	x8, x4
ffffffffc0003b88:	b.hi	#0xd4 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0x104>
ffffffffc0003b8c:	add	x9, x3, x9
ffffffffc0003b90:	cbz	x11, #0x1c <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0x54>
ffffffffc0003b94:	ldrb	w12, [x9], #0x1
ffffffffc0003b98:	sub	x11, x11, #0x1
ffffffffc0003b9c:	cmp	w12, w0, uxtb
ffffffffc0003ba0:	b.ne	#-0x10 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0x38>
ffffffffc0003ba4:	b	#0x80 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0xcc>
ffffffffc0003ba8:	b.hi	#0x10 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0x60>
ffffffffc0003bac:	mov	x9, x8
ffffffffc0003bb0:	cmp	x1, x10
ffffffffc0003bb4:	b.ne	#-0x50 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0xc>
ffffffffc0003bb8:	cbz	x6, #0x78 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0xd8>
ffffffffc0003bbc:	add	x9, x5, x6
ffffffffc0003bc0:	add	x11, x5, #0x1
ffffffffc0003bc4:	and	w10, w0, #0xffff
ffffffffc0003bc8:	orr	w8, wzr, #0x1
ffffffffc0003bcc:	ldrsb	w13, [x5]
ffffffffc0003bd0:	and	w12, w13, #0xff
ffffffffc0003bd4:	tbnz	w13, #0x1f, #0x14 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0x90>
ffffffffc0003bd8:	mov	x5, x11
ffffffffc0003bdc:	subs	w10, w10, w12
ffffffffc0003be0:	b.pl	#0x2c <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0xb4>
ffffffffc0003be4:	b	#0x38 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0xc4>
ffffffffc0003be8:	cmp	x11, x9
ffffffffc0003bec:	b.eq	#0x50 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0xe4>
ffffffffc0003bf0:	ldrb	w13, [x11], #0x1
ffffffffc0003bf4:	and	w12, w12, #0x7f
ffffffffc0003bf8:	bfi	w13, w12, #8, #7
ffffffffc0003bfc:	mov	x5, x11
ffffffffc0003c00:	mov	w12, w13
ffffffffc0003c04:	subs	w10, w10, w12
ffffffffc0003c08:	b.mi	#0x14 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0xc4>
ffffffffc0003c0c:	eor	w8, w8, #0x1
ffffffffc0003c10:	add	x11, x5, #0x1
ffffffffc0003c14:	cmp	x5, x9
ffffffffc0003c18:	b.ne	#-0x4c <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836+0x74>
ffffffffc0003c1c:	and	w0, w8, #0x1
ffffffffc0003c20:	ret
ffffffffc0003c24:	mov	w8, wzr
ffffffffc0003c28:	and	w0, w8, #0x1
ffffffffc0003c2c:	ret
ffffffffc0003c30:	orr	w8, wzr, #0x1
ffffffffc0003c34:	and	w0, w8, #0x1
ffffffffc0003c38:	ret
ffffffffc0003c3c:	adrp	x0, #0x4000
ffffffffc0003c40:	add	x0, x0, #0x598
ffffffffc0003c44:	bl	#-0x1f5c <core::panicking::panic::hd514700a611a3e48>
ffffffffc0003c48:	brk	#0x1
ffffffffc0003c4c:	mov	x0, x9
ffffffffc0003c50:	mov	x1, x8
ffffffffc0003c54:	bl	#-0x14c <core::slice::slice_index_order_fail::ha4d039b02b1440b5>
ffffffffc0003c58:	brk	#0x1
ffffffffc0003c5c:	mov	x0, x8
ffffffffc0003c60:	mov	x1, x4
ffffffffc0003c64:	bl	#-0x1ac <core::slice::slice_index_len_fail::h54ac268d785f98ad>
ffffffffc0003c68:	brk	#0x1
ffffffffc0003c6c:	udf	#0x0

ffffffffc0003c70 core::ptr::real_drop_in_place::hb46a42870070801f:
ffffffffc0003c70:	ret
ffffffffc0003c74:	udf	#0x0

ffffffffc0003c78 core::fmt::ArgumentV1::show_usize::h927235874780aa4f.llvm.1786160017004261673:
ffffffffc0003c78:	sub	sp, sp, #0x40
ffffffffc0003c7c:	adrp	x8, #0x3000
ffffffffc0003c80:	ldr	x9, [x0]
ffffffffc0003c84:	str	x30, [sp, #0x30]
ffffffffc0003c88:	ldr	x8, [x8, #0x258]
ffffffffc0003c8c:	lsr	x10, x9, #4
ffffffffc0003c90:	cmp	x10, #0x271
ffffffffc0003c94:	b.lo	#0xa4 <core::fmt::ArgumentV1::show_usize::h927235874780aa4f.llvm.1786160017004261673+0xc0>
ffffffffc0003c98:	mov	x11, #0x594b
ffffffffc0003c9c:	mov	x13, #0xf5c3
ffffffffc0003ca0:	movk	x11, #0x3886, lsl #16
ffffffffc0003ca4:	movk	x13, #0x5c28, lsl #16
ffffffffc0003ca8:	movk	x11, #0xc5d6, lsl #32
ffffffffc0003cac:	movk	x13, #0xc28f, lsl #32
ffffffffc0003cb0:	mov	w16, #0xe0ff
ffffffffc0003cb4:	mov	x10, xzr
ffffffffc0003cb8:	movk	x11, #0x346d, lsl #48
ffffffffc0003cbc:	mov	w12, #0x2710
ffffffffc0003cc0:	movk	x13, #0x28f5, lsl #48
ffffffffc0003cc4:	mov	w14, #0x64
ffffffffc0003cc8:	add	x15, sp, #0x8
ffffffffc0003ccc:	movk	w16, #0x5f5, lsl #16
ffffffffc0003cd0:	mov	x17, x9
ffffffffc0003cd4:	umulh	x9, x9, x11
ffffffffc0003cd8:	add	x3, x15, x10
ffffffffc0003cdc:	lsr	x9, x9, #11
ffffffffc0003ce0:	msub	x18, x9, x12, x17
ffffffffc0003ce4:	sub	x10, x10, #0x4
ffffffffc0003ce8:	cmp	x17, x16
ffffffffc0003cec:	lsr	x0, x18, #2
ffffffffc0003cf0:	umulh	x0, x0, x13
ffffffffc0003cf4:	lsr	x0, x0, #2
ffffffffc0003cf8:	add	x2, x8, x0, lsl #1
ffffffffc0003cfc:	msub	x18, x0, x14, x18
ffffffffc0003d00:	ldrb	w0, [x2, #0x1]
ffffffffc0003d04:	add	x18, x8, x18, lsl #1
ffffffffc0003d08:	ldrb	w2, [x2]
ffffffffc0003d0c:	strb	w0, [x3, #0x24]
ffffffffc0003d10:	strb	w2, [x3, #0x23]
ffffffffc0003d14:	ldrb	w0, [x18, #0x1]
ffffffffc0003d18:	ldrb	w18, [x18]
ffffffffc0003d1c:	strb	w0, [x3, #0x26]
ffffffffc0003d20:	strb	w18, [x3, #0x25]
ffffffffc0003d24:	b.hi	#-0x54 <core::fmt::ArgumentV1::show_usize::h927235874780aa4f.llvm.1786160017004261673+0x58>
ffffffffc0003d28:	add	x10, x10, #0x27
ffffffffc0003d2c:	cmp	x9, #0x64
ffffffffc0003d30:	b.ge	#0x14 <core::fmt::ArgumentV1::show_usize::h927235874780aa4f.llvm.1786160017004261673+0xcc>
ffffffffc0003d34:	b	#0x50 <core::fmt::ArgumentV1::show_usize::h927235874780aa4f.llvm.1786160017004261673+0x10c>
ffffffffc0003d38:	mov	w10, #0x27
ffffffffc0003d3c:	cmp	x9, #0x64
ffffffffc0003d40:	b.lt	#0x44 <core::fmt::ArgumentV1::show_usize::h927235874780aa4f.llvm.1786160017004261673+0x10c>
ffffffffc0003d44:	mov	w12, #0x851f
ffffffffc0003d48:	and	w11, w9, #0xffff
ffffffffc0003d4c:	movk	w12, #0x51eb, lsl #16
ffffffffc0003d50:	sub	x10, x10, #0x2
ffffffffc0003d54:	umull	x11, w11, w12
ffffffffc0003d58:	mov	w12, #0x64
ffffffffc0003d5c:	lsr	x11, x11, #37
ffffffffc0003d60:	msub	w9, w11, w12, w9
ffffffffc0003d64:	add	x12, sp, #0x8
ffffffffc0003d68:	add	x12, x12, x10
ffffffffc0003d6c:	add	x9, x8, w9, uxth #1
ffffffffc0003d70:	ldrb	w13, [x9, #0x1]
ffffffffc0003d74:	ldrb	w14, [x9]
ffffffffc0003d78:	mov	x9, x11
ffffffffc0003d7c:	strb	w13, [x12, #0x1]
ffffffffc0003d80:	strb	w14, [x12]
ffffffffc0003d84:	cmp	x9, #0xa
ffffffffc0003d88:	b.ge	#0x18 <core::fmt::ArgumentV1::show_usize::h927235874780aa4f.llvm.1786160017004261673+0x128>
ffffffffc0003d8c:	sub	x8, x10, #0x1
ffffffffc0003d90:	add	w9, w9, #0x30
ffffffffc0003d94:	add	x10, sp, #0x8
ffffffffc0003d98:	strb	w9, [x10, x8]
ffffffffc0003d9c:	b	#0x24 <core::fmt::ArgumentV1::show_usize::h927235874780aa4f.llvm.1786160017004261673+0x148>
ffffffffc0003da0:	add	x9, x8, x9, lsl #1
ffffffffc0003da4:	sub	x8, x10, #0x2
ffffffffc0003da8:	add	x10, sp, #0x8
ffffffffc0003dac:	ldrb	w11, [x9, #0x1]
ffffffffc0003db0:	add	x10, x10, x8
ffffffffc0003db4:	ldrb	w9, [x9]
ffffffffc0003db8:	strb	w11, [x10, #0x1]
ffffffffc0003dbc:	strb	w9, [x10]
ffffffffc0003dc0:	add	x9, sp, #0x8
ffffffffc0003dc4:	mov	w10, #0x27
ffffffffc0003dc8:	adrp	x2, #0x3000
ffffffffc0003dcc:	add	x4, x9, x8
ffffffffc0003dd0:	sub	x5, x10, x8
ffffffffc0003dd4:	add	x2, x2, #0x310
ffffffffc0003dd8:	mov	x0, x1
ffffffffc0003ddc:	orr	w1, wzr, #0x1
ffffffffc0003de0:	mov	x3, xzr
ffffffffc0003de4:	bl	#0x374 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0003de8:	ldr	x30, [sp, #0x30]
ffffffffc0003dec:	add	sp, sp, #0x40
ffffffffc0003df0:	ret
ffffffffc0003df4:	udf	#0x0

ffffffffc0003df8 <core::fmt::Arguments as core::fmt::Display>::fmt::hc31f8582b7cdd6f6:
ffffffffc0003df8:	sub	sp, sp, #0x50
ffffffffc0003dfc:	str	x20, [sp, #0x30]
ffffffffc0003e00:	orr	w2, wzr, #0x30
ffffffffc0003e04:	stp	x19, x30, [sp, #0x40]
ffffffffc0003e08:	ldp	x19, x20, [x1, #0x20]
ffffffffc0003e0c:	mov	x1, x0
ffffffffc0003e10:	mov	x0, sp
ffffffffc0003e14:	bl	#0x14cc <memcpy>
ffffffffc0003e18:	mov	x2, sp
ffffffffc0003e1c:	mov	x0, x19
ffffffffc0003e20:	mov	x1, x20
ffffffffc0003e24:	bl	#0x14 <core::fmt::write::h30a176880c7ec5aa>
ffffffffc0003e28:	ldp	x19, x30, [sp, #0x40]
ffffffffc0003e2c:	ldr	x20, [sp, #0x30]
ffffffffc0003e30:	add	sp, sp, #0x50
ffffffffc0003e34:	ret

ffffffffc0003e38 core::fmt::write::h30a176880c7ec5aa:
ffffffffc0003e38:	sub	sp, sp, #0xa0
ffffffffc0003e3c:	adrp	x8, #0x2000
ffffffffc0003e40:	stp	x23, x22, [sp, #0x70]
ffffffffc0003e44:	orr	w9, wzr, #0x3
ffffffffc0003e48:	stp	x21, x20, [sp, #0x80]
ffffffffc0003e4c:	ldr	x21, [x2, #0x10]
ffffffffc0003e50:	ldr	d0, [x8, #0x828]
ffffffffc0003e54:	ldp	x22, x8, [x2, #0x20]
ffffffffc0003e58:	strb	w9, [sp, #0x58]
ffffffffc0003e5c:	stp	x25, x24, [sp, #0x60]
ffffffffc0003e60:	add	x9, x22, x8, lsl #4
ffffffffc0003e64:	stp	x19, x30, [sp, #0x90]
ffffffffc0003e68:	str	xzr, [sp, #0x10]
ffffffffc0003e6c:	str	xzr, [sp]
ffffffffc0003e70:	str	d0, [sp, #0x50]
ffffffffc0003e74:	stp	x0, x1, [sp, #0x20]
ffffffffc0003e78:	stp	x22, x8, [sp, #0x40]
ffffffffc0003e7c:	stp	x22, x9, [sp, #0x30]
ffffffffc0003e80:	cbz	x21, #0x1f4 <core::fmt::write::h30a176880c7ec5aa+0x23c>
ffffffffc0003e84:	ldr	x8, [x2, #0x18]
ffffffffc0003e88:	ldp	x19, x20, [x2]
ffffffffc0003e8c:	and	x8, x8, #0x3ffffffffffffff
ffffffffc0003e90:	cmp	x8, x20
ffffffffc0003e94:	csel	x22, x20, x8, hi
ffffffffc0003e98:	cbz	x22, #0x248 <core::fmt::write::h30a176880c7ec5aa+0x2a8>
ffffffffc0003e9c:	ldp	x8, x2, [x19]
ffffffffc0003ea0:	ldr	x9, [x1, #0x18]
ffffffffc0003ea4:	mov	x1, x8
ffffffffc0003ea8:	blr	x9
ffffffffc0003eac:	tbnz	w0, #0x0, #0x258 <core::fmt::write::h30a176880c7ec5aa+0x2cc>
ffffffffc0003eb0:	adrp	x25, #0x0
ffffffffc0003eb4:	add	x23, x21, #0x20
ffffffffc0003eb8:	add	x24, x19, #0x18
ffffffffc0003ebc:	orr	w21, wzr, #0x1
ffffffffc0003ec0:	add	x25, x25, #0xc78
ffffffffc0003ec4:	ldrb	w8, [x23, #0x18]
ffffffffc0003ec8:	strb	w8, [sp, #0x58]
ffffffffc0003ecc:	ldr	d0, [x23, #0x10]
ffffffffc0003ed0:	rev64	v0.2s, v0.2s
ffffffffc0003ed4:	str	d0, [sp, #0x50]
ffffffffc0003ed8:	ldp	x8, x1, [x23]
ffffffffc0003edc:	cmp	x8, #0x1
ffffffffc0003ee0:	b.eq	#0x3c <core::fmt::write::h30a176880c7ec5aa+0xe4>
ffffffffc0003ee4:	cmp	x8, #0x3
ffffffffc0003ee8:	b.eq	#0xa0 <core::fmt::write::h30a176880c7ec5aa+0x150>
ffffffffc0003eec:	cmp	x8, #0x2
ffffffffc0003ef0:	b.ne	#0x58 <core::fmt::write::h30a176880c7ec5aa+0x110>
ffffffffc0003ef4:	ldp	x8, x9, [sp, #0x30]
ffffffffc0003ef8:	cmp	x8, x9
ffffffffc0003efc:	b.eq	#0x8c <core::fmt::write::h30a176880c7ec5aa+0x150>
ffffffffc0003f00:	add	x9, x8, #0x10
ffffffffc0003f04:	str	x9, [sp, #0x30]
ffffffffc0003f08:	ldr	x9, [x8, #0x8]
ffffffffc0003f0c:	cmp	x9, x25
ffffffffc0003f10:	b.ne	#0x78 <core::fmt::write::h30a176880c7ec5aa+0x150>
ffffffffc0003f14:	ldr	x8, [x8]
ffffffffc0003f18:	b	#0x2c <core::fmt::write::h30a176880c7ec5aa+0x10c>
ffffffffc0003f1c:	ldr	x2, [sp, #0x48]
ffffffffc0003f20:	cmp	x2, x1
ffffffffc0003f24:	b.ls	#0x204 <core::fmt::write::h30a176880c7ec5aa+0x2f0>
ffffffffc0003f28:	ldr	x8, [sp, #0x40]
ffffffffc0003f2c:	add	x9, x8, x1, lsl #4
ffffffffc0003f30:	ldr	x9, [x9, #0x8]
ffffffffc0003f34:	cmp	x9, x25
ffffffffc0003f38:	b.ne	#0x50 <core::fmt::write::h30a176880c7ec5aa+0x150>
ffffffffc0003f3c:	lsl	x9, x1, #4
ffffffffc0003f40:	ldr	x8, [x8, x9]
ffffffffc0003f44:	ldr	x1, [x8]
ffffffffc0003f48:	orr	w8, wzr, #0x1
ffffffffc0003f4c:	stp	x8, x1, [sp]
ffffffffc0003f50:	ldp	x8, x1, [x23, #-0x10]
ffffffffc0003f54:	cmp	x8, #0x1
ffffffffc0003f58:	b.ne	#0x44 <core::fmt::write::h30a176880c7ec5aa+0x164>
ffffffffc0003f5c:	ldr	x2, [sp, #0x48]
ffffffffc0003f60:	cmp	x2, x1
ffffffffc0003f64:	b.ls	#0x1c4 <core::fmt::write::h30a176880c7ec5aa+0x2f0>
ffffffffc0003f68:	ldr	x8, [sp, #0x40]
ffffffffc0003f6c:	add	x9, x8, x1, lsl #4
ffffffffc0003f70:	ldr	x9, [x9, #0x8]
ffffffffc0003f74:	cmp	x9, x25
ffffffffc0003f78:	b.ne	#0x8c <core::fmt::write::h30a176880c7ec5aa+0x1cc>
ffffffffc0003f7c:	lsl	x9, x1, #4
ffffffffc0003f80:	ldr	x8, [x8, x9]
ffffffffc0003f84:	b	#0x4c <core::fmt::write::h30a176880c7ec5aa+0x198>
ffffffffc0003f88:	mov	x8, xzr
ffffffffc0003f8c:	stp	x8, x1, [sp]
ffffffffc0003f90:	ldp	x8, x1, [x23, #-0x10]
ffffffffc0003f94:	cmp	x8, #0x1
ffffffffc0003f98:	b.eq	#-0x3c <core::fmt::write::h30a176880c7ec5aa+0x124>
ffffffffc0003f9c:	cmp	x8, #0x3
ffffffffc0003fa0:	b.eq	#0x64 <core::fmt::write::h30a176880c7ec5aa+0x1cc>
ffffffffc0003fa4:	cmp	x8, #0x2
ffffffffc0003fa8:	b.ne	#0x2c <core::fmt::write::h30a176880c7ec5aa+0x19c>
ffffffffc0003fac:	ldp	x8, x9, [sp, #0x30]
ffffffffc0003fb0:	cmp	x8, x9
ffffffffc0003fb4:	b.eq	#0x50 <core::fmt::write::h30a176880c7ec5aa+0x1cc>
ffffffffc0003fb8:	add	x9, x8, #0x10
ffffffffc0003fbc:	str	x9, [sp, #0x30]
ffffffffc0003fc0:	ldr	x9, [x8, #0x8]
ffffffffc0003fc4:	cmp	x9, x25
ffffffffc0003fc8:	b.ne	#0x3c <core::fmt::write::h30a176880c7ec5aa+0x1cc>
ffffffffc0003fcc:	ldr	x8, [x8]
ffffffffc0003fd0:	ldr	x1, [x8]
ffffffffc0003fd4:	orr	w8, wzr, #0x1
ffffffffc0003fd8:	stp	x8, x1, [sp, #0x10]
ffffffffc0003fdc:	ldur	x8, [x23, #-0x20]
ffffffffc0003fe0:	cmp	x8, #0x1
ffffffffc0003fe4:	b.eq	#0x34 <core::fmt::write::h30a176880c7ec5aa+0x1e0>
ffffffffc0003fe8:	ldp	x8, x9, [sp, #0x30]
ffffffffc0003fec:	cmp	x8, x9
ffffffffc0003ff0:	b.eq	#0x148 <core::fmt::write::h30a176880c7ec5aa+0x300>
ffffffffc0003ff4:	add	x10, x8, #0x10
ffffffffc0003ff8:	add	x9, x8, #0x8
ffffffffc0003ffc:	str	x10, [sp, #0x30]
ffffffffc0004000:	b	#0x34 <core::fmt::write::h30a176880c7ec5aa+0x1fc>
ffffffffc0004004:	mov	x8, xzr
ffffffffc0004008:	stp	x8, x1, [sp, #0x10]
ffffffffc000400c:	ldur	x8, [x23, #-0x20]
ffffffffc0004010:	cmp	x8, #0x1
ffffffffc0004014:	b.ne	#-0x2c <core::fmt::write::h30a176880c7ec5aa+0x1b0>
ffffffffc0004018:	ldur	x1, [x23, #-0x18]
ffffffffc000401c:	ldr	x2, [sp, #0x48]
ffffffffc0004020:	cmp	x1, x2
ffffffffc0004024:	b.hs	#0x124 <core::fmt::write::h30a176880c7ec5aa+0x310>
ffffffffc0004028:	ldr	x8, [sp, #0x40]
ffffffffc000402c:	add	x8, x8, x1, lsl #4
ffffffffc0004030:	add	x9, x8, #0x8
ffffffffc0004034:	ldr	x9, [x9]
ffffffffc0004038:	mov	x1, sp
ffffffffc000403c:	ldr	x0, [x8]
ffffffffc0004040:	blr	x9
ffffffffc0004044:	tbnz	w0, #0x0, #0xc0 <core::fmt::write::h30a176880c7ec5aa+0x2cc>
ffffffffc0004048:	cmp	x21, x22
ffffffffc000404c:	b.hs	#0x98 <core::fmt::write::h30a176880c7ec5aa+0x2ac>
ffffffffc0004050:	ldp	x0, x8, [sp, #0x20]
ffffffffc0004054:	ldp	x1, x2, [x24, #-0x8]
ffffffffc0004058:	add	x21, x21, #0x1
ffffffffc000405c:	ldr	x8, [x8, #0x18]
ffffffffc0004060:	blr	x8
ffffffffc0004064:	add	x23, x23, #0x40
ffffffffc0004068:	add	x24, x24, #0x10
ffffffffc000406c:	tbz	w0, #0x0, #-0x1a8 <core::fmt::write::h30a176880c7ec5aa+0x8c>
ffffffffc0004070:	b	#0x94 <core::fmt::write::h30a176880c7ec5aa+0x2cc>
ffffffffc0004074:	ldp	x19, x20, [x2]
ffffffffc0004078:	cmp	x8, x20
ffffffffc000407c:	csel	x23, x20, x8, hi
ffffffffc0004080:	cbz	x23, #0x60 <core::fmt::write::h30a176880c7ec5aa+0x2a8>
ffffffffc0004084:	ldp	x8, x2, [x19]
ffffffffc0004088:	ldr	x9, [x1, #0x18]
ffffffffc000408c:	mov	x1, x8
ffffffffc0004090:	blr	x9
ffffffffc0004094:	tbnz	w0, #0x0, #0x70 <core::fmt::write::h30a176880c7ec5aa+0x2cc>
ffffffffc0004098:	mov	x24, xzr
ffffffffc000409c:	orr	w21, wzr, #0x1
ffffffffc00040a0:	add	x8, x22, x24
ffffffffc00040a4:	mov	x1, sp
ffffffffc00040a8:	ldp	x0, x8, [x8]
ffffffffc00040ac:	blr	x8
ffffffffc00040b0:	tbnz	w0, #0x0, #0x54 <core::fmt::write::h30a176880c7ec5aa+0x2cc>
ffffffffc00040b4:	cmp	x21, x23
ffffffffc00040b8:	b.hs	#0x2c <core::fmt::write::h30a176880c7ec5aa+0x2ac>
ffffffffc00040bc:	ldp	x0, x9, [sp, #0x20]
ffffffffc00040c0:	add	x8, x19, x24
ffffffffc00040c4:	add	x21, x21, #0x1
ffffffffc00040c8:	ldp	x1, x2, [x8, #0x10]
ffffffffc00040cc:	ldr	x8, [x9, #0x18]
ffffffffc00040d0:	blr	x8
ffffffffc00040d4:	add	x24, x24, #0x10
ffffffffc00040d8:	tbz	w0, #0x0, #-0x38 <core::fmt::write::h30a176880c7ec5aa+0x268>
ffffffffc00040dc:	b	#0x28 <core::fmt::write::h30a176880c7ec5aa+0x2cc>
ffffffffc00040e0:	mov	x21, xzr
ffffffffc00040e4:	cmp	x20, x21
ffffffffc00040e8:	b.ls	#0x24 <core::fmt::write::h30a176880c7ec5aa+0x2d4>
ffffffffc00040ec:	ldp	x0, x9, [sp, #0x20]
ffffffffc00040f0:	add	x8, x19, x21, lsl #4
ffffffffc00040f4:	ldp	x1, x2, [x8]
ffffffffc00040f8:	ldr	x8, [x9, #0x18]
ffffffffc00040fc:	blr	x8
ffffffffc0004100:	tbz	w0, #0x0, #0xc <core::fmt::write::h30a176880c7ec5aa+0x2d4>
ffffffffc0004104:	orr	w0, wzr, #0x1
ffffffffc0004108:	b	#0x8 <core::fmt::write::h30a176880c7ec5aa+0x2d8>
ffffffffc000410c:	mov	w0, wzr
ffffffffc0004110:	ldp	x19, x30, [sp, #0x90]
ffffffffc0004114:	ldp	x21, x20, [sp, #0x80]
ffffffffc0004118:	ldp	x23, x22, [sp, #0x70]
ffffffffc000411c:	ldp	x25, x24, [sp, #0x60]
ffffffffc0004120:	add	sp, sp, #0xa0
ffffffffc0004124:	ret
ffffffffc0004128:	adrp	x0, #0x3000
ffffffffc000412c:	add	x0, x0, #0xdc0
ffffffffc0004130:	bl	#-0x2400 <core::panicking::panic_bounds_check::h5652958be485e7fc>
ffffffffc0004134:	brk	#0x1
ffffffffc0004138:	adrp	x0, #0x3000
ffffffffc000413c:	add	x0, x0, #0xcd8
ffffffffc0004140:	bl	#-0x2458 <core::panicking::panic::hd514700a611a3e48>
ffffffffc0004144:	brk	#0x1
ffffffffc0004148:	adrp	x0, #0x3000
ffffffffc000414c:	add	x0, x0, #0xda8
ffffffffc0004150:	bl	#-0x2420 <core::panicking::panic_bounds_check::h5652958be485e7fc>
ffffffffc0004154:	brk	#0x1

ffffffffc0004158 core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d:
ffffffffc0004158:	stp	x27, x26, [sp, #-0x50]!
ffffffffc000415c:	stp	x23, x22, [sp, #0x20]
ffffffffc0004160:	mov	x22, x3
ffffffffc0004164:	stp	x21, x20, [sp, #0x30]
ffffffffc0004168:	mov	x20, x5
ffffffffc000416c:	stp	x19, x30, [sp, #0x40]
ffffffffc0004170:	mov	x21, x4
ffffffffc0004174:	mov	x23, x2
ffffffffc0004178:	stp	x25, x24, [sp, #0x10]
ffffffffc000417c:	mov	x19, x0
ffffffffc0004180:	cbz	w1, #0x40 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x68>
ffffffffc0004184:	ldr	w8, [x19, #0x50]
ffffffffc0004188:	mov	w9, #0x2b
ffffffffc000418c:	mov	w10, #0x110000
ffffffffc0004190:	and	x11, x8, #0x1
ffffffffc0004194:	cmp	w11, #0x0
ffffffffc0004198:	csel	w24, w10, w9, eq
ffffffffc000419c:	add	x9, x11, x20
ffffffffc00041a0:	tbz	w8, #0x2, #0x30 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x78>
ffffffffc00041a4:	mov	x12, x22
ffffffffc00041a8:	cbz	x22, #0xc0 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x110>
ffffffffc00041ac:	cmp	x22, #0x1
ffffffffc00041b0:	b.ne	#0x50 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0xa8>
ffffffffc00041b4:	mov	x12, xzr
ffffffffc00041b8:	mov	x10, x23
ffffffffc00041bc:	b	#0x90 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0xf4>
ffffffffc00041c0:	ldr	w8, [x19, #0x50]
ffffffffc00041c4:	add	x9, x20, #0x1
ffffffffc00041c8:	mov	w24, #0x2d
ffffffffc00041cc:	tbnz	w8, #0x2, #-0x28 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x4c>
ffffffffc00041d0:	mov	x23, xzr
ffffffffc00041d4:	mov	x22, xzr
ffffffffc00041d8:	ldr	x10, [x19]
ffffffffc00041dc:	cmp	x10, #0x1
ffffffffc00041e0:	b.eq	#0x9c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x124>
ffffffffc00041e4:	mov	x0, x19
ffffffffc00041e8:	mov	w1, w24
ffffffffc00041ec:	mov	x2, x23
ffffffffc00041f0:	mov	x3, x22
ffffffffc00041f4:	bl	#0x2a4 <core::fmt::Formatter::pad_integral::write_prefix::h1e124ea65ac8b255>
ffffffffc00041f8:	cbz	w0, #0xd4 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x174>
ffffffffc00041fc:	b	#0x240 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e4>
ffffffffc0004200:	and	x11, x22, #0xfffffffffffffffe
ffffffffc0004204:	mov	x12, xzr
ffffffffc0004208:	mov	x13, xzr
ffffffffc000420c:	add	x10, x23, x11
ffffffffc0004210:	add	x14, x23, #0x1
ffffffffc0004214:	mov	x15, x11
ffffffffc0004218:	ldurb	w16, [x14, #-0x1]
ffffffffc000421c:	ldrb	w17, [x14], #0x2
ffffffffc0004220:	and	w17, w17, #0xc0
ffffffffc0004224:	and	w16, w16, #0xc0
ffffffffc0004228:	cmp	w16, #0x80
ffffffffc000422c:	cinc	x12, x12, eq
ffffffffc0004230:	cmp	w17, #0x80
ffffffffc0004234:	cinc	x13, x13, eq
ffffffffc0004238:	subs	x15, x15, #0x2
ffffffffc000423c:	b.ne	#-0x24 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0xc0>
ffffffffc0004240:	add	x12, x13, x12
ffffffffc0004244:	cmp	x11, x22
ffffffffc0004248:	b.eq	#0x20 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x110>
ffffffffc000424c:	add	x11, x23, x22
ffffffffc0004250:	ldrb	w13, [x10], #0x1
ffffffffc0004254:	and	w13, w13, #0xc0
ffffffffc0004258:	cmp	w13, #0x80
ffffffffc000425c:	cinc	x12, x12, eq
ffffffffc0004260:	cmp	x11, x10
ffffffffc0004264:	b.ne	#-0x14 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0xf8>
ffffffffc0004268:	add	x9, x9, x22
ffffffffc000426c:	sub	x9, x9, x12
ffffffffc0004270:	ldr	x10, [x19]
ffffffffc0004274:	cmp	x10, #0x1
ffffffffc0004278:	b.ne	#-0x94 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x8c>
ffffffffc000427c:	ldr	x10, [x19, #0x8]
ffffffffc0004280:	subs	x27, x10, x9
ffffffffc0004284:	b.ls	#0x30 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x15c>
ffffffffc0004288:	tbnz	w8, #0x3, #0x6c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x19c>
ffffffffc000428c:	ldrb	w8, [x19, #0x58]
ffffffffc0004290:	cmp	w8, #0x3
ffffffffc0004294:	csinc	w8, w8, wzr, ne
ffffffffc0004298:	tst	w8, #0x3
ffffffffc000429c:	b.eq	#0xa8 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x1ec>
ffffffffc00042a0:	cmp	w8, #0x2
ffffffffc00042a4:	b.eq	#0xa8 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x1f4>
ffffffffc00042a8:	mov	x25, x27
ffffffffc00042ac:	mov	x27, xzr
ffffffffc00042b0:	b	#0xa8 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x200>
ffffffffc00042b4:	mov	x0, x19
ffffffffc00042b8:	mov	w1, w24
ffffffffc00042bc:	mov	x2, x23
ffffffffc00042c0:	mov	x3, x22
ffffffffc00042c4:	bl	#0x1d4 <core::fmt::Formatter::pad_integral::write_prefix::h1e124ea65ac8b255>
ffffffffc00042c8:	tbnz	w0, #0x0, #0x174 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e4>
ffffffffc00042cc:	ldp	x0, x8, [x19, #0x20]
ffffffffc00042d0:	mov	x1, x21
ffffffffc00042d4:	mov	x2, x20
ffffffffc00042d8:	ldp	x19, x30, [sp, #0x40]
ffffffffc00042dc:	ldp	x21, x20, [sp, #0x30]
ffffffffc00042e0:	ldp	x23, x22, [sp, #0x20]
ffffffffc00042e4:	ldp	x25, x24, [sp, #0x10]
ffffffffc00042e8:	ldr	x3, [x8, #0x18]
ffffffffc00042ec:	ldp	x27, x26, [sp], #0x50
ffffffffc00042f0:	br	x3
ffffffffc00042f4:	orr	w8, wzr, #0x30
ffffffffc00042f8:	orr	w25, wzr, #0x1
ffffffffc00042fc:	mov	x0, x19
ffffffffc0004300:	mov	w1, w24
ffffffffc0004304:	str	w8, [x19, #0x54]
ffffffffc0004308:	mov	x2, x23
ffffffffc000430c:	strb	w25, [x19, #0x58]
ffffffffc0004310:	mov	x3, x22
ffffffffc0004314:	bl	#0x184 <core::fmt::Formatter::pad_integral::write_prefix::h1e124ea65ac8b255>
ffffffffc0004318:	tbnz	w0, #0x0, #0x128 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e8>
ffffffffc000431c:	ldrb	w8, [x19, #0x58]
ffffffffc0004320:	cmp	w8, #0x3
ffffffffc0004324:	csinc	w8, w8, wzr, ne
ffffffffc0004328:	tst	w8, #0x3
ffffffffc000432c:	b.eq	#0xb8 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x28c>
ffffffffc0004330:	cmp	w8, #0x2
ffffffffc0004334:	b.eq	#0xb8 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x294>
ffffffffc0004338:	mov	x22, x27
ffffffffc000433c:	mov	x27, xzr
ffffffffc0004340:	b	#0xb8 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2a0>
ffffffffc0004344:	mov	x25, xzr
ffffffffc0004348:	b	#0x10 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x200>
ffffffffc000434c:	add	x8, x27, #0x1
ffffffffc0004350:	lsr	x25, x27, #1
ffffffffc0004354:	lsr	x27, x8, #1
ffffffffc0004358:	mov	x26, #-0x1
ffffffffc000435c:	add	x26, x26, #0x1
ffffffffc0004360:	cmp	x26, x25
ffffffffc0004364:	b.hs	#0x1c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x228>
ffffffffc0004368:	ldp	x0, x8, [x19, #0x20]
ffffffffc000436c:	ldr	w1, [x19, #0x54]
ffffffffc0004370:	ldr	x8, [x8, #0x20]
ffffffffc0004374:	blr	x8
ffffffffc0004378:	tbz	w0, #0x0, #-0x1c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x204>
ffffffffc000437c:	b	#0xc0 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e4>
ffffffffc0004380:	ldr	w26, [x19, #0x54]
ffffffffc0004384:	mov	x0, x19
ffffffffc0004388:	mov	w1, w24
ffffffffc000438c:	mov	x2, x23
ffffffffc0004390:	mov	x3, x22
ffffffffc0004394:	bl	#0x104 <core::fmt::Formatter::pad_integral::write_prefix::h1e124ea65ac8b255>
ffffffffc0004398:	tbnz	w0, #0x0, #0xa4 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e4>
ffffffffc000439c:	ldp	x0, x8, [x19, #0x20]
ffffffffc00043a0:	mov	x1, x21
ffffffffc00043a4:	mov	x2, x20
ffffffffc00043a8:	ldr	x8, [x8, #0x18]
ffffffffc00043ac:	blr	x8
ffffffffc00043b0:	tbnz	w0, #0x0, #0x8c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e4>
ffffffffc00043b4:	ldp	x20, x19, [x19, #0x20]
ffffffffc00043b8:	mov	x21, #-0x1
ffffffffc00043bc:	orr	w25, wzr, #0x1
ffffffffc00043c0:	add	x21, x21, #0x1
ffffffffc00043c4:	cmp	x21, x27
ffffffffc00043c8:	b.hs	#0xc4 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x334>
ffffffffc00043cc:	ldr	x8, [x19, #0x20]
ffffffffc00043d0:	mov	x0, x20
ffffffffc00043d4:	mov	w1, w26
ffffffffc00043d8:	blr	x8
ffffffffc00043dc:	tbz	w0, #0x0, #-0x1c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x268>
ffffffffc00043e0:	b	#0x60 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e8>
ffffffffc00043e4:	mov	x22, xzr
ffffffffc00043e8:	b	#0x10 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2a0>
ffffffffc00043ec:	add	x8, x27, #0x1
ffffffffc00043f0:	lsr	x22, x27, #1
ffffffffc00043f4:	lsr	x27, x8, #1
ffffffffc00043f8:	mov	x23, #-0x1
ffffffffc00043fc:	add	x23, x23, #0x1
ffffffffc0004400:	cmp	x23, x22
ffffffffc0004404:	b.hs	#0x1c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2c8>
ffffffffc0004408:	ldp	x0, x8, [x19, #0x20]
ffffffffc000440c:	ldr	w1, [x19, #0x54]
ffffffffc0004410:	ldr	x8, [x8, #0x20]
ffffffffc0004414:	blr	x8
ffffffffc0004418:	tbz	w0, #0x0, #-0x1c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2a4>
ffffffffc000441c:	b	#0x20 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e4>
ffffffffc0004420:	ldp	x0, x8, [x19, #0x20]
ffffffffc0004424:	ldr	w22, [x19, #0x54]
ffffffffc0004428:	mov	x1, x21
ffffffffc000442c:	mov	x2, x20
ffffffffc0004430:	ldr	x8, [x8, #0x18]
ffffffffc0004434:	blr	x8
ffffffffc0004438:	tbz	w0, #0x0, #0x24 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x304>
ffffffffc000443c:	orr	w25, wzr, #0x1
ffffffffc0004440:	mov	w0, w25
ffffffffc0004444:	ldp	x19, x30, [sp, #0x40]
ffffffffc0004448:	ldp	x21, x20, [sp, #0x30]
ffffffffc000444c:	ldp	x23, x22, [sp, #0x20]
ffffffffc0004450:	ldp	x25, x24, [sp, #0x10]
ffffffffc0004454:	ldp	x27, x26, [sp], #0x50
ffffffffc0004458:	ret
ffffffffc000445c:	ldp	x20, x19, [x19, #0x20]
ffffffffc0004460:	mov	x21, #-0x1
ffffffffc0004464:	orr	w25, wzr, #0x1
ffffffffc0004468:	add	x21, x21, #0x1
ffffffffc000446c:	cmp	x21, x27
ffffffffc0004470:	b.hs	#0x1c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x334>
ffffffffc0004474:	ldr	x8, [x19, #0x20]
ffffffffc0004478:	mov	x0, x20
ffffffffc000447c:	mov	w1, w22
ffffffffc0004480:	blr	x8
ffffffffc0004484:	tbz	w0, #0x0, #-0x1c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x310>
ffffffffc0004488:	b	#-0x48 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e8>
ffffffffc000448c:	mov	w25, wzr
ffffffffc0004490:	b	#-0x50 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d+0x2e8>
ffffffffc0004494:	udf	#0x0

ffffffffc0004498 core::fmt::Formatter::pad_integral::write_prefix::h1e124ea65ac8b255:
ffffffffc0004498:	stp	x21, x20, [sp, #-0x20]!
ffffffffc000449c:	stp	x19, x30, [sp, #0x10]
ffffffffc00044a0:	mov	x19, x3
ffffffffc00044a4:	mov	x20, x2
ffffffffc00044a8:	mov	x21, x0
ffffffffc00044ac:	cmp	w1, #0x110, lsl #12
ffffffffc00044b0:	b.eq	#0x24 <core::fmt::Formatter::pad_integral::write_prefix::h1e124ea65ac8b255+0x3c>
ffffffffc00044b4:	ldp	x0, x8, [x21, #0x20]
ffffffffc00044b8:	ldr	x8, [x8, #0x20]
ffffffffc00044bc:	blr	x8
ffffffffc00044c0:	cbz	w0, #0x14 <core::fmt::Formatter::pad_integral::write_prefix::h1e124ea65ac8b255+0x3c>
ffffffffc00044c4:	orr	w0, wzr, #0x1
ffffffffc00044c8:	ldp	x19, x30, [sp, #0x10]
ffffffffc00044cc:	ldp	x21, x20, [sp], #0x20
ffffffffc00044d0:	ret
ffffffffc00044d4:	cbz	x20, #0x20 <core::fmt::Formatter::pad_integral::write_prefix::h1e124ea65ac8b255+0x5c>
ffffffffc00044d8:	ldp	x0, x8, [x21, #0x20]
ffffffffc00044dc:	mov	x2, x19
ffffffffc00044e0:	ldp	x19, x30, [sp, #0x10]
ffffffffc00044e4:	mov	x1, x20
ffffffffc00044e8:	ldr	x3, [x8, #0x18]
ffffffffc00044ec:	ldp	x21, x20, [sp], #0x20
ffffffffc00044f0:	br	x3
ffffffffc00044f4:	mov	w0, wzr
ffffffffc00044f8:	ldp	x19, x30, [sp, #0x10]
ffffffffc00044fc:	ldp	x21, x20, [sp], #0x20
ffffffffc0004500:	ret
ffffffffc0004504:	udf	#0x0

ffffffffc0004508 core::fmt::Formatter::pad::h48b06a2d4d46a221:
ffffffffc0004508:	str	x24, [sp, #-0x40]!
ffffffffc000450c:	stp	x23, x22, [sp, #0x10]
ffffffffc0004510:	stp	x21, x20, [sp, #0x20]
ffffffffc0004514:	mov	x20, x0
ffffffffc0004518:	stp	x19, x30, [sp, #0x30]
ffffffffc000451c:	mov	x19, x2
ffffffffc0004520:	ldr	x8, [x0]
ffffffffc0004524:	mov	x21, x1
ffffffffc0004528:	ldr	x9, [x0, #0x10]
ffffffffc000452c:	cmp	x8, #0x1
ffffffffc0004530:	b.ne	#0x10 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x38>
ffffffffc0004534:	cmp	x9, #0x1
ffffffffc0004538:	b.eq	#0x10 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x40>
ffffffffc000453c:	b	#0x1e0 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x214>
ffffffffc0004540:	cmp	x9, #0x1
ffffffffc0004544:	b.ne	#0x298 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x2d4>
ffffffffc0004548:	cbz	x19, #0x1cc <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x20c>
ffffffffc000454c:	mov	x11, x21
ffffffffc0004550:	ldr	x9, [x20, #0x18]
ffffffffc0004554:	add	x10, x21, x19
ffffffffc0004558:	ldrsb	w12, [x11], #0x1
ffffffffc000455c:	tbz	w12, #0x1f, #0xa4 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0xf8>
ffffffffc0004560:	and	w12, w12, #0xff
ffffffffc0004564:	cmp	x19, #0x1
ffffffffc0004568:	b.ne	#0x34 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x94>
ffffffffc000456c:	mov	w13, wzr
ffffffffc0004570:	mov	x14, x10
ffffffffc0004574:	cmp	w12, #0xe0
ffffffffc0004578:	b.lo	#0x88 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0xf8>
ffffffffc000457c:	cmp	x14, x10
ffffffffc0004580:	b.eq	#0x3c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0xb4>
ffffffffc0004584:	ldrb	w11, [x14], #0x1
ffffffffc0004588:	and	w15, w11, #0x3f
ffffffffc000458c:	mov	x11, x14
ffffffffc0004590:	cmp	w12, #0xf0
ffffffffc0004594:	b.hs	#0x38 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0xc4>
ffffffffc0004598:	b	#0x68 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0xf8>
ffffffffc000459c:	ldrb	w13, [x21, #0x1]
ffffffffc00045a0:	add	x11, x21, #0x2
ffffffffc00045a4:	mov	x14, x11
ffffffffc00045a8:	and	w13, w13, #0x3f
ffffffffc00045ac:	lsl	w13, w13, #6
ffffffffc00045b0:	cmp	w12, #0xe0
ffffffffc00045b4:	b.hs	#-0x38 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x74>
ffffffffc00045b8:	b	#0x48 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0xf8>
ffffffffc00045bc:	mov	w15, wzr
ffffffffc00045c0:	mov	x14, x10
ffffffffc00045c4:	cmp	w12, #0xf0
ffffffffc00045c8:	b.lo	#0x38 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0xf8>
ffffffffc00045cc:	orr	w13, w15, w13
ffffffffc00045d0:	cmp	x14, x10
ffffffffc00045d4:	b.eq	#0x14 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0xe0>
ffffffffc00045d8:	ldrb	w11, [x14], #0x1
ffffffffc00045dc:	and	w15, w11, #0x3f
ffffffffc00045e0:	mov	x11, x14
ffffffffc00045e4:	b	#0x8 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0xe4>
ffffffffc00045e8:	mov	w15, wzr
ffffffffc00045ec:	ubfiz	w12, w12, #18, #3
ffffffffc00045f0:	bfi	w12, w13, #6, #12
ffffffffc00045f4:	orr	w12, w12, w15
ffffffffc00045f8:	cmp	w12, #0x110, lsl #12
ffffffffc00045fc:	b.eq	#0x118 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x20c>
ffffffffc0004600:	cbz	x9, #0x100 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1f8>
ffffffffc0004604:	mov	w13, #0x110000
ffffffffc0004608:	sub	x15, x11, x21
ffffffffc000460c:	cmp	x10, x11
ffffffffc0004610:	b.eq	#0x104 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x20c>
ffffffffc0004614:	mov	x14, x11
ffffffffc0004618:	mov	x12, x15
ffffffffc000461c:	ldrsb	w15, [x14], #0x1
ffffffffc0004620:	tbz	w15, #0x1f, #0xa0 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1b8>
ffffffffc0004624:	and	w15, w15, #0xff
ffffffffc0004628:	cmp	x14, x10
ffffffffc000462c:	b.eq	#0x54 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x178>
ffffffffc0004630:	ldrb	w16, [x11, #0x1]
ffffffffc0004634:	add	x14, x11, #0x2
ffffffffc0004638:	mov	x17, x14
ffffffffc000463c:	and	w16, w16, #0x3f
ffffffffc0004640:	cmp	w15, #0xe0
ffffffffc0004644:	b.lo	#0x7c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1b8>
ffffffffc0004648:	cmp	x17, x10
ffffffffc000464c:	b.eq	#0x48 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x18c>
ffffffffc0004650:	ldrb	w14, [x17], #0x1
ffffffffc0004654:	and	w18, w14, #0x3f
ffffffffc0004658:	mov	x14, x17
ffffffffc000465c:	cmp	w15, #0xf0
ffffffffc0004660:	b.lo	#0x60 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1b8>
ffffffffc0004664:	bfi	w18, w16, #6, #6
ffffffffc0004668:	cmp	x17, x10
ffffffffc000466c:	b.eq	#0x3c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1a0>
ffffffffc0004670:	ldrb	w14, [x17], #0x1
ffffffffc0004674:	and	w16, w14, #0x3f
ffffffffc0004678:	mov	x14, x17
ffffffffc000467c:	b	#0x30 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1a4>
ffffffffc0004680:	mov	w16, wzr
ffffffffc0004684:	mov	x17, x10
ffffffffc0004688:	cmp	w15, #0xe0
ffffffffc000468c:	b.hs	#-0x44 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x140>
ffffffffc0004690:	b	#0x30 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1b8>
ffffffffc0004694:	mov	w18, wzr
ffffffffc0004698:	mov	x17, x10
ffffffffc000469c:	cmp	w15, #0xf0
ffffffffc00046a0:	b.hs	#-0x3c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x15c>
ffffffffc00046a4:	b	#0x1c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1b8>
ffffffffc00046a8:	mov	w16, wzr
ffffffffc00046ac:	ubfiz	w15, w15, #18, #3
ffffffffc00046b0:	bfi	w15, w18, #6, #12
ffffffffc00046b4:	orr	w15, w15, w16
ffffffffc00046b8:	cmp	w15, w13
ffffffffc00046bc:	b.eq	#0x58 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x20c>
ffffffffc00046c0:	sub	x11, x12, x11
ffffffffc00046c4:	sub	x9, x9, #0x1
ffffffffc00046c8:	add	x15, x11, x14
ffffffffc00046cc:	mov	x11, x14
ffffffffc00046d0:	cbnz	x9, #-0xc4 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x104>
ffffffffc00046d4:	cbz	x12, #0x30 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1fc>
ffffffffc00046d8:	cmp	x12, x19
ffffffffc00046dc:	b.eq	#0x28 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1fc>
ffffffffc00046e0:	cmp	x12, x19
ffffffffc00046e4:	b.hs	#0x10 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1ec>
ffffffffc00046e8:	ldrsb	w9, [x21, x12]
ffffffffc00046ec:	cmn	w9, #0x40
ffffffffc00046f0:	b.ge	#0x14 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x1fc>
ffffffffc00046f4:	mov	x12, xzr
ffffffffc00046f8:	mov	x9, xzr
ffffffffc00046fc:	b	#0xc <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x200>
ffffffffc0004700:	mov	x12, xzr
ffffffffc0004704:	mov	x9, x21
ffffffffc0004708:	cmp	x9, #0x0
ffffffffc000470c:	csel	x19, x19, x12, eq
ffffffffc0004710:	csel	x21, x21, x9, eq
ffffffffc0004714:	cmp	x8, #0x1
ffffffffc0004718:	b.ne	#0xc4 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x2d4>
ffffffffc000471c:	cbz	x19, #0x18 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x22c>
ffffffffc0004720:	cmp	x19, #0x1
ffffffffc0004724:	b.ne	#0x28 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x244>
ffffffffc0004728:	mov	x10, xzr
ffffffffc000472c:	mov	x8, x21
ffffffffc0004730:	b	#0x68 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x290>
ffffffffc0004734:	mov	x10, xzr
ffffffffc0004738:	ldr	x8, [x20, #0x8]
ffffffffc000473c:	sub	x9, x19, x10
ffffffffc0004740:	cmp	x9, x8
ffffffffc0004744:	b.lo	#0x80 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x2bc>
ffffffffc0004748:	b	#0x94 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x2d4>
ffffffffc000474c:	and	x9, x19, #0xfffffffffffffffe
ffffffffc0004750:	mov	x10, xzr
ffffffffc0004754:	mov	x11, xzr
ffffffffc0004758:	add	x8, x21, x9
ffffffffc000475c:	add	x12, x21, #0x1
ffffffffc0004760:	mov	x13, x9
ffffffffc0004764:	ldurb	w14, [x12, #-0x1]
ffffffffc0004768:	ldrb	w15, [x12], #0x2
ffffffffc000476c:	and	w15, w15, #0xc0
ffffffffc0004770:	and	w14, w14, #0xc0
ffffffffc0004774:	cmp	w14, #0x80
ffffffffc0004778:	cinc	x10, x10, eq
ffffffffc000477c:	cmp	w15, #0x80
ffffffffc0004780:	cinc	x11, x11, eq
ffffffffc0004784:	subs	x13, x13, #0x2
ffffffffc0004788:	b.ne	#-0x24 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x25c>
ffffffffc000478c:	add	x10, x11, x10
ffffffffc0004790:	cmp	x19, x9
ffffffffc0004794:	b.eq	#0x20 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x2ac>
ffffffffc0004798:	add	x9, x21, x19
ffffffffc000479c:	ldrb	w11, [x8], #0x1
ffffffffc00047a0:	and	w11, w11, #0xc0
ffffffffc00047a4:	cmp	w11, #0x80
ffffffffc00047a8:	cinc	x10, x10, eq
ffffffffc00047ac:	cmp	x9, x8
ffffffffc00047b0:	b.ne	#-0x14 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x294>
ffffffffc00047b4:	ldr	x8, [x20, #0x8]
ffffffffc00047b8:	sub	x9, x19, x10
ffffffffc00047bc:	cmp	x9, x8
ffffffffc00047c0:	b.hs	#0x1c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x2d4>
ffffffffc00047c4:	cbz	x19, #0x3c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x2f8>
ffffffffc00047c8:	cmp	x19, #0x1
ffffffffc00047cc:	b.ne	#0x3c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x300>
ffffffffc00047d0:	mov	x11, xzr
ffffffffc00047d4:	mov	x9, x21
ffffffffc00047d8:	b	#0x7c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x34c>
ffffffffc00047dc:	ldp	x0, x8, [x20, #0x20]
ffffffffc00047e0:	mov	x1, x21
ffffffffc00047e4:	mov	x2, x19
ffffffffc00047e8:	ldp	x19, x30, [sp, #0x30]
ffffffffc00047ec:	ldp	x21, x20, [sp, #0x20]
ffffffffc00047f0:	ldp	x23, x22, [sp, #0x10]
ffffffffc00047f4:	ldr	x3, [x8, #0x18]
ffffffffc00047f8:	ldr	x24, [sp], #0x40
ffffffffc00047fc:	br	x3
ffffffffc0004800:	mov	x11, xzr
ffffffffc0004804:	b	#0x6c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x368>
ffffffffc0004808:	and	x10, x19, #0xfffffffffffffffe
ffffffffc000480c:	mov	x11, xzr
ffffffffc0004810:	mov	x12, xzr
ffffffffc0004814:	add	x9, x21, x10
ffffffffc0004818:	add	x13, x21, #0x1
ffffffffc000481c:	mov	x14, x10
ffffffffc0004820:	ldurb	w15, [x13, #-0x1]
ffffffffc0004824:	ldrb	w16, [x13], #0x2
ffffffffc0004828:	and	w16, w16, #0xc0
ffffffffc000482c:	and	w15, w15, #0xc0
ffffffffc0004830:	cmp	w15, #0x80
ffffffffc0004834:	cinc	x11, x11, eq
ffffffffc0004838:	cmp	w16, #0x80
ffffffffc000483c:	cinc	x12, x12, eq
ffffffffc0004840:	subs	x14, x14, #0x2
ffffffffc0004844:	b.ne	#-0x24 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x318>
ffffffffc0004848:	add	x11, x12, x11
ffffffffc000484c:	cmp	x19, x10
ffffffffc0004850:	b.eq	#0x20 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x368>
ffffffffc0004854:	add	x10, x21, x19
ffffffffc0004858:	ldrb	w12, [x9], #0x1
ffffffffc000485c:	and	w12, w12, #0xc0
ffffffffc0004860:	cmp	w12, #0x80
ffffffffc0004864:	cinc	x11, x11, eq
ffffffffc0004868:	cmp	x10, x9
ffffffffc000486c:	b.ne	#-0x14 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x350>
ffffffffc0004870:	ldrb	w9, [x20, #0x58]
ffffffffc0004874:	sub	x10, x11, x19
ffffffffc0004878:	add	x23, x10, x8
ffffffffc000487c:	cmp	w9, #0x3
ffffffffc0004880:	csel	w8, wzr, w9, eq
ffffffffc0004884:	tst	w8, #0x3
ffffffffc0004888:	b.eq	#0x18 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x398>
ffffffffc000488c:	cmp	w8, #0x2
ffffffffc0004890:	b.eq	#0x18 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x3a0>
ffffffffc0004894:	mov	x22, x23
ffffffffc0004898:	mov	x23, xzr
ffffffffc000489c:	b	#0x18 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x3ac>
ffffffffc00048a0:	mov	x22, xzr
ffffffffc00048a4:	b	#0x10 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x3ac>
ffffffffc00048a8:	add	x8, x23, #0x1
ffffffffc00048ac:	lsr	x22, x23, #1
ffffffffc00048b0:	lsr	x23, x8, #1
ffffffffc00048b4:	mov	x24, #-0x1
ffffffffc00048b8:	add	x24, x24, #0x1
ffffffffc00048bc:	cmp	x24, x22
ffffffffc00048c0:	b.hs	#0x1c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x3d4>
ffffffffc00048c4:	ldp	x0, x8, [x20, #0x20]
ffffffffc00048c8:	ldr	w1, [x20, #0x54]
ffffffffc00048cc:	ldr	x8, [x8, #0x20]
ffffffffc00048d0:	blr	x8
ffffffffc00048d4:	tbz	w0, #0x0, #-0x1c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x3b0>
ffffffffc00048d8:	b	#0x48 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x418>
ffffffffc00048dc:	ldp	x0, x8, [x20, #0x20]
ffffffffc00048e0:	ldr	w22, [x20, #0x54]
ffffffffc00048e4:	mov	x1, x21
ffffffffc00048e8:	mov	x2, x19
ffffffffc00048ec:	ldr	x8, [x8, #0x18]
ffffffffc00048f0:	blr	x8
ffffffffc00048f4:	tbnz	w0, #0x0, #0x2c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x418>
ffffffffc00048f8:	ldp	x19, x20, [x20, #0x20]
ffffffffc00048fc:	mov	x21, #-0x1
ffffffffc0004900:	add	x21, x21, #0x1
ffffffffc0004904:	cmp	x21, x23
ffffffffc0004908:	b.hs	#0x30 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x430>
ffffffffc000490c:	ldr	x8, [x20, #0x20]
ffffffffc0004910:	mov	x0, x19
ffffffffc0004914:	mov	w1, w22
ffffffffc0004918:	blr	x8
ffffffffc000491c:	tbz	w0, #0x0, #-0x1c <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x3f8>
ffffffffc0004920:	orr	w0, wzr, #0x1
ffffffffc0004924:	ldp	x19, x30, [sp, #0x30]
ffffffffc0004928:	ldp	x21, x20, [sp, #0x20]
ffffffffc000492c:	ldp	x23, x22, [sp, #0x10]
ffffffffc0004930:	ldr	x24, [sp], #0x40
ffffffffc0004934:	ret
ffffffffc0004938:	mov	w0, wzr
ffffffffc000493c:	b	#-0x18 <core::fmt::Formatter::pad::h48b06a2d4d46a221+0x41c>

ffffffffc0004940 <core::fmt::Formatter as core::fmt::Write>::write_fmt::h90a4062c2bd7f95c:
ffffffffc0004940:	sub	sp, sp, #0x50
ffffffffc0004944:	str	x20, [sp, #0x30]
ffffffffc0004948:	orr	w2, wzr, #0x30
ffffffffc000494c:	stp	x19, x30, [sp, #0x40]
ffffffffc0004950:	ldp	x19, x20, [x0, #0x20]
ffffffffc0004954:	mov	x0, sp
ffffffffc0004958:	bl	#0x988 <memcpy>
ffffffffc000495c:	mov	x2, sp
ffffffffc0004960:	mov	x0, x19
ffffffffc0004964:	mov	x1, x20
ffffffffc0004968:	bl	#-0xb30 <core::fmt::write::h30a176880c7ec5aa>
ffffffffc000496c:	ldp	x19, x30, [sp, #0x40]
ffffffffc0004970:	ldr	x20, [sp, #0x30]
ffffffffc0004974:	add	sp, sp, #0x50
ffffffffc0004978:	ret
ffffffffc000497c:	udf	#0x0

ffffffffc0004980 core::fmt::Formatter::alternate::h1c6611e6756eea7e:
ffffffffc0004980:	ldrb	w8, [x0, #0x50]
ffffffffc0004984:	ubfx	w0, w8, #2, #1
ffffffffc0004988:	ret
ffffffffc000498c:	udf	#0x0

ffffffffc0004990 core::fmt::Formatter::debug_struct::hb9eb7636bdc6364f:
ffffffffc0004990:	str	x20, [sp, #-0x20]!
ffffffffc0004994:	stp	x19, x30, [sp, #0x10]
ffffffffc0004998:	mov	x19, x0
ffffffffc000499c:	ldp	x0, x9, [x0, #0x20]
ffffffffc00049a0:	mov	x20, x8
ffffffffc00049a4:	ldr	x9, [x9, #0x18]
ffffffffc00049a8:	blr	x9
ffffffffc00049ac:	str	x19, [x20]
ffffffffc00049b0:	ldp	x19, x30, [sp, #0x10]
ffffffffc00049b4:	strb	w0, [x20, #0x8]
ffffffffc00049b8:	strb	wzr, [x20, #0x9]
ffffffffc00049bc:	ldr	x20, [sp], #0x20
ffffffffc00049c0:	ret
ffffffffc00049c4:	udf	#0x0

ffffffffc00049c8 core::fmt::Formatter::debug_tuple::h8df15be0add34538:
ffffffffc00049c8:	stp	x21, x20, [sp, #-0x20]!
ffffffffc00049cc:	stp	x19, x30, [sp, #0x10]
ffffffffc00049d0:	mov	x20, x0
ffffffffc00049d4:	ldp	x0, x9, [x0, #0x20]
ffffffffc00049d8:	mov	x19, x2
ffffffffc00049dc:	mov	x21, x8
ffffffffc00049e0:	ldr	x9, [x9, #0x18]
ffffffffc00049e4:	blr	x9
ffffffffc00049e8:	cmp	x19, #0x0
ffffffffc00049ec:	stp	x20, xzr, [x21]
ffffffffc00049f0:	cset	w8, eq
ffffffffc00049f4:	strb	w0, [x21, #0x10]
ffffffffc00049f8:	ldp	x19, x30, [sp, #0x10]
ffffffffc00049fc:	strb	w8, [x21, #0x11]
ffffffffc0004a00:	ldp	x21, x20, [sp], #0x20
ffffffffc0004a04:	ret

ffffffffc0004a08 <core::fmt::Formatter as core::fmt::Write>::write_char::h01ba1a71f18b5b8a:
ffffffffc0004a08:	ldp	x8, x9, [x0, #0x20]
ffffffffc0004a0c:	ldr	x2, [x9, #0x20]
ffffffffc0004a10:	mov	x0, x8
ffffffffc0004a14:	br	x2

ffffffffc0004a18 <str as core::fmt::Display>::fmt::h342559e7c894975f:
ffffffffc0004a18:	mov	x8, x0
ffffffffc0004a1c:	mov	x9, x1
ffffffffc0004a20:	mov	x0, x2
ffffffffc0004a24:	mov	x1, x8
ffffffffc0004a28:	mov	x2, x9
ffffffffc0004a2c:	b	#-0x524 <core::fmt::Formatter::pad::h48b06a2d4d46a221>

ffffffffc0004a30 <char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1:
ffffffffc0004a30:	sub	sp, sp, #0x70
ffffffffc0004a34:	stp	x28, x27, [sp, #0x10]
ffffffffc0004a38:	stp	x26, x25, [sp, #0x20]
ffffffffc0004a3c:	stp	x24, x23, [sp, #0x30]
ffffffffc0004a40:	stp	x22, x21, [sp, #0x40]
ffffffffc0004a44:	stp	x20, x19, [sp, #0x50]
ffffffffc0004a48:	mov	x19, x1
ffffffffc0004a4c:	stp	x29, x30, [sp, #0x60]
ffffffffc0004a50:	mov	x20, x0
ffffffffc0004a54:	ldp	x8, x9, [x1, #0x20]
ffffffffc0004a58:	mov	w1, #0x27
ffffffffc0004a5c:	ldr	x9, [x9, #0x20]
ffffffffc0004a60:	mov	x0, x8
ffffffffc0004a64:	blr	x9
ffffffffc0004a68:	cbz	w0, #0x28 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x60>
ffffffffc0004a6c:	ldp	x29, x30, [sp, #0x60]
ffffffffc0004a70:	ldp	x20, x19, [sp, #0x50]
ffffffffc0004a74:	ldp	x22, x21, [sp, #0x40]
ffffffffc0004a78:	ldp	x24, x23, [sp, #0x30]
ffffffffc0004a7c:	ldp	x26, x25, [sp, #0x20]
ffffffffc0004a80:	ldp	x28, x27, [sp, #0x10]
ffffffffc0004a84:	orr	w0, wzr, #0x1
ffffffffc0004a88:	add	sp, sp, #0x70
ffffffffc0004a8c:	ret
ffffffffc0004a90:	ldr	w20, [x20]
ffffffffc0004a94:	sub	w8, w20, #0x9
ffffffffc0004a98:	cmp	w8, #0x1e
ffffffffc0004a9c:	b.hi	#0x30 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x9c>
ffffffffc0004aa0:	adrp	x9, #0x3000
ffffffffc0004aa4:	add	x9, x9, #0xc10
ffffffffc0004aa8:	orr	w23, wzr, #0x2
ffffffffc0004aac:	mov	w21, #0x74
ffffffffc0004ab0:	adr	x10, #0x10
ffffffffc0004ab4:	ldrb	w11, [x9, x8]
ffffffffc0004ab8:	add	x10, x10, x11, lsl #2
ffffffffc0004abc:	br	x10
ffffffffc0004ac0:	orr	w23, wzr, #0x2
ffffffffc0004ac4:	mov	w21, #0x6e
ffffffffc0004ac8:	b	#0x15c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1f4>
ffffffffc0004acc:	cmp	w20, #0x5c
ffffffffc0004ad0:	b.ne	#0x10 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0xb0>
ffffffffc0004ad4:	orr	w23, wzr, #0x2
ffffffffc0004ad8:	mov	w21, w20
ffffffffc0004adc:	b	#0x148 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1f4>
ffffffffc0004ae0:	adrp	x0, #0x2000
ffffffffc0004ae4:	add	x0, x0, #0x9f8
ffffffffc0004ae8:	mov	w1, w20
ffffffffc0004aec:	bl	#0x6dc <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab>
ffffffffc0004af0:	cbnz	w0, #0x11c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004af4:	cmp	w20, #0x10, lsl #12
ffffffffc0004af8:	b.hs	#0x44 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x10c>
ffffffffc0004afc:	adrp	x1, #0x3000
ffffffffc0004b00:	adrp	x3, #0x3000
ffffffffc0004b04:	adrp	x5, #0x3000
ffffffffc0004b08:	add	x1, x1, #0x6f8
ffffffffc0004b0c:	add	x3, x3, #0x748
ffffffffc0004b10:	add	x5, x5, #0x877
ffffffffc0004b14:	mov	w2, #0x28
ffffffffc0004b18:	mov	w4, #0x12f
ffffffffc0004b1c:	mov	w6, #0x13c
ffffffffc0004b20:	mov	w0, w20
ffffffffc0004b24:	bl	#-0xfcc <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836>
ffffffffc0004b28:	tbnz	w0, #0x0, #0xd8 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1d0>
ffffffffc0004b2c:	b	#0xe0 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004b30:	orr	w23, wzr, #0x2
ffffffffc0004b34:	mov	w21, #0x72
ffffffffc0004b38:	b	#0xec <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1f4>
ffffffffc0004b3c:	cmp	w20, #0x20, lsl #12
ffffffffc0004b40:	b.hs	#0x38 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x148>
ffffffffc0004b44:	adrp	x1, #0x3000
ffffffffc0004b48:	adrp	x3, #0x3000
ffffffffc0004b4c:	adrp	x5, #0x3000
ffffffffc0004b50:	add	x1, x1, #0x9b3
ffffffffc0004b54:	add	x3, x3, #0x9f5
ffffffffc0004b58:	add	x5, x5, #0xa93
ffffffffc0004b5c:	mov	w2, #0x21
ffffffffc0004b60:	mov	w4, #0x9e
ffffffffc0004b64:	mov	w6, #0x17d
ffffffffc0004b68:	mov	w0, w20
ffffffffc0004b6c:	bl	#-0x1014 <core::unicode::printable::check::h26a29b86f1b8834d.llvm.3837368585666641836>
ffffffffc0004b70:	tbnz	w0, #0x0, #0x90 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1d0>
ffffffffc0004b74:	b	#0x98 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004b78:	mov	w8, #0x1ef
ffffffffc0004b7c:	movk	w8, #0xe, lsl #16
ffffffffc0004b80:	cmp	w20, w8
ffffffffc0004b84:	b.hi	#0x88 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004b88:	mov	w8, #0x5e2
ffffffffc0004b8c:	movk	w8, #0xfffd, lsl #16
ffffffffc0004b90:	add	w8, w20, w8
ffffffffc0004b94:	mov	w9, #0x6e2
ffffffffc0004b98:	movk	w9, #0xb, lsl #16
ffffffffc0004b9c:	cmp	w8, w9
ffffffffc0004ba0:	b.lo	#0x6c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004ba4:	add	w8, w8, #0xe3d
ffffffffc0004ba8:	cmp	w8, #0xc1f
ffffffffc0004bac:	b.lo	#0x60 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004bb0:	mov	w8, #0x315e
ffffffffc0004bb4:	movk	w8, #0xfffd, lsl #16
ffffffffc0004bb8:	add	w8, w20, w8
ffffffffc0004bbc:	cmp	w8, #0xe
ffffffffc0004bc0:	b.lo	#0x4c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004bc4:	mov	w9, #0xb81e
ffffffffc0004bc8:	and	w8, w20, #0x1ffffe
ffffffffc0004bcc:	movk	w9, #0x2, lsl #16
ffffffffc0004bd0:	cmp	w8, w9
ffffffffc0004bd4:	b.eq	#0x38 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004bd8:	mov	w8, #0x5929
ffffffffc0004bdc:	movk	w8, #0xfffd, lsl #16
ffffffffc0004be0:	add	w8, w20, w8
ffffffffc0004be4:	cmp	w8, #0x29
ffffffffc0004be8:	b.lo	#0x24 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004bec:	mov	w8, #0x48cb
ffffffffc0004bf0:	movk	w8, #0xfffd, lsl #16
ffffffffc0004bf4:	add	w8, w20, w8
ffffffffc0004bf8:	cmp	w8, #0xa
ffffffffc0004bfc:	b.ls	#0x10 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1dc>
ffffffffc0004c00:	orr	w23, wzr, #0x1
ffffffffc0004c04:	mov	w21, w20
ffffffffc0004c08:	b	#0x1c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x1f4>
ffffffffc0004c0c:	orr	w8, w20, #0x1
ffffffffc0004c10:	clz	w8, w8
ffffffffc0004c14:	lsr	w8, w8, #2
ffffffffc0004c18:	eor	w8, w8, #0x7
ffffffffc0004c1c:	orr	w23, wzr, #0x3
ffffffffc0004c20:	str	x8, [sp, #0x8]
ffffffffc0004c24:	adrp	x29, #0x3000
ffffffffc0004c28:	mov	w22, #0x5
ffffffffc0004c2c:	mov	w24, #0x5c
ffffffffc0004c30:	mov	w25, #0x7d
ffffffffc0004c34:	orr	w26, wzr, #0x1
ffffffffc0004c38:	mov	w27, #0x7b
ffffffffc0004c3c:	mov	w28, #0x75
ffffffffc0004c40:	add	x29, x29, #0xc2f
ffffffffc0004c44:	cmp	w23, #0x1
ffffffffc0004c48:	b.eq	#0x60 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x278>
ffffffffc0004c4c:	cmp	w23, #0x2
ffffffffc0004c50:	b.eq	#0x7c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x29c>
ffffffffc0004c54:	cmp	w23, #0x3
ffffffffc0004c58:	b.ne	#0x10c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x334>
ffffffffc0004c5c:	and	w8, w22, #0xff
ffffffffc0004c60:	sub	w8, w8, #0x1
ffffffffc0004c64:	cmp	w8, #0x4
ffffffffc0004c68:	b.hi	#0xfc <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x334>
ffffffffc0004c6c:	adr	x9, #0x1c
ffffffffc0004c70:	ldrb	w10, [x29, x8]
ffffffffc0004c74:	add	x9, x9, x10, lsl #2
ffffffffc0004c78:	orr	w23, wzr, #0x3
ffffffffc0004c7c:	orr	w22, wzr, #0x4
ffffffffc0004c80:	mov	w1, w24
ffffffffc0004c84:	br	x9
ffffffffc0004c88:	mov	w22, wzr
ffffffffc0004c8c:	orr	w23, wzr, #0x3
ffffffffc0004c90:	mov	w1, w25
ffffffffc0004c94:	ldp	x0, x8, [x19, #0x20]
ffffffffc0004c98:	ldr	x8, [x8, #0x20]
ffffffffc0004c9c:	blr	x8
ffffffffc0004ca0:	tbz	w0, #0x0, #-0x5c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x214>
ffffffffc0004ca4:	b	#-0x238 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x3c>
ffffffffc0004ca8:	cmp	w21, #0x110, lsl #12
ffffffffc0004cac:	b.eq	#0xb8 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x334>
ffffffffc0004cb0:	mov	w23, wzr
ffffffffc0004cb4:	mov	w1, w21
ffffffffc0004cb8:	ldp	x0, x8, [x19, #0x20]
ffffffffc0004cbc:	ldr	x8, [x8, #0x20]
ffffffffc0004cc0:	blr	x8
ffffffffc0004cc4:	tbz	w0, #0x0, #-0x80 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x214>
ffffffffc0004cc8:	b	#-0x25c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x3c>
ffffffffc0004ccc:	orr	w23, wzr, #0x1
ffffffffc0004cd0:	mov	w1, w24
ffffffffc0004cd4:	ldp	x0, x8, [x19, #0x20]
ffffffffc0004cd8:	ldr	x8, [x8, #0x20]
ffffffffc0004cdc:	blr	x8
ffffffffc0004ce0:	tbz	w0, #0x0, #-0x9c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x214>
ffffffffc0004ce4:	b	#-0x278 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x3c>
ffffffffc0004ce8:	ldr	x13, [sp, #0x8]
ffffffffc0004cec:	orr	w9, wzr, #0x30
ffffffffc0004cf0:	ubfiz	w8, w13, #2, #3
ffffffffc0004cf4:	sub	x10, x13, #0x1
ffffffffc0004cf8:	lsr	w8, w20, w8
ffffffffc0004cfc:	and	w11, w8, #0xf
ffffffffc0004d00:	add	w12, w11, #0x57
ffffffffc0004d04:	cmp	w11, #0xa
ffffffffc0004d08:	bfxil	w9, w8, #0, #4
ffffffffc0004d0c:	csel	w1, w9, w12, lo
ffffffffc0004d10:	cmp	x13, #0x0
ffffffffc0004d14:	csel	x8, xzr, x10, eq
ffffffffc0004d18:	cinc	w22, w26, ne
ffffffffc0004d1c:	str	x8, [sp, #0x8]
ffffffffc0004d20:	b	#0x2c <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x31c>
ffffffffc0004d24:	orr	w23, wzr, #0x3
ffffffffc0004d28:	orr	w22, wzr, #0x2
ffffffffc0004d2c:	mov	w1, w27
ffffffffc0004d30:	ldp	x0, x8, [x19, #0x20]
ffffffffc0004d34:	ldr	x8, [x8, #0x20]
ffffffffc0004d38:	blr	x8
ffffffffc0004d3c:	tbz	w0, #0x0, #-0xf8 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x214>
ffffffffc0004d40:	b	#-0x2d4 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x3c>
ffffffffc0004d44:	orr	w22, wzr, #0x3
ffffffffc0004d48:	mov	w1, w28
ffffffffc0004d4c:	orr	w23, wzr, #0x3
ffffffffc0004d50:	ldp	x0, x8, [x19, #0x20]
ffffffffc0004d54:	ldr	x8, [x8, #0x20]
ffffffffc0004d58:	blr	x8
ffffffffc0004d5c:	tbz	w0, #0x0, #-0x118 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x214>
ffffffffc0004d60:	b	#-0x2f4 <<char as core::fmt::Debug>::fmt::h1479cdfd7dfc61e1+0x3c>
ffffffffc0004d64:	ldp	x0, x8, [x19, #0x20]
ffffffffc0004d68:	ldp	x29, x30, [sp, #0x60]
ffffffffc0004d6c:	ldp	x22, x21, [sp, #0x40]
ffffffffc0004d70:	ldp	x24, x23, [sp, #0x30]
ffffffffc0004d74:	ldp	x26, x25, [sp, #0x20]
ffffffffc0004d78:	ldp	x28, x27, [sp, #0x10]
ffffffffc0004d7c:	mov	w1, #0x27
ffffffffc0004d80:	ldr	x2, [x8, #0x20]
ffffffffc0004d84:	ldp	x20, x19, [sp, #0x50]
ffffffffc0004d88:	add	sp, sp, #0x70
ffffffffc0004d8c:	br	x2

ffffffffc0004d90 <core::fmt::Error as core::fmt::Debug>::fmt::hcd4d01dc83aa638a:
ffffffffc0004d90:	ldp	x0, x8, [x1, #0x20]
ffffffffc0004d94:	adrp	x1, #0x3000
ffffffffc0004d98:	add	x1, x1, #0xdd8
ffffffffc0004d9c:	mov	w2, #0x5
ffffffffc0004da0:	ldr	x3, [x8, #0x18]
ffffffffc0004da4:	br	x3

ffffffffc0004da8 <&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc:
ffffffffc0004da8:	sub	sp, sp, #0x90
ffffffffc0004dac:	ldr	w9, [x1, #0x50]
ffffffffc0004db0:	ldr	x10, [x0]
ffffffffc0004db4:	str	x30, [sp, #0x80]
ffffffffc0004db8:	tbnz	w9, #0x4, #0xc0 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0xd0>
ffffffffc0004dbc:	ldr	x8, [x10]
ffffffffc0004dc0:	tbnz	w9, #0x5, #0x110 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x128>
ffffffffc0004dc4:	adrp	x9, #0x2000
ffffffffc0004dc8:	lsr	x10, x8, #4
ffffffffc0004dcc:	cmp	x10, #0x271
ffffffffc0004dd0:	ldr	x9, [x9, #0x258]
ffffffffc0004dd4:	b.lo	#0x174 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x1a0>
ffffffffc0004dd8:	mov	x11, #0x594b
ffffffffc0004ddc:	mov	x13, #0xf5c3
ffffffffc0004de0:	movk	x11, #0x3886, lsl #16
ffffffffc0004de4:	movk	x13, #0x5c28, lsl #16
ffffffffc0004de8:	movk	x11, #0xc5d6, lsl #32
ffffffffc0004dec:	movk	x13, #0xc28f, lsl #32
ffffffffc0004df0:	mov	w16, #0xe0ff
ffffffffc0004df4:	mov	x10, xzr
ffffffffc0004df8:	movk	x11, #0x346d, lsl #48
ffffffffc0004dfc:	mov	w12, #0x2710
ffffffffc0004e00:	movk	x13, #0x28f5, lsl #48
ffffffffc0004e04:	mov	w14, #0x64
ffffffffc0004e08:	mov	x15, sp
ffffffffc0004e0c:	movk	w16, #0x5f5, lsl #16
ffffffffc0004e10:	mov	x17, x8
ffffffffc0004e14:	umulh	x8, x8, x11
ffffffffc0004e18:	add	x3, x15, x10
ffffffffc0004e1c:	lsr	x8, x8, #11
ffffffffc0004e20:	msub	x18, x8, x12, x17
ffffffffc0004e24:	sub	x10, x10, #0x4
ffffffffc0004e28:	cmp	x17, x16
ffffffffc0004e2c:	lsr	x0, x18, #2
ffffffffc0004e30:	umulh	x0, x0, x13
ffffffffc0004e34:	lsr	x0, x0, #2
ffffffffc0004e38:	add	x2, x9, x0, lsl #1
ffffffffc0004e3c:	msub	x18, x0, x14, x18
ffffffffc0004e40:	ldrb	w0, [x2, #0x1]
ffffffffc0004e44:	add	x18, x9, x18, lsl #1
ffffffffc0004e48:	ldrb	w2, [x2]
ffffffffc0004e4c:	strb	w0, [x3, #0x24]
ffffffffc0004e50:	strb	w2, [x3, #0x23]
ffffffffc0004e54:	ldrb	w0, [x18, #0x1]
ffffffffc0004e58:	ldrb	w18, [x18]
ffffffffc0004e5c:	strb	w0, [x3, #0x26]
ffffffffc0004e60:	strb	w18, [x3, #0x25]
ffffffffc0004e64:	b.hi	#-0x54 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x68>
ffffffffc0004e68:	add	x10, x10, #0x27
ffffffffc0004e6c:	cmp	x8, #0x64
ffffffffc0004e70:	b.ge	#0xe4 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x1ac>
ffffffffc0004e74:	b	#0x120 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x1ec>
ffffffffc0004e78:	ldr	x10, [x10]
ffffffffc0004e7c:	mov	x8, xzr
ffffffffc0004e80:	mov	x9, sp
ffffffffc0004e84:	and	w13, w10, #0xf
ffffffffc0004e88:	orr	w14, wzr, #0x30
ffffffffc0004e8c:	lsr	x12, x10, #4
ffffffffc0004e90:	bfxil	w14, w10, #0, #4
ffffffffc0004e94:	add	w10, w13, #0x57
ffffffffc0004e98:	cmp	w13, #0xa
ffffffffc0004e9c:	add	x11, x9, x8
ffffffffc0004ea0:	csel	w13, w14, w10, lo
ffffffffc0004ea4:	sub	x8, x8, #0x1
ffffffffc0004ea8:	mov	x10, x12
ffffffffc0004eac:	strb	w13, [x11, #0x7f]
ffffffffc0004eb0:	cbnz	x12, #-0x2c <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0xdc>
ffffffffc0004eb4:	add	x0, x8, #0x80
ffffffffc0004eb8:	cmp	x0, #0x81
ffffffffc0004ebc:	b.hs	#0x148 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x25c>
ffffffffc0004ec0:	mov	x9, sp
ffffffffc0004ec4:	neg	x5, x8
ffffffffc0004ec8:	add	x8, x9, x8
ffffffffc0004ecc:	b	#0x54 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x178>
ffffffffc0004ed0:	mov	x9, xzr
ffffffffc0004ed4:	mov	x10, sp
ffffffffc0004ed8:	and	w13, w8, #0xf
ffffffffc0004edc:	orr	w14, wzr, #0x30
ffffffffc0004ee0:	lsr	x12, x8, #4
ffffffffc0004ee4:	bfxil	w14, w8, #0, #4
ffffffffc0004ee8:	add	w8, w13, #0x37
ffffffffc0004eec:	cmp	w13, #0xa
ffffffffc0004ef0:	add	x11, x10, x9
ffffffffc0004ef4:	csel	w13, w14, w8, lo
ffffffffc0004ef8:	sub	x9, x9, #0x1
ffffffffc0004efc:	mov	x8, x12
ffffffffc0004f00:	strb	w13, [x11, #0x7f]
ffffffffc0004f04:	cbnz	x12, #-0x2c <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x130>
ffffffffc0004f08:	add	x0, x9, #0x80
ffffffffc0004f0c:	cmp	x0, #0x81
ffffffffc0004f10:	b.hs	#0xf4 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x25c>
ffffffffc0004f14:	mov	x8, sp
ffffffffc0004f18:	neg	x5, x9
ffffffffc0004f1c:	add	x8, x8, x9
ffffffffc0004f20:	adrp	x2, #0x2000
ffffffffc0004f24:	add	x4, x8, #0x80
ffffffffc0004f28:	add	x2, x2, #0x188
ffffffffc0004f2c:	mov	x0, x1
ffffffffc0004f30:	orr	w1, wzr, #0x1
ffffffffc0004f34:	orr	w3, wzr, #0x2
ffffffffc0004f38:	bl	#-0xde0 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0004f3c:	ldr	x30, [sp, #0x80]
ffffffffc0004f40:	add	sp, sp, #0x90
ffffffffc0004f44:	ret
ffffffffc0004f48:	mov	w10, #0x27
ffffffffc0004f4c:	cmp	x8, #0x64
ffffffffc0004f50:	b.lt	#0x44 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x1ec>
ffffffffc0004f54:	mov	w12, #0x851f
ffffffffc0004f58:	and	w11, w8, #0xffff
ffffffffc0004f5c:	movk	w12, #0x51eb, lsl #16
ffffffffc0004f60:	sub	x10, x10, #0x2
ffffffffc0004f64:	umull	x11, w11, w12
ffffffffc0004f68:	mov	w12, #0x64
ffffffffc0004f6c:	lsr	x11, x11, #37
ffffffffc0004f70:	msub	w8, w11, w12, w8
ffffffffc0004f74:	mov	x12, sp
ffffffffc0004f78:	add	x12, x12, x10
ffffffffc0004f7c:	add	x8, x9, w8, uxth #1
ffffffffc0004f80:	ldrb	w13, [x8, #0x1]
ffffffffc0004f84:	ldrb	w14, [x8]
ffffffffc0004f88:	mov	x8, x11
ffffffffc0004f8c:	strb	w13, [x12, #0x1]
ffffffffc0004f90:	strb	w14, [x12]
ffffffffc0004f94:	cmp	x8, #0xa
ffffffffc0004f98:	b.ge	#0x18 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x208>
ffffffffc0004f9c:	sub	x9, x10, #0x1
ffffffffc0004fa0:	add	w8, w8, #0x30
ffffffffc0004fa4:	mov	x10, sp
ffffffffc0004fa8:	strb	w8, [x10, x9]
ffffffffc0004fac:	b	#0x24 <<&T as core::fmt::Debug>::fmt::h9c9d04671db7b1cc+0x228>
ffffffffc0004fb0:	add	x8, x9, x8, lsl #1
ffffffffc0004fb4:	sub	x9, x10, #0x2
ffffffffc0004fb8:	mov	x10, sp
ffffffffc0004fbc:	ldrb	w11, [x8, #0x1]
ffffffffc0004fc0:	add	x10, x10, x9
ffffffffc0004fc4:	ldrb	w8, [x8]
ffffffffc0004fc8:	strb	w11, [x10, #0x1]
ffffffffc0004fcc:	strb	w8, [x10]
ffffffffc0004fd0:	mov	x8, sp
ffffffffc0004fd4:	mov	w10, #0x27
ffffffffc0004fd8:	adrp	x2, #0x2000
ffffffffc0004fdc:	add	x4, x8, x9
ffffffffc0004fe0:	sub	x5, x10, x9
ffffffffc0004fe4:	add	x2, x2, #0x310
ffffffffc0004fe8:	mov	x0, x1
ffffffffc0004fec:	orr	w1, wzr, #0x1
ffffffffc0004ff0:	mov	x3, xzr
ffffffffc0004ff4:	bl	#-0xe9c <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0004ff8:	ldr	x30, [sp, #0x80]
ffffffffc0004ffc:	add	sp, sp, #0x90
ffffffffc0005000:	ret
ffffffffc0005004:	orr	w1, wzr, #0x80
ffffffffc0005008:	bl	#-0x1500 <core::slice::slice_index_order_fail::ha4d039b02b1440b5>
ffffffffc000500c:	brk	#0x1

ffffffffc0005010 <&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3:
ffffffffc0005010:	sub	sp, sp, #0x90
ffffffffc0005014:	ldr	w9, [x1, #0x50]
ffffffffc0005018:	ldr	x10, [x0]
ffffffffc000501c:	str	x30, [sp, #0x80]
ffffffffc0005020:	tbnz	w9, #0x4, #0x54 <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0x64>
ffffffffc0005024:	ldrb	w8, [x10]
ffffffffc0005028:	tbnz	w9, #0x5, #0xa4 <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0xbc>
ffffffffc000502c:	adrp	x9, #0x1000
ffffffffc0005030:	cmp	w8, #0x64
ffffffffc0005034:	ldr	x9, [x9, #0x258]
ffffffffc0005038:	b.lo	#0x10c <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0x134>
ffffffffc000503c:	mov	w10, #0x851f
ffffffffc0005040:	movk	w10, #0x51eb, lsl #16
ffffffffc0005044:	mov	w11, #0x64
ffffffffc0005048:	umull	x10, w8, w10
ffffffffc000504c:	lsr	x10, x10, #37
ffffffffc0005050:	msub	w8, w10, w11, w8
ffffffffc0005054:	add	x8, x9, w8, uxtb #1
ffffffffc0005058:	mov	w9, #0x24
ffffffffc000505c:	ldrb	w11, [x8, #0x1]
ffffffffc0005060:	ldrb	w12, [x8]
ffffffffc0005064:	mov	w8, w10
ffffffffc0005068:	strb	w11, [sp, #0x26]
ffffffffc000506c:	strb	w12, [sp, #0x25]
ffffffffc0005070:	b	#0xe0 <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0x140>
ffffffffc0005074:	ldrb	w10, [x10]
ffffffffc0005078:	mov	x8, xzr
ffffffffc000507c:	mov	x9, sp
ffffffffc0005080:	and	w12, w10, #0xf
ffffffffc0005084:	orr	w14, wzr, #0x30
ffffffffc0005088:	ubfx	w13, w10, #4, #4
ffffffffc000508c:	bfxil	w14, w10, #0, #4
ffffffffc0005090:	add	w10, w12, #0x57
ffffffffc0005094:	cmp	w12, #0xa
ffffffffc0005098:	add	x11, x9, x8
ffffffffc000509c:	csel	w12, w14, w10, lo
ffffffffc00050a0:	sub	x8, x8, #0x1
ffffffffc00050a4:	mov	w10, w13
ffffffffc00050a8:	strb	w12, [x11, #0x7f]
ffffffffc00050ac:	cbnz	w13, #-0x2c <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0x70>
ffffffffc00050b0:	add	x0, x8, #0x80
ffffffffc00050b4:	cmp	x0, #0x81
ffffffffc00050b8:	b.hs	#0xf4 <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0x19c>
ffffffffc00050bc:	mov	x9, sp
ffffffffc00050c0:	neg	x5, x8
ffffffffc00050c4:	add	x8, x9, x8
ffffffffc00050c8:	b	#0x54 <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0x10c>
ffffffffc00050cc:	mov	x9, xzr
ffffffffc00050d0:	mov	x10, sp
ffffffffc00050d4:	and	w12, w8, #0xf
ffffffffc00050d8:	orr	w14, wzr, #0x30
ffffffffc00050dc:	ubfx	w13, w8, #4, #4
ffffffffc00050e0:	bfxil	w14, w8, #0, #4
ffffffffc00050e4:	add	w8, w12, #0x37
ffffffffc00050e8:	cmp	w12, #0xa
ffffffffc00050ec:	add	x11, x10, x9
ffffffffc00050f0:	csel	w12, w14, w8, lo
ffffffffc00050f4:	sub	x9, x9, #0x1
ffffffffc00050f8:	mov	w8, w13
ffffffffc00050fc:	strb	w12, [x11, #0x7f]
ffffffffc0005100:	cbnz	w13, #-0x2c <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0xc4>
ffffffffc0005104:	add	x0, x9, #0x80
ffffffffc0005108:	cmp	x0, #0x81
ffffffffc000510c:	b.hs	#0xa0 <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0x19c>
ffffffffc0005110:	mov	x8, sp
ffffffffc0005114:	neg	x5, x9
ffffffffc0005118:	add	x8, x8, x9
ffffffffc000511c:	adrp	x2, #0x1000
ffffffffc0005120:	add	x4, x8, #0x80
ffffffffc0005124:	add	x2, x2, #0x188
ffffffffc0005128:	mov	x0, x1
ffffffffc000512c:	orr	w1, wzr, #0x1
ffffffffc0005130:	orr	w3, wzr, #0x2
ffffffffc0005134:	bl	#-0xfdc <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc0005138:	ldr	x30, [sp, #0x80]
ffffffffc000513c:	add	sp, sp, #0x90
ffffffffc0005140:	ret
ffffffffc0005144:	cmp	w8, #0xa
ffffffffc0005148:	b.hs	#0x18 <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0x150>
ffffffffc000514c:	mov	w9, #0x26
ffffffffc0005150:	add	w8, w8, #0x30
ffffffffc0005154:	mov	x10, sp
ffffffffc0005158:	strb	w8, [x10, x9]
ffffffffc000515c:	b	#0x1c <<&T as core::fmt::Debug>::fmt::h8d964b0cd7a666c3+0x168>
ffffffffc0005160:	add	x8, x9, x8, lsl #1
ffffffffc0005164:	mov	w9, #0x25
ffffffffc0005168:	ldrb	w10, [x8, #0x1]
ffffffffc000516c:	ldrb	w8, [x8]
ffffffffc0005170:	strb	w10, [sp, #0x26]
ffffffffc0005174:	strb	w8, [sp, #0x25]
ffffffffc0005178:	mov	x8, sp
ffffffffc000517c:	mov	w10, #0x27
ffffffffc0005180:	adrp	x2, #0x1000
ffffffffc0005184:	add	x4, x8, x9
ffffffffc0005188:	sub	x5, x10, x9
ffffffffc000518c:	add	x2, x2, #0x310
ffffffffc0005190:	mov	x0, x1
ffffffffc0005194:	orr	w1, wzr, #0x1
ffffffffc0005198:	mov	x3, xzr
ffffffffc000519c:	bl	#-0x1044 <core::fmt::Formatter::pad_integral::h25cf04c4d4fa646d>
ffffffffc00051a0:	ldr	x30, [sp, #0x80]
ffffffffc00051a4:	add	sp, sp, #0x90
ffffffffc00051a8:	ret
ffffffffc00051ac:	orr	w1, wzr, #0x80
ffffffffc00051b0:	bl	#-0x16a8 <core::slice::slice_index_order_fail::ha4d039b02b1440b5>
ffffffffc00051b4:	brk	#0x1

ffffffffc00051b8 <&T as core::fmt::Display>::fmt::hfefa978f8260d9ba:
ffffffffc00051b8:	mov	x8, x1
ffffffffc00051bc:	ldp	x1, x2, [x0]
ffffffffc00051c0:	mov	x0, x8
ffffffffc00051c4:	b	#-0xcbc <core::fmt::Formatter::pad::h48b06a2d4d46a221>

ffffffffc00051c8 core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab:
ffffffffc00051c8:	cmp	w1, #0x800
ffffffffc00051cc:	b.hs	#0x10 <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab+0x14>
ffffffffc00051d0:	lsr	w8, w1, #6
ffffffffc00051d4:	add	x8, x0, w8, uxtw #3
ffffffffc00051d8:	b	#0x80 <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab+0x90>
ffffffffc00051dc:	cmp	w1, #0x10, lsl #12
ffffffffc00051e0:	b.hs	#0x30 <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab+0x48>
ffffffffc00051e4:	lsr	w8, w1, #6
ffffffffc00051e8:	sub	x8, x8, #0x20
ffffffffc00051ec:	cmp	x8, #0x3df
ffffffffc00051f0:	b.hi	#0x80 <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab+0xa8>
ffffffffc00051f4:	add	x8, x0, x8
ffffffffc00051f8:	ldr	x2, [x0, #0x108]
ffffffffc00051fc:	ldrb	w8, [x8, #0x130]
ffffffffc0005200:	cmp	x2, x8
ffffffffc0005204:	b.ls	#0x84 <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab+0xc0>
ffffffffc0005208:	ldr	x9, [x0, #0x100]
ffffffffc000520c:	b	#0x48 <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab+0x8c>
ffffffffc0005210:	lsr	w8, w1, #12
ffffffffc0005214:	sub	x8, x8, #0x10
ffffffffc0005218:	cmp	x8, #0x100
ffffffffc000521c:	b.hs	#0x80 <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab+0xd4>
ffffffffc0005220:	add	x8, x0, x8
ffffffffc0005224:	ldr	x2, [x0, #0x118]
ffffffffc0005228:	ldrb	w9, [x8, #0x510]
ffffffffc000522c:	ubfx	w8, w1, #6, #6
ffffffffc0005230:	bfi	x8, x9, #6, #8
ffffffffc0005234:	cmp	x8, x2
ffffffffc0005238:	b.hs	#0x7c <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab+0xec>
ffffffffc000523c:	ldr	x9, [x0, #0x110]
ffffffffc0005240:	ldr	x2, [x0, #0x128]
ffffffffc0005244:	ldrb	w8, [x9, x8]
ffffffffc0005248:	cmp	x2, x8
ffffffffc000524c:	b.ls	#0x7c <core::unicode::bool_trie::BoolTrie::lookup::h2fc1718a2aaa3bab+0x100>
ffffffffc0005250:	ldr	x9, [x0, #0x120]
ffffffffc0005254:	add	x8, x9, x8, lsl #3
ffffffffc0005258:	ldr	x8, [x8]
ffffffffc000525c:	orr	w9, wzr, #0x1
ffffffffc0005260:	lsl	x9, x9, x1
ffffffffc0005264:	tst	x8, x9
ffffffffc0005268:	cset	w0, ne
ffffffffc000526c:	ret
ffffffffc0005270:	adrp	x0, #0x2000
ffffffffc0005274:	add	x0, x0, #0xe60
ffffffffc0005278:	mov	x1, x8
ffffffffc000527c:	orr	w2, wzr, #0x3e0
ffffffffc0005280:	bl	#-0x3550 <core::panicking::panic_bounds_check::h5652958be485e7fc>
ffffffffc0005284:	brk	#0x1
ffffffffc0005288:	adrp	x0, #0x2000
ffffffffc000528c:	add	x0, x0, #0xe78
ffffffffc0005290:	mov	x1, x8
ffffffffc0005294:	bl	#-0x3564 <core::panicking::panic_bounds_check::h5652958be485e7fc>
ffffffffc0005298:	brk	#0x1
ffffffffc000529c:	adrp	x0, #0x2000
ffffffffc00052a0:	add	x0, x0, #0xe90
ffffffffc00052a4:	mov	x1, x8
ffffffffc00052a8:	orr	w2, wzr, #0x100
ffffffffc00052ac:	bl	#-0x357c <core::panicking::panic_bounds_check::h5652958be485e7fc>
ffffffffc00052b0:	brk	#0x1
ffffffffc00052b4:	adrp	x0, #0x2000
ffffffffc00052b8:	add	x0, x0, #0xea8
ffffffffc00052bc:	mov	x1, x8
ffffffffc00052c0:	bl	#-0x3590 <core::panicking::panic_bounds_check::h5652958be485e7fc>
ffffffffc00052c4:	brk	#0x1
ffffffffc00052c8:	adrp	x0, #0x2000
ffffffffc00052cc:	add	x0, x0, #0xec0
ffffffffc00052d0:	mov	x1, x8
ffffffffc00052d4:	bl	#-0x35a4 <core::panicking::panic_bounds_check::h5652958be485e7fc>
ffffffffc00052d8:	brk	#0x1
ffffffffc00052dc:	udf	#0x0

ffffffffc00052e0 memcpy:
ffffffffc00052e0:	cbz	x2, #0x44 <memcpy+0x44>
ffffffffc00052e4:	cmp	x2, #0x20
ffffffffc00052e8:	b.lo	#0x1c <memcpy+0x24>
ffffffffc00052ec:	add	x8, x1, x2
ffffffffc00052f0:	cmp	x8, x0
ffffffffc00052f4:	b.ls	#0x34 <memcpy+0x48>
ffffffffc00052f8:	add	x8, x0, x2
ffffffffc00052fc:	cmp	x8, x1
ffffffffc0005300:	b.ls	#0x28 <memcpy+0x48>
ffffffffc0005304:	mov	x8, xzr
ffffffffc0005308:	sub	x9, x2, x8
ffffffffc000530c:	add	x10, x0, x8
ffffffffc0005310:	add	x8, x1, x8
ffffffffc0005314:	ldrb	w11, [x8], #0x1
ffffffffc0005318:	subs	x9, x9, #0x1
ffffffffc000531c:	strb	w11, [x10], #0x1
ffffffffc0005320:	b.ne	#-0xc <memcpy+0x34>
ffffffffc0005324:	ret
ffffffffc0005328:	sub	sp, sp, #0x40
ffffffffc000532c:	and	x8, x2, #0xffffffffffffffe0
ffffffffc0005330:	add	x9, x1, #0x10
ffffffffc0005334:	add	x10, x0, #0x10
ffffffffc0005338:	mov	x11, x8
ffffffffc000533c:	mov	x12, x9
ffffffffc0005340:	ldurb	w13, [x9, #-0xf]
ffffffffc0005344:	subs	x11, x11, #0x20
ffffffffc0005348:	ldrb	w14, [x12, #-0x10]!
ffffffffc000534c:	bfi	x14, x13, #8, #8
ffffffffc0005350:	mov	x15, x12
ffffffffc0005354:	ldrb	w16, [x12, #0x3]
ffffffffc0005358:	ldrb	w17, [x12, #0x2]
ffffffffc000535c:	mov	x13, x12
ffffffffc0005360:	ldrb	w18, [x15, #0x4]!
ffffffffc0005364:	ldurb	w4, [x9, #-0xb]
ffffffffc0005368:	bfi	x17, x16, #8, #8
ffffffffc000536c:	ldrb	w3, [x15, #0x3]
ffffffffc0005370:	bfi	x14, x17, #16, #16
ffffffffc0005374:	ldrb	w15, [x15, #0x2]
ffffffffc0005378:	bfi	w18, w4, #8, #8
ffffffffc000537c:	bfi	w15, w3, #8, #8
ffffffffc0005380:	bfi	w18, w15, #16, #16
ffffffffc0005384:	bfi	x14, x18, #32, #32
ffffffffc0005388:	str	x14, [sp, #0x20]
ffffffffc000538c:	ldrb	w14, [x12, #0x9]
ffffffffc0005390:	ldrb	w15, [x13, #0x8]!
ffffffffc0005394:	bfi	x15, x14, #8, #8
ffffffffc0005398:	ldrb	w16, [x13, #0x3]
ffffffffc000539c:	ldrb	w17, [x13, #0x2]
ffffffffc00053a0:	ldrb	w18, [x13, #0x4]!
ffffffffc00053a4:	ldrb	w12, [x12, #0xd]
ffffffffc00053a8:	bfi	x17, x16, #8, #8
ffffffffc00053ac:	ldrb	w3, [x13, #0x3]
ffffffffc00053b0:	ldrb	w13, [x13, #0x2]
ffffffffc00053b4:	bfi	w18, w12, #8, #8
ffffffffc00053b8:	bfi	x15, x17, #16, #16
ffffffffc00053bc:	bfi	w13, w3, #8, #8
ffffffffc00053c0:	bfi	w18, w13, #16, #16
ffffffffc00053c4:	mov	x13, x9
ffffffffc00053c8:	bfi	x15, x18, #32, #32
ffffffffc00053cc:	str	x15, [sp, #0x28]
ffffffffc00053d0:	ldr	q0, [sp, #0x20]
ffffffffc00053d4:	ldrb	w12, [x9, #0x3]
ffffffffc00053d8:	ldrb	w14, [x9, #0x2]
ffffffffc00053dc:	ldrb	w15, [x9, #0x1]
ffffffffc00053e0:	ldrb	w16, [x9]
ffffffffc00053e4:	ldrb	w17, [x13, #0x4]!
ffffffffc00053e8:	ldrb	w3, [x9, #0x5]
ffffffffc00053ec:	bfi	x14, x12, #8, #8
ffffffffc00053f0:	mov	x12, x9
ffffffffc00053f4:	bfi	x16, x15, #8, #8
ffffffffc00053f8:	ldrb	w18, [x13, #0x3]
ffffffffc00053fc:	bfi	x16, x14, #16, #16
ffffffffc0005400:	ldrb	w13, [x13, #0x2]
ffffffffc0005404:	bfi	w17, w3, #8, #8
ffffffffc0005408:	bfi	w13, w18, #8, #8
ffffffffc000540c:	bfi	w17, w13, #16, #16
ffffffffc0005410:	bfi	x16, x17, #32, #32
ffffffffc0005414:	str	x16, [sp]
ffffffffc0005418:	ldrb	w13, [x9, #0x9]
ffffffffc000541c:	ldrb	w14, [x12, #0x8]!
ffffffffc0005420:	bfi	x14, x13, #8, #8
ffffffffc0005424:	ldrb	w15, [x12, #0x3]
ffffffffc0005428:	mov	x13, x10
ffffffffc000542c:	ldrb	w16, [x12, #0x2]
ffffffffc0005430:	ldrb	w17, [x12, #0x4]!
ffffffffc0005434:	ldrb	w3, [x9, #0xd]
ffffffffc0005438:	add	x9, x9, #0x20
ffffffffc000543c:	bfi	x16, x15, #8, #8
ffffffffc0005440:	ldrb	w18, [x12, #0x3]
ffffffffc0005444:	ldrb	w12, [x12, #0x2]
ffffffffc0005448:	bfi	w17, w3, #8, #8
ffffffffc000544c:	str	q0, [sp, #0x30]
ffffffffc0005450:	bfi	x14, x16, #16, #16
ffffffffc0005454:	bfi	w12, w18, #8, #8
ffffffffc0005458:	bfi	w17, w12, #16, #16
ffffffffc000545c:	ldr	x12, [sp, #0x30]
ffffffffc0005460:	bfi	x14, x17, #32, #32
ffffffffc0005464:	str	x14, [sp, #0x8]
ffffffffc0005468:	lsr	x16, x12, #16
ffffffffc000546c:	ldr	q1, [sp]
ffffffffc0005470:	lsr	x14, x12, #40
ffffffffc0005474:	strb	w12, [x13, #-0x10]!
ffffffffc0005478:	ldr	x18, [sp, #0x38]
ffffffffc000547c:	lsr	x15, x12, #24
ffffffffc0005480:	lsr	x17, x12, #8
ffffffffc0005484:	strb	w16, [x13, #0x2]
ffffffffc0005488:	mov	x3, x13
ffffffffc000548c:	sturb	w14, [x10, #-0xb]
ffffffffc0005490:	lsr	x14, x12, #32
ffffffffc0005494:	strb	w15, [x13, #0x3]
ffffffffc0005498:	lsr	x16, x18, #40
ffffffffc000549c:	sturb	w17, [x10, #-0xf]
ffffffffc00054a0:	lsr	x15, x12, #56
ffffffffc00054a4:	lsr	x17, x18, #8
ffffffffc00054a8:	strb	w16, [x13, #0xd]
ffffffffc00054ac:	lsr	x16, x18, #24
ffffffffc00054b0:	strb	w18, [x3, #0x8]!
ffffffffc00054b4:	strb	w17, [x13, #0x9]
ffffffffc00054b8:	lsr	x17, x18, #16
ffffffffc00054bc:	strb	w16, [x3, #0x3]
ffffffffc00054c0:	lsr	x12, x12, #48
ffffffffc00054c4:	lsr	x16, x18, #32
ffffffffc00054c8:	strb	w17, [x3, #0x2]
ffffffffc00054cc:	strb	w14, [x13, #0x4]!
ffffffffc00054d0:	lsr	x14, x18, #56
ffffffffc00054d4:	strb	w15, [x13, #0x3]
ffffffffc00054d8:	lsr	x15, x18, #48
ffffffffc00054dc:	strb	w12, [x13, #0x2]
ffffffffc00054e0:	strb	w16, [x3, #0x4]!
ffffffffc00054e4:	strb	w14, [x3, #0x3]
ffffffffc00054e8:	mov	x13, x10
ffffffffc00054ec:	strb	w15, [x3, #0x2]
ffffffffc00054f0:	add	x15, x10, #0x20
ffffffffc00054f4:	str	q1, [sp, #0x10]
ffffffffc00054f8:	ldr	x12, [sp, #0x10]
ffffffffc00054fc:	strb	w12, [x10]
ffffffffc0005500:	lsr	x16, x12, #40
ffffffffc0005504:	ldr	x14, [sp, #0x18]
ffffffffc0005508:	strb	w16, [x10, #0x5]
ffffffffc000550c:	lsr	x16, x12, #8
ffffffffc0005510:	strb	w16, [x10, #0x1]
ffffffffc0005514:	lsr	x17, x14, #24
ffffffffc0005518:	strb	w14, [x13, #0x8]!
ffffffffc000551c:	lsr	x18, x14, #16
ffffffffc0005520:	strb	w17, [x13, #0x3]
ffffffffc0005524:	lsr	x17, x14, #32
ffffffffc0005528:	strb	w18, [x13, #0x2]
ffffffffc000552c:	lsr	x18, x12, #24
ffffffffc0005530:	strb	w17, [x13, #0x4]!
ffffffffc0005534:	lsr	x17, x12, #16
ffffffffc0005538:	strb	w18, [x10, #0x3]
ffffffffc000553c:	lsr	x18, x12, #32
ffffffffc0005540:	strb	w17, [x10, #0x2]
ffffffffc0005544:	lsr	x17, x14, #40
ffffffffc0005548:	lsr	x16, x14, #8
ffffffffc000554c:	strb	w17, [x10, #0xd]
ffffffffc0005550:	lsr	x17, x12, #56
ffffffffc0005554:	lsr	x12, x12, #48
ffffffffc0005558:	strb	w16, [x10, #0x9]
ffffffffc000555c:	strb	w18, [x10, #0x4]!
ffffffffc0005560:	strb	w17, [x10, #0x3]
ffffffffc0005564:	lsr	x16, x14, #56
ffffffffc0005568:	strb	w12, [x10, #0x2]
ffffffffc000556c:	mov	x10, x15
ffffffffc0005570:	lsr	x14, x14, #48
ffffffffc0005574:	strb	w16, [x13, #0x3]
ffffffffc0005578:	strb	w14, [x13, #0x2]
ffffffffc000557c:	b.ne	#-0x240 <memcpy+0x5c>
ffffffffc0005580:	cmp	x8, x2
ffffffffc0005584:	add	sp, sp, #0x40
ffffffffc0005588:	b.eq	#-0x264 <memcpy+0x44>
ffffffffc000558c:	b	#-0x284 <memcpy+0x28>

ffffffffc0005590 memset:
ffffffffc0005590:	cbz	x2, #0x16c <memset+0x16c>
ffffffffc0005594:	cmp	x2, #0x20
ffffffffc0005598:	b.hs	#0xc <memset+0x14>
ffffffffc000559c:	mov	x8, xzr
ffffffffc00055a0:	b	#0x148 <memset+0x158>
ffffffffc00055a4:	sub	sp, sp, #0x20
ffffffffc00055a8:	dup	v0.16b, w1
ffffffffc00055ac:	and	x8, x2, #0xffffffffffffffe0
ffffffffc00055b0:	add	x10, x0, #0x10
ffffffffc00055b4:	mov	x9, x8
ffffffffc00055b8:	str	q0, [sp, #0x10]
ffffffffc00055bc:	mov	x12, x10
ffffffffc00055c0:	ldr	x11, [sp, #0x10]
ffffffffc00055c4:	subs	x9, x9, #0x20
ffffffffc00055c8:	strb	w11, [x12, #-0x10]!
ffffffffc00055cc:	ldr	x14, [sp, #0x18]
ffffffffc00055d0:	lsr	x15, x11, #24
ffffffffc00055d4:	lsr	x16, x11, #16
ffffffffc00055d8:	strb	w15, [x12, #0x3]
ffffffffc00055dc:	lsr	x13, x11, #40
ffffffffc00055e0:	strb	w16, [x12, #0x2]
ffffffffc00055e4:	mov	x17, x12
ffffffffc00055e8:	lsr	x15, x14, #40
ffffffffc00055ec:	sturb	w13, [x10, #-0xb]
ffffffffc00055f0:	lsr	x16, x14, #8
ffffffffc00055f4:	strb	w15, [x12, #0xd]
ffffffffc00055f8:	lsr	x15, x11, #8
ffffffffc00055fc:	strb	w16, [x12, #0x9]
ffffffffc0005600:	lsr	x16, x11, #32
ffffffffc0005604:	lsr	x13, x14, #16
ffffffffc0005608:	sturb	w15, [x10, #-0xf]
ffffffffc000560c:	strb	w16, [x12, #0x4]!
ffffffffc0005610:	lsr	x16, x14, #24
ffffffffc0005614:	lsr	x15, x11, #56
ffffffffc0005618:	lsr	x11, x11, #48
ffffffffc000561c:	strb	w14, [x17, #0x8]!
ffffffffc0005620:	strb	w16, [x17, #0x3]
ffffffffc0005624:	lsr	x16, x14, #32
ffffffffc0005628:	strb	w13, [x17, #0x2]
ffffffffc000562c:	lsr	x13, x14, #56
ffffffffc0005630:	strb	w11, [x12, #0x2]
ffffffffc0005634:	lsr	x11, x14, #48
ffffffffc0005638:	strb	w16, [x17, #0x4]!
ffffffffc000563c:	strb	w15, [x12, #0x3]
ffffffffc0005640:	strb	w13, [x17, #0x3]
ffffffffc0005644:	mov	x13, x10
ffffffffc0005648:	strb	w11, [x17, #0x2]
ffffffffc000564c:	str	q0, [sp]
ffffffffc0005650:	ldr	x11, [sp]
ffffffffc0005654:	strb	w11, [x10]
ffffffffc0005658:	ldr	x12, [sp, #0x8]
ffffffffc000565c:	lsr	x14, x12, #40
ffffffffc0005660:	lsr	x15, x12, #24
ffffffffc0005664:	strb	w12, [x13, #0x8]!
ffffffffc0005668:	lsr	x16, x12, #16
ffffffffc000566c:	strb	w15, [x13, #0x3]
ffffffffc0005670:	lsr	x17, x12, #8
ffffffffc0005674:	strb	w14, [x10, #0xd]
ffffffffc0005678:	lsr	x15, x12, #32
ffffffffc000567c:	strb	w16, [x13, #0x2]
ffffffffc0005680:	lsr	x14, x11, #16
ffffffffc0005684:	strb	w17, [x10, #0x9]
ffffffffc0005688:	lsr	x16, x11, #40
ffffffffc000568c:	strb	w15, [x13, #0x4]!
ffffffffc0005690:	lsr	x15, x11, #24
ffffffffc0005694:	strb	w14, [x10, #0x2]
ffffffffc0005698:	lsr	x17, x11, #8
ffffffffc000569c:	strb	w16, [x10, #0x5]
ffffffffc00056a0:	lsr	x14, x11, #32
ffffffffc00056a4:	strb	w15, [x10, #0x3]
ffffffffc00056a8:	strb	w17, [x10, #0x1]
ffffffffc00056ac:	add	x15, x10, #0x20
ffffffffc00056b0:	strb	w14, [x10, #0x4]!
ffffffffc00056b4:	lsr	x14, x11, #56
ffffffffc00056b8:	lsr	x11, x11, #48
ffffffffc00056bc:	strb	w14, [x10, #0x3]
ffffffffc00056c0:	lsr	x16, x12, #56
ffffffffc00056c4:	strb	w11, [x10, #0x2]
ffffffffc00056c8:	mov	x10, x15
ffffffffc00056cc:	lsr	x12, x12, #48
ffffffffc00056d0:	strb	w16, [x13, #0x3]
ffffffffc00056d4:	strb	w12, [x13, #0x2]
ffffffffc00056d8:	b.ne	#-0x120 <memset+0x28>
ffffffffc00056dc:	cmp	x8, x2
ffffffffc00056e0:	add	sp, sp, #0x20
ffffffffc00056e4:	b.eq	#0x18 <memset+0x16c>
ffffffffc00056e8:	sub	x9, x2, x8
ffffffffc00056ec:	add	x8, x0, x8
ffffffffc00056f0:	subs	x9, x9, #0x1
ffffffffc00056f4:	strb	w1, [x8], #0x1
ffffffffc00056f8:	b.ne	#-0x8 <memset+0x160>
ffffffffc00056fc:	ret

ffffffffc0005700 memcmp:
ffffffffc0005700:	cbz	x2, #0x2c <memcmp+0x2c>
ffffffffc0005704:	mov	x9, xzr
ffffffffc0005708:	ldrb	w8, [x0, x9]
ffffffffc000570c:	ldrb	w10, [x1, x9]
ffffffffc0005710:	subs	w8, w8, w10
ffffffffc0005714:	b.ne	#0x20 <memcmp+0x34>
ffffffffc0005718:	add	x9, x9, #0x1
ffffffffc000571c:	cmp	x9, x2
ffffffffc0005720:	b.lo	#-0x18 <memcmp+0x8>
ffffffffc0005724:	mov	w0, wzr
ffffffffc0005728:	ret
ffffffffc000572c:	mov	w0, wzr
ffffffffc0005730:	ret
ffffffffc0005734:	mov	w0, w8
ffffffffc0005738:	ret
